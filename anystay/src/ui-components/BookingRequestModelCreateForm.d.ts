/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, SwitchFieldProps, TextFieldProps } from "@aws-amplify/ui-react";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type BookingRequestModelCreateFormInputValues = {
    owners?: string[];
    arrivalDate?: string;
    departureDate?: string;
    guests?: number;
    adults?: number;
    children?: number;
    infants?: number;
    pets?: number;
    maxGuests?: number;
    expired?: boolean;
    paymentmodelID?: string;
    stripeAccountID?: string;
    confirmationCode?: string;
    conversationmodelID?: string;
    confirmed?: boolean;
    confirmedAt?: string;
    couponCode?: string;
    couponDiscountAmount?: number;
    declined?: boolean;
    reasonDeclined?: string;
    cancelled?: boolean;
    cancelledAt?: string;
    cancelledBy?: string;
    reasonCancelled?: string;
    completed?: boolean;
    stayReviewed?: boolean;
    guestReviewed?: boolean;
    checkInTime?: number;
    checkOutTime?: number;
    cancellationPolicy?: string;
    bookingAmount?: number;
    bookingAmountIncludingServiceFee?: number;
    paymentAmount?: number;
    pricePerNight?: number;
    serviceFee?: number;
    cleaningFee?: number;
    extraGuestFee?: number;
    extraMaxGuests?: number;
    weeklyDiscount?: number;
    monthlyDiscount?: number;
    paymentModels?: string[];
    transferModels?: string[];
    refundModels?: string[];
    transferReversalModels?: string[];
    deposit?: number;
    refundedAmount?: number;
    standardServiceFee?: boolean;
    hostPaid?: boolean;
};
export declare type BookingRequestModelCreateFormValidationValues = {
    owners?: ValidationFunction<string>;
    arrivalDate?: ValidationFunction<string>;
    departureDate?: ValidationFunction<string>;
    guests?: ValidationFunction<number>;
    adults?: ValidationFunction<number>;
    children?: ValidationFunction<number>;
    infants?: ValidationFunction<number>;
    pets?: ValidationFunction<number>;
    maxGuests?: ValidationFunction<number>;
    expired?: ValidationFunction<boolean>;
    paymentmodelID?: ValidationFunction<string>;
    stripeAccountID?: ValidationFunction<string>;
    confirmationCode?: ValidationFunction<string>;
    conversationmodelID?: ValidationFunction<string>;
    confirmed?: ValidationFunction<boolean>;
    confirmedAt?: ValidationFunction<string>;
    couponCode?: ValidationFunction<string>;
    couponDiscountAmount?: ValidationFunction<number>;
    declined?: ValidationFunction<boolean>;
    reasonDeclined?: ValidationFunction<string>;
    cancelled?: ValidationFunction<boolean>;
    cancelledAt?: ValidationFunction<string>;
    cancelledBy?: ValidationFunction<string>;
    reasonCancelled?: ValidationFunction<string>;
    completed?: ValidationFunction<boolean>;
    stayReviewed?: ValidationFunction<boolean>;
    guestReviewed?: ValidationFunction<boolean>;
    checkInTime?: ValidationFunction<number>;
    checkOutTime?: ValidationFunction<number>;
    cancellationPolicy?: ValidationFunction<string>;
    bookingAmount?: ValidationFunction<number>;
    bookingAmountIncludingServiceFee?: ValidationFunction<number>;
    paymentAmount?: ValidationFunction<number>;
    pricePerNight?: ValidationFunction<number>;
    serviceFee?: ValidationFunction<number>;
    cleaningFee?: ValidationFunction<number>;
    extraGuestFee?: ValidationFunction<number>;
    extraMaxGuests?: ValidationFunction<number>;
    weeklyDiscount?: ValidationFunction<number>;
    monthlyDiscount?: ValidationFunction<number>;
    paymentModels?: ValidationFunction<string>;
    transferModels?: ValidationFunction<string>;
    refundModels?: ValidationFunction<string>;
    transferReversalModels?: ValidationFunction<string>;
    deposit?: ValidationFunction<number>;
    refundedAmount?: ValidationFunction<number>;
    standardServiceFee?: ValidationFunction<boolean>;
    hostPaid?: ValidationFunction<boolean>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type BookingRequestModelCreateFormOverridesProps = {
    BookingRequestModelCreateFormGrid?: PrimitiveOverrideProps<GridProps>;
    owners?: PrimitiveOverrideProps<TextFieldProps>;
    arrivalDate?: PrimitiveOverrideProps<TextFieldProps>;
    departureDate?: PrimitiveOverrideProps<TextFieldProps>;
    guests?: PrimitiveOverrideProps<TextFieldProps>;
    adults?: PrimitiveOverrideProps<TextFieldProps>;
    children?: PrimitiveOverrideProps<TextFieldProps>;
    infants?: PrimitiveOverrideProps<TextFieldProps>;
    pets?: PrimitiveOverrideProps<TextFieldProps>;
    maxGuests?: PrimitiveOverrideProps<TextFieldProps>;
    expired?: PrimitiveOverrideProps<SwitchFieldProps>;
    paymentmodelID?: PrimitiveOverrideProps<TextFieldProps>;
    stripeAccountID?: PrimitiveOverrideProps<TextFieldProps>;
    confirmationCode?: PrimitiveOverrideProps<TextFieldProps>;
    conversationmodelID?: PrimitiveOverrideProps<TextFieldProps>;
    confirmed?: PrimitiveOverrideProps<SwitchFieldProps>;
    confirmedAt?: PrimitiveOverrideProps<TextFieldProps>;
    couponCode?: PrimitiveOverrideProps<TextFieldProps>;
    couponDiscountAmount?: PrimitiveOverrideProps<TextFieldProps>;
    declined?: PrimitiveOverrideProps<SwitchFieldProps>;
    reasonDeclined?: PrimitiveOverrideProps<TextFieldProps>;
    cancelled?: PrimitiveOverrideProps<SwitchFieldProps>;
    cancelledAt?: PrimitiveOverrideProps<TextFieldProps>;
    cancelledBy?: PrimitiveOverrideProps<TextFieldProps>;
    reasonCancelled?: PrimitiveOverrideProps<TextFieldProps>;
    completed?: PrimitiveOverrideProps<SwitchFieldProps>;
    stayReviewed?: PrimitiveOverrideProps<SwitchFieldProps>;
    guestReviewed?: PrimitiveOverrideProps<SwitchFieldProps>;
    checkInTime?: PrimitiveOverrideProps<TextFieldProps>;
    checkOutTime?: PrimitiveOverrideProps<TextFieldProps>;
    cancellationPolicy?: PrimitiveOverrideProps<TextFieldProps>;
    bookingAmount?: PrimitiveOverrideProps<TextFieldProps>;
    bookingAmountIncludingServiceFee?: PrimitiveOverrideProps<TextFieldProps>;
    paymentAmount?: PrimitiveOverrideProps<TextFieldProps>;
    pricePerNight?: PrimitiveOverrideProps<TextFieldProps>;
    serviceFee?: PrimitiveOverrideProps<TextFieldProps>;
    cleaningFee?: PrimitiveOverrideProps<TextFieldProps>;
    extraGuestFee?: PrimitiveOverrideProps<TextFieldProps>;
    extraMaxGuests?: PrimitiveOverrideProps<TextFieldProps>;
    weeklyDiscount?: PrimitiveOverrideProps<TextFieldProps>;
    monthlyDiscount?: PrimitiveOverrideProps<TextFieldProps>;
    paymentModels?: PrimitiveOverrideProps<TextFieldProps>;
    transferModels?: PrimitiveOverrideProps<TextFieldProps>;
    refundModels?: PrimitiveOverrideProps<TextFieldProps>;
    transferReversalModels?: PrimitiveOverrideProps<TextFieldProps>;
    deposit?: PrimitiveOverrideProps<TextFieldProps>;
    refundedAmount?: PrimitiveOverrideProps<TextFieldProps>;
    standardServiceFee?: PrimitiveOverrideProps<SwitchFieldProps>;
    hostPaid?: PrimitiveOverrideProps<SwitchFieldProps>;
} & EscapeHatchProps;
export declare type BookingRequestModelCreateFormProps = React.PropsWithChildren<{
    overrides?: BookingRequestModelCreateFormOverridesProps | undefined | null;
} & {
    clearOnSuccess?: boolean;
    onSubmit?: (fields: BookingRequestModelCreateFormInputValues) => BookingRequestModelCreateFormInputValues;
    onSuccess?: (fields: BookingRequestModelCreateFormInputValues) => void;
    onError?: (fields: BookingRequestModelCreateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: BookingRequestModelCreateFormInputValues) => BookingRequestModelCreateFormInputValues;
    onValidate?: BookingRequestModelCreateFormValidationValues;
} & React.CSSProperties>;
export default function BookingRequestModelCreateForm(props: BookingRequestModelCreateFormProps): React.ReactElement;
