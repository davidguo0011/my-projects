{"version":3,"file":"static/js/4029.c88ec93e.chunk.js","sources":["pages/searchListing/map/mapStyles.ts","pages/searchListing/map/components/searchListingMapListingCard.tsx","pages/searchListing/map/components/searchListingMapMarkers.tsx","pages/searchListing/map/util/adjustMapListingCardPosition.ts","pages/searchListing/map/searchListingMap.tsx","components/skeletonLoadingDummyCard/skeletonLoadingDummySearchListingCard/skeletonLoadingDummyCardStyling.ts","components/skeletonLoadingDummyCard/skeletonLoadingDummySearchListingCard/skeletonLoadingDummyCard.tsx","pages/searchListing/SearchListingPhoto/SearchListingPhoto.tsx","pages/searchListing/SearchListingResult/SearchListingResult.tsx","hook/useHandleMobileSearchResults.ts","components/btn/withIconBtn/withIconBtnStyling.ts","components/btn/withIconBtn/withIconBtn.tsx","pages/searchListing/searchListing.tsx"],"sourceRoot":"","sourcesContent":["export const mapStyles = [\n    {\n        featureType: \"administrative.country\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#696969\",\n            },\n        ],\n    },\n    {\n        featureType: \"administrative.locality\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#696969\",\n            },\n        ],\n    },\n    {\n        featureType: \"administrative.locality\",\n        elementType: \"labels.text.stroke\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"administrative.neighborhood\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#919191\",\n            },\n        ],\n    },\n    {\n        featureType: \"administrative.province\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#696969\",\n            },\n        ],\n    },\n    {\n        featureType: \"landscape.man_made\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#f8f4f1\",\n            },\n        ],\n    },\n    {\n        featureType: \"landscape.man_made\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"landscape.natural\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                hue: \"5\",\n                saturate: \"0\",\n            },\n        ],\n    },\n    {\n        featureType: \"landscape.natural\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                lightness: 25,\n            },\n        ],\n    },\n    {\n        featureType: \"poi\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi\",\n        elementType: \"labels.text.stroke\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.attraction\",\n        stylers: [\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.attraction\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.park\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#daefbd\",\n            },\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.park\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.school\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#daefbd\",\n            },\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.sports_complex\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#daefbd\",\n            },\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"poi.sports_complex\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"geometry.stroke\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#999999\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#ffffff\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [\n            {\n                color: \"#d1d1d1\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#737373\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway.controlled_access\",\n        stylers: [\n            {\n                visibility: \"on\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway.controlled_access\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                lightness: 15,\n            },\n        ],\n    },\n    {\n        featureType: \"road.highway.controlled_access\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#737373\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                lightness: 35,\n            },\n        ],\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"geometry.stroke\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#999999\",\n            },\n        ],\n    },\n    {\n        featureType: \"transit\",\n        elementType: \"labels.icon\",\n        stylers: [\n            {\n                lightness: 30,\n            },\n        ],\n    },\n    {\n        featureType: \"transit\",\n        elementType: \"labels.text\",\n        stylers: [\n            {\n                visibility: \"off\",\n            },\n        ],\n    },\n    {\n        featureType: \"transit.line\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#dbdbdb\",\n            },\n        ],\n    },\n    {\n        featureType: \"transit.station.airport\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#dfe7ef\",\n            },\n        ],\n    },\n    {\n        featureType: \"water\",\n        elementType: \"geometry.fill\",\n        stylers: [\n            {\n                color: \"#b3e7f4\",\n            },\n        ],\n    },\n    {\n        featureType: \"water\",\n        elementType: \"labels.text.fill\",\n        stylers: [\n            {\n                color: \"#6aacc8\",\n            },\n        ],\n    },\n];\n","import { MouseEventHandler, TouchEventHandler, useEffect, useState, useMemo, useRef } from \"react\";\nimport {\n    HeartIcon,\n    SearchListingResultNoReviewText,\n    SearchListingResultOverallReviewAvg,\n    SearchListingResultReview,\n    SearchListingSaveButtonWrapper,\n    SearchMapListingCardContainer,\n    SearchMapListingCardImage,\n    SearchMapListingCardImageWrapper,\n    SearchMapListingCardImagesWrapper,\n    SearchMapListingCardReview,\n    SearchMapListingCardSubtitle,\n    SearchMapListingCardTextWrapper,\n    SearchMapListingCardTitle,\n    SearchMapListingCardWrapper,\n} from \"../../searchListingStyling\";\nimport { Navigation, Pagination } from \"swiper\";\nimport constructOptimisedImageUrl from \"../../../../utils/imageOptimisation/constructOptimisedImageUrl\";\nimport { ColorTheme } from \"../../../../components/globaStyledComponents/globalStyledComponentsStyling\";\nimport { toggleSaved } from \"../../../../utils/savedListings/toggleSaved\";\nimport { useRecoilState } from \"recoil\";\nimport { userModelSelector } from \"../../../../state/selectors/userModel\";\nimport { accessTokenSelector } from \"../../../../state/selectors/accessToken\";\nimport { signInMenuActivatedSelector } from \"../../../../state/selectors/navbarToggle\";\nimport { SearchListingModel } from \"../../../../interfaces/models/listingModel\";\nimport { ListingImageObject } from \"../../../../interfaces/models/listingModel\";\nimport { QueryParams } from \"../../searchListing\";\nimport { useLocation } from \"react-router-dom\";\nimport useIsTouchDevice from \"../../../../hook/useIsTouchDevice\";\ninterface SearchListingMapListingCardProps {\n    popupCardRef: React.RefObject<HTMLElement>;\n    listing: SearchListingModel;\n    setIsTouchingCard: React.Dispatch<React.SetStateAction<boolean>>;\n    clickedListingFromMap: any;\n}\n\nconst SearchListingMapListingCard = ({ popupCardRef, listing, setIsTouchingCard, clickedListingFromMap }: SearchListingMapListingCardProps) => {\n    const [userModel, setUserModel] = useRecoilState(userModelSelector);\n    const [accessToken, setAccessToken] = useRecoilState(accessTokenSelector);\n    const [signInMenuActivated, setSignInMenuActivated] = useRecoilState(signInMenuActivatedSelector);\n    const [isSaved, setIsSaved] = useState(false);\n    const isSavedLoading = useRef(false);\n    const init = useRef(false);\n    const location = useLocation();\n    const isTouchDevice = useIsTouchDevice();\n\n    const queryParams = useMemo(() => {\n        const searchParams = new URLSearchParams(location.search);\n        const params: QueryParams = {};\n        for (let [key, value] of searchParams.entries()) {\n            params[key as keyof QueryParams] = value;\n        }\n        return params;\n    }, [location.search]);\n\n    useEffect(() => {\n        if (popupCardRef.current) {\n            window.google.maps.OverlayView.preventMapHitsFrom(popupCardRef.current);\n        }\n    }, [listing, popupCardRef]);\n\n    useEffect(() => {\n        //run only once if usermodel is true for init\n        if (init.current) return;\n        if (userModel && userModel.savedListings.includes(listing.id)) {\n            setIsSaved(true);\n            init.current = true;\n        }\n    }, [listing.id, userModel]);\n\n    type CustomEvent = React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>;\n\n    const handleButtonClick = async (event: CustomEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (userModel) {\n            if (isSavedLoading.current) return;\n            try {\n                setIsSaved((prev) => !prev);\n                isSavedLoading.current = true;\n                await toggleSaved(listing.id, userModel, accessToken);\n            } catch (err: any) {\n                console.log(err);\n                setIsSaved((prev) => !prev);\n            } finally {\n                isSavedLoading.current = false;\n            }\n        } else {\n            setSignInMenuActivated(true);\n        }\n    };\n\n    const getURL = () => {\n        const arrivalDateString = queryParams.arrivalDate ? `arrivalDate=${queryParams.arrivalDate}` : \"\";\n        const departureDateString = queryParams.departureDate ? `departureDate=${queryParams.departureDate}` : \"\";\n        const searchFiltersFromQueryParams = queryParams.searchFilters ? JSON.parse(queryParams.searchFilters) : null;\n        const adultsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.adults ? `adults=${searchFiltersFromQueryParams.adults}` : \"\";\n        const childrenString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.children ? `children=${searchFiltersFromQueryParams.children}` : \"\";\n        const petsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.pets ? `pets=${searchFiltersFromQueryParams.pets}` : \"\";\n        const infantsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.infants ? `infants=${searchFiltersFromQueryParams.infants}` : \"\";\n        const searchParamsStrings = [arrivalDateString, departureDateString, adultsString, childrenString, petsString, infantsString].filter((param) => param !== \"\").join(\"&\");\n\n        return `/listing/${listing.id}${searchParamsStrings ? `?${searchParamsStrings}` : \"\"}`;\n    };\n    return (\n        <SearchMapListingCardContainer\n            ref={popupCardRef as React.RefObject<HTMLDivElement>}\n            onTouchStart={() => {\n                setIsTouchingCard(true);\n            }}\n            onTouchEnd={() => {\n                setIsTouchingCard(false);\n            }}\n            onMouseEnter={() => {\n                setIsTouchingCard(true);\n            }}\n            onMouseLeave={() => {\n                setIsTouchingCard(false);\n            }}\n        >\n            <SearchListingSaveButtonWrapper onClick={!isTouchDevice ? handleButtonClick : undefined} onTouchEnd={isTouchDevice ? handleButtonClick : undefined}>\n                <HeartIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\">\n                    <path\n                        d=\"M2.26061 13.3918C5.07331 17.4376 8.89663 20.4197 12.8238 23.2792C12.9722 23.3873 13.373 23.3224 13.5518 23.1927C16.4106 21.1187 19.1902 18.9466 21.5963 16.3436C23.5642 14.2148 25.3072 11.9361 26.0237 9.04917C26.8138 5.86965 25.4788 2.5114 22.8246 0.914431C20.2484 -0.634975 16.9311 -0.189611 14.4629 2.05451L14.4198 2.09405C14.1243 2.36677 13.8509 2.66287 13.5765 2.96004C13.443 3.10465 13.3093 3.2495 13.1726 3.39204C13.0119 3.23609 12.8591 3.08852 12.7119 2.94629C12.4578 2.7008 12.2197 2.47076 11.9833 2.23899C11.949 2.20545 11.9146 2.17227 11.8799 2.13945C9.70682 0.0822306 6.68254 -0.554266 4.17227 0.529602C1.6306 1.62644 -0.0576046 4.36492 0.00150402 7.35708C0.0461959 9.62714 1.00058 11.5816 2.26061 13.3918Z\"\n                        fill={isSaved ? `${ColorTheme.Red.color}` : `${ColorTheme.Black.opacityColor}`}\n                        transform=\"translate(1, 1)\"\n                    />\n                </HeartIcon>\n            </SearchListingSaveButtonWrapper>\n\n            <SearchMapListingCardWrapper\n                onClick={!isTouchDevice ? () => clickedListingFromMap(listing.id) : undefined}\n                onTouchEnd={isTouchDevice ? () => clickedListingFromMap(listing.id) : undefined}\n                to={getURL()}\n                target={window.innerWidth > 768 ? \"_blank\" : \"\"}\n                rel=\"noopener noreferrer\"\n            >\n                <SearchMapListingCardImagesWrapper\n                    modules={[Navigation, Pagination]}\n                    navigation={window.innerWidth < 768 ? false : true}\n                    centeredSlides={true}\n                    pagination={{\n                        clickable: true,\n                        dynamicBullets: true,\n                        dynamicMainBullets: 3,\n                    }}\n                    loop={window.innerWidth < 768 ? true : false}\n                    onSlideChange={(e) => {}}\n                    initialSlide={0}\n                    spaceBetween={0}\n                    slidesPerView={1}\n                    watchSlidesProgress={true}\n                    // cssMode={true}\n                >\n                    {listing.listingImages.map((image, index) => {\n                        return (\n                            <SearchMapListingCardImageWrapper key={index} virtualIndex={index}>\n                                <SearchMapListingCardImage src={constructOptimisedImageUrl((image as ListingImageObject).key, 500)} alt=\"Preview image of the listing\" id={`index-${index}`} />\n                            </SearchMapListingCardImageWrapper>\n                        );\n                    })}\n                </SearchMapListingCardImagesWrapper>\n\n                <SearchMapListingCardTextWrapper>\n                    <SearchMapListingCardTitle>\n                        {listing.propertyType.charAt(0).toUpperCase() + listing.propertyType.slice(1)} in {listing.suburb}\n                    </SearchMapListingCardTitle>\n                    <SearchMapListingCardSubtitle>{listing.propertyTitle}</SearchMapListingCardSubtitle>\n\n                    <SearchMapListingCardReview>\n                        <SearchListingResultReview>\n                            {listing.overallAverage && listing.totalReviews && listing.overallAverage > 0 ? (\n                                <SearchListingResultOverallReviewAvg>\n                                    {(listing.overallAverage / 10).toFixed(1)} <span>({listing.totalReviews})</span>\n                                </SearchListingResultOverallReviewAvg>\n                            ) : (\n                                <SearchListingResultNoReviewText>New</SearchListingResultNoReviewText>\n                            )}\n                        </SearchListingResultReview>\n                    </SearchMapListingCardReview>\n                </SearchMapListingCardTextWrapper>\n            </SearchMapListingCardWrapper>\n        </SearchMapListingCardContainer>\n    );\n};\nexport default SearchListingMapListingCard;\n","import { OverlayViewF } from \"@react-google-maps/api\";\nimport { useEffect } from \"react\";\nimport { SearchMapMarker } from \"../../searchListingStyling\";\nimport adjustMapListingCardPosition from \"../util/adjustMapListingCardPosition\";\nimport { SearchListingModel } from \"../../../../interfaces/models/listingModel\";\n\ninterface SearchListingMapMarkersProps {\n    listings: SearchListingModel[];\n    selectedListing: SearchListingModel | null;\n    setListing: React.Dispatch<React.SetStateAction<SearchListingModel | null>>;\n    markersRef: React.MutableRefObject<\n        {\n            el: HTMLElement;\n            listingId: string;\n        }[]\n    >;\n    map: google.maps.Map | null;\n}\n\nexport default function SearchListingMapMarkers({ listings, selectedListing, setListing, markersRef, map }: SearchListingMapMarkersProps) {\n    useEffect(() => {\n        if (markersRef.current) {\n            for (let marker of markersRef.current) {\n                if (marker.el) {\n                    window.google.maps.OverlayView.preventMapHitsFrom(marker.el);\n                }\n            }\n        }\n    }, [listings]);\n\n    if (!listings || listings.length === 0) {\n        return null;\n    }\n\n    return (\n        <>\n            {listings.map((listing, index) => {\n                return (\n                    <OverlayViewF\n                        key={listing.id}\n                        position={{ lat: (listing.location as { lat: number; lon: number }).lat, lng: (listing.location as { lat: number; lon: number }).lon }}\n                        mapPaneName={\"overlayMouseTarget\"}\n                    >\n                        <SearchMapMarker\n                            onClick={() => {\n                                if (map && (!selectedListing || selectedListing.id !== listing.id)) {\n                                    map.panTo(\n                                        adjustMapListingCardPosition(\n                                            { lat: (listing.location as { lat: number; lon: number }).lat, lng: (listing.location as { lat: number; lon: number }).lon },\n                                            map,\n                                            markersRef.current[index].el.offsetWidth\n                                        ) as google.maps.LatLng\n                                    );\n                                    setListing(listing);\n                                } else {\n                                    setListing(null);\n                                }\n                            }}\n                            selected={selectedListing?.id === listing.id}\n                            ref={(el) => (markersRef.current[index] = { el: el as HTMLElement, listingId: listing.id })}\n                        >\n                            {`$${Number(listing.totalPrice / 100).toFixed(0)} AUD`}\n                        </SearchMapMarker>\n                    </OverlayViewF>\n                );\n            })}\n        </>\n    );\n}\n","export default function adjustMapListingCardPosition(location: { lat: number; lng: number }, map: google.maps.Map, markerWidth: number) {\n    const overlay = new window.google.maps.OverlayView();\n    overlay.draw = function () {};\n    overlay.setMap(map);\n    // Wait for the map to be fully loaded\n    const projection = overlay.getProjection();\n    if (!projection) {\n        return new window.google.maps.LatLng(-27.47, 153.021);\n    }\n\n    // Convert the LatLng location to pixel coordinates\n    let markerPoint = projection.fromLatLngToContainerPixel(new window.google.maps.LatLng(location.lat, location.lng));\n    let centerPoint = projection.fromLatLngToContainerPixel(new window.google.maps.LatLng(map.getCenter() as google.maps.LatLng));\n    if (centerPoint && markerPoint) {\n        let newCenterPosition = { x: centerPoint.x, y: centerPoint.y };\n        // Check if the location does not cover the zoom control\n        if (window.innerWidth >= 768 && markerPoint.y - 12 - 394.75 < 24 + 82 && markerPoint.x + markerWidth / 2 + 159 > map.getDiv().offsetWidth - 24 - 42) {\n            let rightBound = map.getDiv().offsetWidth - 24 - 42;\n            newCenterPosition.x = centerPoint.x - (rightBound - 159 - (markerPoint.x + markerWidth / 2));\n            newCenterPosition.y = centerPoint.y - (24 + 82 + 394.75 + 12 - markerPoint.y);\n        }\n\n        // Check if the location is within the right edge\n        if (window.innerWidth < 768 && markerPoint.x + markerWidth / 2 + 100 > map.getDiv().offsetWidth - 16) {\n            let rightBound = map.getDiv().offsetWidth - 16;\n            newCenterPosition.x = centerPoint.x - (rightBound - 100 - (markerPoint.x + markerWidth / 2));\n            console.log(\"right edge\");\n        } else if (window.innerWidth >= 768 && markerPoint.x + markerWidth / 2 + 159 > map.getDiv().offsetWidth - 24 && markerPoint.y - 12 - 394.75 >= 24 + 82) {\n            let rightBound = map.getDiv().offsetWidth - 24;\n            newCenterPosition.x = centerPoint.x - (rightBound - 159 - (markerPoint.x + markerWidth / 2));\n        }\n\n        // Check if the location is within the left edge\n        if (window.innerWidth < 768 && markerPoint.x + markerWidth / 2 - 100 < 16) {\n            newCenterPosition.x = centerPoint.x - (100 + 16 - (markerPoint.x + markerWidth / 2));\n        } else if (window.innerWidth >= 768 && markerPoint.x + markerWidth / 2 - 159 < 24) {\n            newCenterPosition.x = centerPoint.x - (159 + 24 - (markerPoint.x + markerWidth / 2));\n        }\n\n        // Check if the location is within the top edge\n        if (window.innerWidth < 768 && markerPoint.y - 12 - 275.67 < 16) {\n            newCenterPosition.y = centerPoint.y - (16 + 275.67 + 12 - markerPoint.y);\n        } else if (window.innerWidth >= 768 && markerPoint.y - 12 - 394.75 < 24 && markerPoint.x + markerWidth / 2 + 159 <= map.getDiv().offsetWidth - 24 - 42) {\n            newCenterPosition.y = centerPoint.y - (24 + 394.75 + 12 - markerPoint.y);\n        }\n\n        let newCenterLatLng = projection.fromContainerPixelToLatLng(newCenterPosition as google.maps.Point);\n        overlay.setMap(null);\n        return newCenterLatLng;\n    } else {\n        return new window.google.maps.LatLng(-27.47, 153.021);\n    }\n}\n","import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { mapStyles } from \"./mapStyles\";\nimport { GoogleMap, OverlayViewF } from \"@react-google-maps/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { searchFiltersSelector } from \"../../../state/selectors/searchQuery\";\nimport { useRecoilState } from \"recoil\";\nimport SearchListingMapListingCard from \"./components/searchListingMapListingCard\";\nimport SearchListingMapMarkers from \"./components/searchListingMapMarkers\";\nimport { BoundingBoxInterface } from \"../searchListing\";\nimport { SearchListingModel } from \"../../../interfaces/models/listingModel\";\nimport { SearchFilters } from \"../../../interfaces/state/searchQuery\";\nimport { QueryParams } from \"../searchListing\";\n\ninterface SearchListingMapProps {\n    listings: SearchListingModel[];\n    setBoundingBox: React.Dispatch<React.SetStateAction<BoundingBoxInterface | null>>;\n    fetchListings: (placeId: string | undefined, arrivalDate: string, departureDate: string, searchFilters: SearchFilters, page: number, boundingBox: any, isMapRequest: boolean) => void;\n    isSearchResultsContainerClosed: boolean;\n    clickedListingFromMap: any;\n}\n\nexport default React.memo(function SearchListingMap({ listings, setBoundingBox, fetchListings, isSearchResultsContainerClosed, clickedListingFromMap }: SearchListingMapProps) {\n    const [listing, setListing] = useState<SearchListingModel | null>(null);\n    const location = useLocation();\n\n    const queryParams = useMemo(() => {\n        const searchParams = new URLSearchParams(location.search);\n        const params: QueryParams = {};\n        for (let [key, value] of searchParams.entries()) {\n            params[key as keyof QueryParams] = value;\n        }\n        return params;\n    }, [location.search]);\n\n    const [searchFilters, setSearchFilters] = useRecoilState(searchFiltersSelector);\n\n    // if the listing is not shown in the map, close the popup card\n    if (listing && !listings.map((l) => l.id).includes(listing.id)) {\n        setListing(null);\n    }\n\n    function wheelEvent(event: WheelEvent) {\n        // Set the ctrlKey property to true to avoid having to press ctrl to zoom in/out.\n        Object.defineProperty(event, \"ctrlKey\", { value: true });\n    }\n    useEffect(() => {\n        document.addEventListener(\"wheel\", wheelEvent, true);\n        return () => {\n            document.removeEventListener(\"wheel\", wheelEvent, true);\n        };\n    }, []);\n\n    const [map, setMap] = useState<google.maps.Map | null>(null);\n    const [center, setCenter] = useState({ lat: -27.47, lng: 153.021 });\n    const [isTouchingCard, setIsTouchingCard] = useState(false);\n\n    const timer = useRef<NodeJS.Timeout | null>(null);\n    const mapLoaded = useRef(false);\n    const popupCardRef = useRef<HTMLElement>(null);\n    const markersRef = useRef<{ el: HTMLElement; listingId: string }[]>([]);\n\n    const debounce = (func: () => void, timeout: number) => {\n        clearTimeout(timer.current as NodeJS.Timeout);\n        timer.current = setTimeout(() => {\n            func();\n        }, timeout);\n    };\n\n    useEffect(() => {\n        const placeId = queryParams.locationId ? queryParams.locationId : \"ChIJ38WHZwf9KysRUhNblaFnglM\";\n        const lat = queryParams.lat ? Number(queryParams.lat) : -27.47;\n        const lng = queryParams.lng ? Number(queryParams.lng) : 153.021;\n        if (mapLoaded.current && map && placeId) {\n            const bounds = new window.google.maps.LatLngBounds({ lat: lat, lng: lng });\n            map.fitBounds(bounds);\n            map.setZoom(placeId === \"ChIJ38WHZwf9KysRUhNblaFnglM\" ? 5 : 10);\n        }\n    }, [map, queryParams.locationId, queryParams.lat, queryParams.lng]);\n\n    const fetchListingOnUserAction = React.useCallback(\n        (mapInstance: google.maps.Map, timeout: number) => {\n            const bounds = mapInstance.getBounds();\n            if (!bounds) return;\n            const northEast = { lat: bounds.getNorthEast().lat(), lon: bounds.getNorthEast().lng() };\n            const southWest = { lat: bounds.getSouthWest().lat(), lon: bounds.getSouthWest().lng() };\n            const boundingBox = { topRight: northEast, bottomLeft: southWest };\n\n            debounce(() => {\n                setBoundingBox(boundingBox);\n                const placeId = queryParams.locationId ? queryParams.locationId : \"ChIJ38WHZwf9KysRUhNblaFnglM\";\n                const arrivalDate = queryParams.arrivalDate ? queryParams.arrivalDate : \"anyArrival\";\n                const departureDate = queryParams.departureDate ? queryParams.departureDate : \"anyDeparture\";\n                fetchListings(placeId, arrivalDate, departureDate, searchFilters, 1, boundingBox, true);\n            }, timeout);\n        },\n        [fetchListings, queryParams.arrivalDate, queryParams.departureDate, queryParams.locationId, searchFilters, setBoundingBox]\n    );\n    let searchResultsContainerClosed = window.innerWidth < 768 ? isSearchResultsContainerClosed : \"false\";\n    useEffect(() => {\n        if (!searchResultsContainerClosed) {\n            setListing(null);\n        }\n        let dragListener: google.maps.MapsEventListener;\n        let zoomListener: google.maps.MapsEventListener;\n        let clickListener: google.maps.MapsEventListener;\n        if (map) {\n            dragListener = map.addListener(\"drag\", function () {\n                fetchListingOnUserAction(map, 1000);\n            });\n            zoomListener = map.addListener(\"zoom_changed\", function () {\n                fetchListingOnUserAction(map, 2000);\n            });\n            clickListener = map.addListener(\"click\", function () {\n                setListing(null);\n            });\n            return () => {\n                window.google.maps.event.removeListener(dragListener);\n                window.google.maps.event.removeListener(zoomListener);\n                window.google.maps.event.removeListener(clickListener);\n            };\n        }\n    }, [fetchListingOnUserAction, map, searchResultsContainerClosed]);\n\n    const onLoad = React.useCallback(\n        function callback(mapInstance: google.maps.Map) {\n            setTimeout(async () => {\n                const bounds = new window.google.maps.LatLngBounds(center);\n                mapInstance.fitBounds(bounds);\n\n                const placeId = queryParams.locationId ? queryParams.locationId : \"ChIJ38WHZwf9KysRUhNblaFnglM\";\n                const lat = queryParams.lat ? Number(queryParams.lat) : -27.47;\n                const lng = queryParams.lng ? Number(queryParams.lng) : 153.021;\n\n                // if (typeof latFromUrl === \"number\" && !isNaN(latFromUrl) && typeof lngFromUrl === \"number\" && !isNaN(lngFromUrl)) {\n                //     setCenter({ lat: latFromUrl, lng: lngFromUrl });\n                // }\n                setCenter({ lat: lat, lng: lng });\n\n                mapInstance.setZoom(placeId === \"ChIJ38WHZwf9KysRUhNblaFnglM\" ? 5 : 10);\n                setMap(mapInstance);\n\n                mapLoaded.current = true;\n            }, 1000);\n        },\n\n        [center, queryParams.lat, queryParams.lng, queryParams.locationId]\n    );\n\n    const onUnmount = React.useCallback(function callback() {\n        setMap(null);\n    }, []);\n\n    let clickedMarkerRef = markersRef.current.find((marker) => marker.listingId === listing?.id)?.el;\n    const getPixelPositionOffset = (width: number, height: number) => {\n        if (clickedMarkerRef) {\n            return {\n                x: -width / 2 + clickedMarkerRef.offsetWidth / 2,\n                y: -height - 12,\n            };\n        } else {\n            return {\n                x: -width / 2,\n                y: -height - 12,\n            };\n        }\n    };\n    return (\n        <>\n            <GoogleMap\n                mapContainerStyle={{\n                    width: \"100%\",\n                    height: \"100%\",\n                }}\n                center={center}\n                onLoad={onLoad}\n                onUnmount={onUnmount}\n                zoom={5}\n                options={{\n                    fullscreenControl: false,\n                    disableDefaultUI: true,\n                    minZoom: 2,\n                    maxZoom: 18,\n                    styles: mapStyles,\n                    gestureHandling: isTouchingCard ? \"none\" : \"greedy\",\n                    disableDoubleClickZoom: listing ? true : false,\n                    zoomControl: window.innerWidth <= 768 ? false : true,\n                    zoomControlOptions: {\n                        position: window.google.maps.ControlPosition?.TOP_RIGHT,\n                    },\n                }}\n            >\n                <SearchListingMapMarkers setListing={setListing} selectedListing={listing} listings={listings} markersRef={markersRef} map={map} />\n                {listing && (\n                    <OverlayViewF\n                        position={{ lat: (listing.location as { lat: number; lon: number }).lat, lng: (listing.location as { lat: number; lon: number }).lon }}\n                        mapPaneName={\"floatPane\"}\n                        getPixelPositionOffset={getPixelPositionOffset}\n                    >\n                        <SearchListingMapListingCard clickedListingFromMap={clickedListingFromMap} popupCardRef={popupCardRef} listing={listing} setIsTouchingCard={setIsTouchingCard} />\n                    </OverlayViewF>\n                )}\n            </GoogleMap>\n        </>\n    );\n});\n","import styled from \"styled-components\";\nimport { TextTheme, ColorTheme, BorderRadiusTheme, SpacingTheme } from \"../../globaStyledComponents/globalStyledComponentsStyling\";\n\nexport const SearchListingResultCard = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    @media (min-width: 768px) {\n        min-width: calc(50% - 12px);\n        flex: 1;\n    }\n    @media (min-width: 1400px) {\n        min-width: calc((100% - 48px) / 3);\n        flex: 1;\n    }\n`;\n\nexport const SearchListingResultCardHome = styled.div`\n    width: 50%;\n    border-radius: ${BorderRadiusTheme.radius_12.borderRadius};\n    margin-bottom: 24px;\n    display: flex;\n    flex-direction: column;\n    @media (min-width: 500px) {\n        width: 33%;\n    }\n    @media (min-width: 768px) {\n        width: 25%;\n    }\n    @media (min-width: 1440px) {\n        width: 14%;\n    }\n`;\nexport const SearchListingResultCardImageWrapper = styled.div`\n    width: 100%;\n    border-radius: ${BorderRadiusTheme.radius_12.borderRadius};\n    background-color: ${ColorTheme.Grey2.color};\n    aspect-ratio: 20/19;\n\n    @media (min-width: 768px) {\n        width: unset;\n    }\n`;\nexport const SearchListingResultTextWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nexport const SearchListingResultCardSubtitle = styled.div`\n    width: 40%;\n    height: 19px;\n    margin-top: 12px;\n    margin-bottom: 2px;\n    background-color: ${ColorTheme.Grey2.color};\n`;\n\nexport const SearchListingResultCardTitle = styled.div`\n    width: 20%;\n    height: 18px;\n    margin: 0;\n    background-color: ${ColorTheme.Grey2.color};\n`;\n\nexport const SearchListingResultCardAttributeWrapper = styled.ul`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    list-style-type: none;\n    padding: 0;\n    gap: ${SpacingTheme.spacing_200.gap};\n    margin: 10px 0;\n`;\n\nexport const SearchListingResultCardPriceWrapper = styled.div`\n    width: 40%;\n    height: 19px;\n    background-color: ${ColorTheme.Grey2.color};\n`;\nexport const SearchListingResultCardAttribute = styled.li`\n    border: none;\n    height: 20px;\n    text-decoration: none;\n    width: 50px;\n    padding: 0 8px;\n    border-radius: 9px;\n    font-size: ${TextTheme.sans_200.fontSize};\n    line-height: ${TextTheme.sans_200.lineHeight};\n    font-weight: ${TextTheme.sans_200.fontWeight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${ColorTheme.Grey2.color};\n`;\n\nexport const DummyImg = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const SearchListingResultCardDate = styled.div`\n    height: 20px;\n    margin-top: 2px;\n    margin-bottom: 8px;\n    width: 106px;\n    background-color: ${ColorTheme.Grey2.color};\n`;\n","import React from \"react\";\nimport {\n    SearchListingResultCard,\n    SearchListingResultCardImageWrapper,\n    SearchListingResultTextWrapper,\n    SearchListingResultCardSubtitle,\n    SearchListingResultCardTitle,\n    SearchListingResultCardAttributeWrapper,\n    SearchListingResultCardPriceWrapper,\n    SearchListingResultCardAttribute,\n    SearchListingResultCardDate,\n    DummyImg,\n} from \"./skeletonLoadingDummyCardStyling\";\nimport { CSSProperties } from \"styled-components\";\n\ninterface SkeletonLoadingDummyCardProps {\n    props?: any;\n    style?: CSSProperties;\n}\n\nconst SkeletonLoadingDummyCard: React.FC<SkeletonLoadingDummyCardProps> = (props) => {\n    return (\n        <SearchListingResultCard style={props.style}>\n            <SearchListingResultCardImageWrapper>\n                <DummyImg></DummyImg>\n            </SearchListingResultCardImageWrapper>\n            <SearchListingResultTextWrapper>\n                <SearchListingResultCardSubtitle></SearchListingResultCardSubtitle>\n                <SearchListingResultCardTitle></SearchListingResultCardTitle>\n\n                <SearchListingResultCardDate></SearchListingResultCardDate>\n\n                {/* <SearchListingResultCardAttributeWrapper>\n                        <SearchListingResultCardAttribute></SearchListingResultCardAttribute>\n                        <SearchListingResultCardAttribute></SearchListingResultCardAttribute>\n                        <SearchListingResultCardAttribute></SearchListingResultCardAttribute>\n                        <SearchListingResultCardAttribute></SearchListingResultCardAttribute>\n                    </SearchListingResultCardAttributeWrapper> */}\n\n                <SearchListingResultCardPriceWrapper></SearchListingResultCardPriceWrapper>\n            </SearchListingResultTextWrapper>\n        </SearchListingResultCard>\n    );\n};\n\nexport default SkeletonLoadingDummyCard;\n","import { Fragment, useState } from \"react\";\n\nexport default function SearchListingPhoto({ imgKey }: { imgKey: string }) {\n    const [imgLoading, setImgLoading] = useState(true);\n    return (\n        <Fragment>\n            {imgKey && (\n                <img\n                    src={imgKey}\n                    alt=\"Featured Listing\"\n                    style={{\n                        display: imgLoading ? \"none\" : \"block\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                        gridColumn: \"1/2\",\n                        gridRow: \"1/2\",\n                    }}\n                    onLoad={() => {\n                        setImgLoading(false);\n                    }}\n                />\n            )}\n        </Fragment>\n    );\n}\n","import { motion } from \"framer-motion\";\nimport {\n    SearchListingResultCard,\n    SearchListingResultCardImageWrapper,\n    SearchListingResultCardSubtitle,\n    SearchListingResultCardTitle,\n    SearchListingResultCardAttributeWrapper,\n    SearchListingResultCardAttribute,\n    SearchListingResultCardPrice,\n    SearchListingLink,\n    SearchListingResultTextWrapper,\n    SearchListingResultCardPriceWrapper,\n    SearchListingResultReview,\n    SearchListingResultOverallReviewAvg,\n    SearchListingResultNoReviewText,\n    SearchListingSaveButtonWrapper,\n    HeartIcon,\n    SearchListingResultCardDate,\n} from \"../searchListingStyling\";\nimport { ColorTheme } from \"../../../components/globaStyledComponents/globalStyledComponentsStyling\";\nimport constructOptimisedImageUrl from \"../../../utils/imageOptimisation/constructOptimisedImageUrl\";\nimport SkeletonLoadingDummyCard from \"../../../components/skeletonLoadingDummyCard/skeletonLoadingDummySearchListingCard/skeletonLoadingDummyCard\";\nimport SearchListingPhoto from \"../SearchListingPhoto/SearchListingPhoto\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useMemo, useRef, useState, useEffect, TouchEventHandler, MouseEventHandler } from \"react\";\nimport { userModelSelector } from \"../../../state/selectors/userModel\";\nimport { accessTokenSelector } from \"../../../state/selectors/accessToken\";\nimport { useRecoilState } from \"recoil\";\nimport { toggleSaved } from \"../../../utils/savedListings/toggleSaved\";\nimport { signInMenuActivatedSelector } from \"../../../state/selectors/navbarToggle\";\nimport { SearchListingModel } from \"../../../interfaces/models/listingModel\";\nimport { QueryParams } from \"../searchListing\";\nimport ListingCardHostPfp from \"../../../components/listingCardHostPfp/listingCardHostPfp\";\n\ntype TouchClickEventHandler = (event: React.TouchEvent<HTMLButtonElement> | React.MouseEvent<HTMLButtonElement>) => void | Promise<void>;\n\nexport default function SearchListingResult({ listing, delay, clickedListingFromSearch }: { listing: SearchListingModel; delay: number; clickedListingFromSearch: any }) {\n    const [userModel, setUserModel] = useRecoilState(userModelSelector);\n    const [isSaved, setIsSaved] = useState(false);\n    const [accessToken, setAccessToken] = useRecoilState(accessTokenSelector);\n    const [signInMenuActivated, setSignInMenuActivated] = useRecoilState(signInMenuActivatedSelector);\n    const isSavedLoading = useRef(false);\n    const init = useRef(false);\n\n    const location = useLocation();\n    const queryParams = useMemo(() => {\n        const searchParams = new URLSearchParams(location.search);\n        const params: QueryParams = {};\n        for (let [key, value] of searchParams.entries()) {\n            params[key as keyof QueryParams] = value;\n        }\n        return params;\n    }, [location.search]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        //run only once if usermodel is true for init\n        if (init.current) return;\n        if (userModel && userModel.savedListings.includes(listing.id)) {\n            setIsSaved(true);\n            init.current = true;\n        }\n    }, [listing.id, userModel]);\n\n    const imageUrls = useMemo(() => {\n        if (listing?.listingImages?.length > 0) {\n            return listing.listingImages.map((imgKey) => {\n                return constructOptimisedImageUrl(imgKey?.key, 800);\n            });\n        }\n    }, [listing.listingImages]);\n\n    const getPlaceType = () => {\n        let placeType = \"\";\n        if (listing && listing.suburb !== null) {\n            const place = listing.suburb.toLowerCase().replace(/\\b\\w/g, (char) => char.toUpperCase());\n            switch (listing.typeOfPlace) {\n                case \"entire-place\":\n                    placeType = listing.propertyType + \" in \" + place;\n                    placeType = placeType[0].toUpperCase() + placeType.substring(1);\n                    break;\n                case \"hotel-room\":\n                    placeType = \"Hotel in \" + place;\n                    placeType = placeType[0].toUpperCase() + placeType.substring(1);\n                    break;\n                case \"private-room\":\n                    placeType = \"Private room in \" + place;\n                    placeType = placeType[0].toUpperCase() + placeType.substring(1);\n                    break;\n                case \"shared-room\":\n                    placeType = \"Shared room in \" + place;\n                    placeType = placeType[0].toUpperCase() + placeType.substring(1);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return placeType;\n    };\n\n    function convertDateRange(startDate: string, endDate: string): string {\n        // Parse the input date strings\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n\n        // Format the dates\n        const options: Intl.DateTimeFormatOptions = { day: \"2-digit\", month: \"short\" }; // Using 'short' for month abbreviation (e.g., \"May\")\n        const startStr = start.toLocaleDateString(\"en-GB\", options).replace(/ /g, \" \");\n        const endStr = end.toLocaleDateString(\"en-GB\", options).replace(/ /g, \" \");\n\n        // Check if the start and end dates are in the same month\n        if (start.getMonth() === end.getMonth() && start.getFullYear() === end.getFullYear()) {\n            // If in the same month, only show the day\n            const dayOptions: Intl.DateTimeFormatOptions = { day: \"2-digit\" };\n            const startDayStr = start.toLocaleDateString(\"en-GB\", dayOptions).replace(/ /g, \" \");\n            const endDayStr = end.toLocaleDateString(\"en-GB\", dayOptions).replace(/ /g, \" \");\n            return `${startDayStr} - ${endDayStr} ${start.toLocaleDateString(\"en-GB\", { month: \"short\" })}`;\n        }\n\n        return `${startStr} - ${endStr}`;\n    }\n\n    const handleSaveButton: TouchClickEventHandler = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (userModel) {\n            if (isSavedLoading.current) return;\n            try {\n                setIsSaved((prev) => !prev);\n                isSavedLoading.current = true;\n                await toggleSaved(listing.id, userModel, accessToken);\n            } catch (err: any) {\n                console.log(err);\n                setIsSaved((prev) => !prev);\n            } finally {\n                isSavedLoading.current = false;\n            }\n        } else {\n            setSignInMenuActivated(true);\n        }\n    };\n    let touchStartY: number;\n\n    const handleTouchStart: TouchEventHandler<HTMLElement> = (e) => {\n        touchStartY = e.touches[0].clientY;\n    };\n\n    const getURL = () => {\n        const arrivalDateString = queryParams.arrivalDate ? `arrivalDate=${queryParams.arrivalDate}` : \"\";\n        const departureDateString = queryParams.departureDate ? `departureDate=${queryParams.departureDate}` : \"\";\n        const searchFiltersFromQueryParams = queryParams.searchFilters ? JSON.parse(queryParams.searchFilters) : null;\n        const adultsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.adults ? `adults=${searchFiltersFromQueryParams.adults}` : \"\";\n        const childrenString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.children ? `children=${searchFiltersFromQueryParams.children}` : \"\";\n        const petsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.pets ? `pets=${searchFiltersFromQueryParams.pets}` : \"\";\n        const infantsString = searchFiltersFromQueryParams && searchFiltersFromQueryParams.infants ? `infants=${searchFiltersFromQueryParams.infants}` : \"\";\n        const searchParamsStrings = [arrivalDateString, departureDateString, adultsString, childrenString, petsString, infantsString].filter((param) => param !== \"\").join(\"&\");\n        return `/listing/${listing.id}${searchParamsStrings ? `?${searchParamsStrings}` : \"\"}`;\n    };\n\n    const handleTouchEnd: TouchEventHandler<HTMLElement> = (e) => {\n        const touchEndY = e.changedTouches[0].clientY;\n        const diff = Math.abs(touchStartY - touchEndY);\n        if (diff < 4) {\n            // Adjust threshold as needed\n            e.preventDefault();\n            navigate(getURL());\n        }\n    };\n    return (\n        <SearchListingResultCard>\n            <motion.div style={{ zIndex: 10, width: \"100%\" }} initial={{ opacity: 1 }} animate={{ opacity: 0 }} transition={{ duration: 0.5, delay: delay }}>\n                <div style={{ position: \"absolute\", top: \"0\", left: \"0\", width: \"100%\" }}>\n                    <SkeletonLoadingDummyCard style={{ minWidth: \"unset\", width: \"100%\" }} />\n                </div>\n            </motion.div>\n            <motion.div style={{ zIndex: 11 }} initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.5, delay: delay }}>\n                <SearchListingLink\n                    to={getURL()}\n                    target={window.innerWidth > 768 ? \"_blank\" : \"\"}\n                    rel=\"noopener noreferrer\"\n                    {...(location.pathname.includes(\"search\")\n                        ? { onTouchStart: handleTouchStart as TouchEventHandler<HTMLElement>, onTouchEnd: handleTouchEnd as TouchEventHandler<HTMLElement> }\n                        : {})}\n                    onClick={(e) => {\n                        clickedListingFromSearch(listing.id);\n                        e.stopPropagation();\n                    }}\n                >\n                    <SearchListingSaveButtonWrapper onTouchEnd={handleSaveButton} onClick={handleSaveButton}>\n                        <HeartIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\">\n                            <path\n                                d=\"M2.26061 13.3918C5.07331 17.4376 8.89663 20.4197 12.8238 23.2792C12.9722 23.3873 13.373 23.3224 13.5518 23.1927C16.4106 21.1187 19.1902 18.9466 21.5963 16.3436C23.5642 14.2148 25.3072 11.9361 26.0237 9.04917C26.8138 5.86965 25.4788 2.5114 22.8246 0.914431C20.2484 -0.634975 16.9311 -0.189611 14.4629 2.05451L14.4198 2.09405C14.1243 2.36677 13.8509 2.66287 13.5765 2.96004C13.443 3.10465 13.3093 3.2495 13.1726 3.39204C13.0119 3.23609 12.8591 3.08852 12.7119 2.94629C12.4578 2.7008 12.2197 2.47076 11.9833 2.23899C11.949 2.20545 11.9146 2.17227 11.8799 2.13945C9.70682 0.0822306 6.68254 -0.554266 4.17227 0.529602C1.6306 1.62644 -0.0576046 4.36492 0.00150402 7.35708C0.0461959 9.62714 1.00058 11.5816 2.26061 13.3918Z\"\n                                fill={isSaved ? `${ColorTheme.Red.color}` : `${ColorTheme.Black.opacityColor}`}\n                                transform=\"translate(1, 1)\"\n                            />\n                        </HeartIcon>\n                    </SearchListingSaveButtonWrapper>\n                    {/* <ListingCardHostPfp src={} /> */}\n                    <SearchListingResultCardImageWrapper>{imageUrls && <SearchListingPhoto imgKey={imageUrls[0]} />}</SearchListingResultCardImageWrapper>\n                    <SearchListingResultTextWrapper>\n                        <SearchListingResultCardSubtitle>{getPlaceType()}</SearchListingResultCardSubtitle>\n                        <SearchListingResultCardTitle>{listing.propertyTitle}</SearchListingResultCardTitle>\n                        {queryParams.arrivalDate && queryParams.departureDate ? (\n                            <SearchListingResultCardAttributeWrapper>\n                                <SearchListingResultCardAttribute>\n                                    {listing.beds} {listing.beds > 1 ? \"beds\" : \"bed\"}\n                                </SearchListingResultCardAttribute>\n                                {/* <SearchListingResultCardAttribute>\n                                    {listing.guests} {listing.guests > 1 ? \"guests\" : \"guest\"}\n                                </SearchListingResultCardAttribute> */}\n                            </SearchListingResultCardAttributeWrapper>\n                        ) : (\n                            <SearchListingResultCardDate>{convertDateRange(listing.startDate, listing.endDate)} </SearchListingResultCardDate>\n                        )}\n\n                        <SearchListingResultCardPriceWrapper>\n                            <SearchListingResultCardPrice>${Number(listing.totalPrice / 100).toFixed(0)} AUD</SearchListingResultCardPrice>\n                            <SearchListingResultReview>\n                                {listing.overallAverage && listing.overallAverage > 0 ? (\n                                    <SearchListingResultOverallReviewAvg>\n                                        {(listing.overallAverage / 10).toFixed(1)} <span>({listing.totalReviews})</span>\n                                    </SearchListingResultOverallReviewAvg>\n                                ) : (\n                                    <SearchListingResultNoReviewText>New</SearchListingResultNoReviewText>\n                                )}\n                            </SearchListingResultReview>\n                        </SearchListingResultCardPriceWrapper>\n                    </SearchListingResultTextWrapper>\n                </SearchListingLink>\n            </motion.div>\n        </SearchListingResultCard>\n    );\n}\n","import { useRef, useState, TouchEvent, MouseEvent } from \"react\";\n\nconst useHandleMobileSearchResults = (numberOfListings: number) => {\n    const searchListingContainerRef = useRef<HTMLDivElement | null>(null);\n    const searchListingResultsSpacerMobileRef = useRef<HTMLDivElement | null>(null);\n    const initialTouchY = useRef<number | null>(null);\n    const closeContainerTrigger = useRef<boolean>(false);\n    const containerInitialTouchY = useRef<number | null>(null);\n    // const userMoveY = useRef(0);\n\n    const [isSearchResultsContainerClosed, setIsSearchResultsContainerClosed] = useState(false);\n\n    // the following event handler is for the mobile search results container\n    const handleContainerTitleTouchStart = (e: TouchEvent<HTMLElement>) => {\n        // set initial position of the title\n        initialTouchY.current = e.touches[0].clientY;\n        // prevent the container from scrolling when user is touching move the title\n        if (searchListingContainerRef.current && searchListingResultsSpacerMobileRef.current) {\n            searchListingContainerRef.current.style.overflow = \"hidden\";\n            searchListingResultsSpacerMobileRef.current.style.transition = \"unset\";\n        }\n    };\n    const handleContainerTitleTouchMove = (e: TouchEvent<HTMLElement>) => {\n        // record the current position of the title\n        let currentY = e.touches[0].clientY;\n        // calculate the relative movement of the title from the initial position\n        let relativeMoveY = 0;\n        if (initialTouchY.current) {\n            relativeMoveY = currentY - initialTouchY.current;\n        }\n        // set the current relative movement of the title\n        // userMoveY.current = relativeMoveY;\n        // if the relative movement of the title is greater than 80, close the container\n        if (relativeMoveY > 80) {\n            closeContainerTrigger.current = true;\n        } else if (relativeMoveY < -5) {\n            closeContainerTrigger.current = false;\n        }\n        // move the title according to the relative movement\n        if (isSearchResultsContainerClosed) {\n            searchListingResultsSpacerMobileRef.current!.style.height = `calc(100dvh - 76px + ${relativeMoveY}px)`;\n        } else if (!isSearchResultsContainerClosed && numberOfListings < 3 && relativeMoveY < -5) {\n            e.preventDefault();\n        } else {\n            if (searchListingResultsSpacerMobileRef.current) {\n                searchListingResultsSpacerMobileRef.current.style.height = `calc(40dvh + ${relativeMoveY}px)`;\n            }\n        }\n    };\n    const handleContainerTitleTouchEnd = (e: TouchEvent<HTMLElement>) => {\n        // if the relative movement of the title is down greater than 80, close the container, else open the container\n        if (searchListingResultsSpacerMobileRef.current) {\n            searchListingResultsSpacerMobileRef.current.style.transition = \"height 0.5s ease\";\n        }\n\n        // searchListingContainerRef.current.style.overflow = \"scroll\";\n        if (closeContainerTrigger.current) {\n            if (searchListingContainerRef.current && searchListingResultsSpacerMobileRef.current) {\n                searchListingContainerRef.current.scrollTo(0, 0);\n                searchListingContainerRef.current.style.overflow = \"hidden\";\n\n                setIsSearchResultsContainerClosed(true);\n                searchListingResultsSpacerMobileRef.current.style.height = \"calc(100dvh - 76px)\";\n            }\n        } else {\n            setIsSearchResultsContainerClosed(false);\n            if (searchListingResultsSpacerMobileRef.current && searchListingContainerRef.current) {\n                searchListingResultsSpacerMobileRef.current.style.height = \"40dvh\";\n                searchListingContainerRef.current.style.overflow = \"scroll\";\n            }\n        }\n    };\n    // container event handler\n    const handleContainerOpenOnClick = (e: MouseEvent<HTMLElement>) => {\n        if (searchListingResultsSpacerMobileRef.current && searchListingContainerRef.current) {\n            // open the container when user click the title\n            searchListingResultsSpacerMobileRef.current.style.transition = \"height 0.5s ease\";\n            searchListingContainerRef.current.style.overflow = \"scroll\";\n            setIsSearchResultsContainerClosed(false);\n            searchListingResultsSpacerMobileRef.current.style.height = \"40dvh\";\n        }\n    };\n    const handleContainerTouchStart = (e: TouchEvent<HTMLElement>) => {\n        if (searchListingResultsSpacerMobileRef.current) {\n            // set initial position of the title\n            containerInitialTouchY.current = e.touches[0].clientY;\n            searchListingResultsSpacerMobileRef.current.style.transition = \"unset\";\n        }\n    };\n\n    const handleContainerTouchMove = (e: TouchEvent<HTMLElement>) => {\n        if (searchListingResultsSpacerMobileRef.current && searchListingResultsSpacerMobileRef.current?.getBoundingClientRect().y === 0 && !isSearchResultsContainerClosed) {\n            // if the container is at middle position, enable the container to scroll down to close the container\n            // record the current position of the title\n            let currentY = e.touches[0].clientY;\n            // calculate the relative movement of the title from the initial position\n            let relativeMoveY = 0;\n            if (containerInitialTouchY.current) {\n                relativeMoveY = currentY - containerInitialTouchY.current;\n            }\n            // set the current relative movement of the title\n            // if the relative movement of the title is greater than 80, close the container\n            if (relativeMoveY > 80) {\n                closeContainerTrigger.current = true;\n            } else if (relativeMoveY < -5) {\n                closeContainerTrigger.current = false;\n            }\n        }\n    };\n    const handleContainerTouchEnd = (e: TouchEvent<HTMLElement>) => {\n        // if the relative movement of the title is down greater than 80, close the container, else open the container\n        if (searchListingResultsSpacerMobileRef.current) {\n            searchListingResultsSpacerMobileRef.current.style.transition = \"height 0.5s ease\";\n        }\n\n        if (closeContainerTrigger.current && searchListingResultsSpacerMobileRef.current) {\n            if (searchListingContainerRef.current) {\n                searchListingContainerRef.current.scrollTo(0, 0);\n                searchListingContainerRef.current.style.overflow = \"hidden\";\n                setIsSearchResultsContainerClosed(true);\n                searchListingResultsSpacerMobileRef.current.style.height = \"calc(100dvh - 76px)\";\n            }\n        }\n    };\n    const handleMapClickCloseContainer = () => {\n        if (searchListingResultsSpacerMobileRef.current && searchListingContainerRef.current) {\n            searchListingResultsSpacerMobileRef.current.style.transition = \"height 0.5s ease\";\n\n            searchListingContainerRef.current.scrollTo(0, 0);\n            searchListingContainerRef.current.style.overflow = \"hidden\";\n\n            setIsSearchResultsContainerClosed(true);\n            searchListingResultsSpacerMobileRef.current.style.height = \"calc(100dvh - 76px)\";\n        }\n    };\n    return {\n        handleContainerTitleTouchStart,\n        handleContainerTitleTouchMove,\n        handleContainerTitleTouchEnd,\n        handleContainerOpenOnClick,\n        isSearchResultsContainerClosed,\n        searchListingContainerRef,\n        searchListingResultsSpacerMobileRef,\n        handleContainerTouchStart,\n        handleContainerTouchMove,\n        handleContainerTouchEnd,\n        handleMapClickCloseContainer,\n    };\n};\n\nexport default useHandleMobileSearchResults;\n","import styled from \"styled-components\";\nimport { ColorTheme, TextTheme, ShadowTheme, SpacingTheme } from \"../../globaStyledComponents/globalStyledComponentsStyling\";\n\ninterface WithIconBtnWrapperProps {\n    backgroundColor?: string;\n    left?: string;\n    right?: string;\n    top?: string;\n    bottom?: string;\n    position?: string;\n    center?: boolean;\n}\n\nexport const WithIconBtnWrapper = styled.button<WithIconBtnWrapperProps>`\n    position: ${(props) => (props.position ? props.position : \"relative\")};\n    left: ${(props) => (props.left ? props.left : \"auto\")};\n    right: ${(props) => (props.right ? props.right : \"auto\")};\n    top: ${(props) => (props.top ? props.top : \"auto\")};\n    bottom: ${(props) => (props.bottom ? props.bottom : \"auto\")};\n    background-color: ${(props) => (props.backgroundColor ? props.backgroundColor : ColorTheme.Black.color)};\n    height: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: ${SpacingTheme.spacing_200.gap};\n    padding: ${SpacingTheme.spacing_250.padding} ${SpacingTheme.spacing_350.padding};\n    border-radius: 50px;\n    border: none;\n    z-index: 10;\n    box-shadow: ${ShadowTheme.shadow_100.boxShadow};\n    ${(props) => props.center && \"transform: translate(-50%);\"};\n    transition: bottom 0.3s ease-in-out;\n`;\n\nexport const IconWrapper = styled.div`\n    width: 12px;\n    height: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${ColorTheme.White.color};\n`;\nexport const Icon = styled.img<{ svgColorInvert?: boolean }>`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    ${(props) => props.svgColorInvert && \"filter: invert(1);\"};\n`;\nexport const BtnText = styled.p`\n    color: ${ColorTheme.White.color};\n    font-size: ${TextTheme.sans_300_semi.fontSize};\n    line-height: ${TextTheme.sans_300_semi.lineHeight};\n    font-weight: ${TextTheme.sans_300_semi.fontWeight};\n`;\n","import { ButtonHTMLAttributes } from \"react\";\nimport { BtnText, Icon, IconWrapper, WithIconBtnWrapper } from \"./withIconBtnStyling\";\n\ntype InteractionEvent = React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>;\ntype InteractionHandler = (event: InteractionEvent) => void;\n\ninterface WithIconBtnProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    iconSrc?: string;\n    alt?: string;\n    children: React.ReactNode;\n    backgroundColor?: string;\n    left?: string;\n    right?: string;\n    top?: string;\n    bottom?: string;\n    position?: string;\n    center?: boolean;\n    svgColorInvert?: boolean;\n    isTouchDevice?: boolean;\n    onTouchEnd?: InteractionHandler;\n    onClick?: InteractionHandler;\n}\n\nconst WithIconBtn = ({ iconSrc, alt, children, svgColorInvert, isTouchDevice, onClick, onTouchEnd, ...props }: WithIconBtnProps) => {\n    const handleInteraction: InteractionHandler = (event) => {\n        if (isTouchDevice && onTouchEnd) {\n            onTouchEnd(event);\n        } else if (!isTouchDevice && onClick) {\n            onClick(event);\n        }\n    };\n    return (\n        <WithIconBtnWrapper onClick={!isTouchDevice ? handleInteraction : undefined} onTouchEnd={isTouchDevice ? handleInteraction : undefined} {...props}>\n            {iconSrc && (\n                <IconWrapper>\n                    <Icon src={iconSrc} alt={alt ? alt : \"button icon\"} svgColorInvert={svgColorInvert} />\n                </IconWrapper>\n            )}\n            <BtnText>{children}</BtnText>\n        </WithIconBtnWrapper>\n    );\n};\n\nexport default WithIconBtn;\n","import { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\nimport { callApi } from \"../../utils/api/api\";\n\n// Import styling\nimport {\n    SearchListingContainer,\n    SearchListingResultsContainer,\n    SearchListingResultCardsWrapper,\n    SearchListingResultsContainerTitleWrapper,\n    SearchListingMapWrapper,\n    PaginationWrapper,\n    PaginationTitle,\n    SearchListingResultsContainerDesktopTitleIcon,\n    SearchListingMapExitButton,\n    NoResultWrapper,\n    NoResultTitle,\n    NoResultSubTitle,\n    SearchListingResultsContainerMobileTitleLoading,\n    SearchListingResultsContainerMobileTitle,\n    SearchListingResultsContainerMobileTitleTab,\n    SearchListingResultsSpacerMobile,\n} from \"./searchListingStyling\";\nimport HelmetTags from \"../../components/Helmet/HelmetTags\";\n\n// Import components\nimport Pagination from \"@mui/material/Pagination\";\n\n// Import custom components\nimport SearchListingMap from \"./map/searchListingMap\";\nimport SkeletonLoadingDummyCard from \"../../components/skeletonLoadingDummyCard/skeletonLoadingDummySearchListingCard/skeletonLoadingDummyCard\";\nimport SearchListingResult from \"./SearchListingResult/SearchListingResult\";\nimport MobileNavbar from \"../../components/navbar/mobileNavbar/mobileNavbar\";\nimport CategoryBar from \"../../components/categoryBar/categoryBar\";\nimport useScrollDirection from \"../../hook/useScrollDirection\";\nimport { searchFiltersSelector } from \"../../state/selectors/searchQuery\";\nimport { useRecoilState } from \"recoil\";\nimport useHandleMobileSearchResults from \"../../hook/useHandleMobileSearchResults\";\nimport { SearchFilters } from \"../../interfaces/state/searchQuery\";\nimport { defaultSearchFilter } from \"../../utils/defaultSearchQuery/defaultSearchQuery\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { searchQuerySelector } from \"../../state/selectors/searchQuery\";\nimport { calculateNumberOfFilterSelected } from \"../../components/categoryBar/filterBtn/calculateNumberOfFilterSelected\";\nimport { identityIdSelector } from \"../../state/selectors/identityId\";\nimport { userModelSelector } from \"../../state/selectors/userModel\";\nimport { loggedInSelector } from \"../../state/selectors/loggedIn\";\nimport { SearchListingModel } from \"../../interfaces/models/listingModel\";\nimport SearchFilterPopup from \"./filterPopups/searchFilters\";\nimport Analytics from \"analytics\";\nimport segmentPlugin from \"@analytics/segment\";\nimport WithIconBtn from \"../../components/btn/withIconBtn/withIconBtn\";\nimport useIsTouchDevice from \"../../hook/useIsTouchDevice\";\n\nconst analytics = Analytics({\n    app: \"Anystay\",\n    plugins: [\n        segmentPlugin({\n            writeKey: process.env.REACT_APP_SEGMENT_WRITE_KEY,\n        }),\n    ],\n});\nexport interface BoundingBoxInterface {\n    bottomLeft: {\n        lat: number;\n        lon: number;\n    };\n    topRight: {\n        lat: number;\n        lon: number;\n    };\n}\n\nexport interface QueryParams {\n    location?: string;\n    locationId?: string;\n    searchFilters?: any;\n    arrivalDate?: string;\n    departureDate?: string;\n    title?: string;\n    lat?: string;\n    lng?: string;\n}\nexport interface PriceDistributionData {\n    priceDistribution: { [key: string]: number };\n    min: number | null;\n    max: number | null;\n    total: number | null;\n}\n\nfunction SearchListing() {\n    const [listings, setListings] = useState<{ [key: number]: SearchListingModel[] }>({});\n\n    //get search params\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const queryParams = useMemo(() => {\n        const searchParams = new URLSearchParams(location.search);\n        const params: QueryParams = {};\n        for (let [key, value] of searchParams.entries()) {\n            params[key as keyof QueryParams] = value;\n        }\n        return params;\n    }, [location.search]);\n\n    const [searchFiltersRecoil, setSearchFiltersRecoil] = useRecoilState(searchFiltersSelector);\n    const [searchQuery, setSearchQuery] = useRecoilState(searchQuerySelector);\n    const [identityId, setIdentityId] = useRecoilState(identityIdSelector);\n    const [userModel, setUserModel] = useRecoilState(userModelSelector);\n    const [loggedIn, setLoggedIn] = useRecoilState(loggedInSelector);\n    const [distribution, setDistribution] = useState<{ [key: string]: number }>({});\n\n    const currentCategory = useRef(\"\");\n\n    useEffect(() => {\n        if (queryParams.searchFilters) {\n            const searchFilters = JSON.parse(queryParams.searchFilters);\n            setSearchFiltersRecoil(searchFilters);\n        }\n    }, [queryParams.searchFilters, setSearchFiltersRecoil]);\n\n    const [boundingBox, setBoundingBox] = useState<BoundingBoxInterface | null>(null);\n\n    const [mapFullscreen, setMapFullscreen] = useState(false);\n    const [totalResults, setTotalResults] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageCount, setPageCount] = useState(1);\n    const [isSearchFilterPopup, setIsSearchFilterPopup] = useState(false);\n\n    //mobile scroll effect state and ref\n    const {\n        handleContainerTitleTouchStart,\n        handleContainerTitleTouchMove,\n        handleContainerTitleTouchEnd,\n        handleContainerOpenOnClick,\n        isSearchResultsContainerClosed,\n        searchListingContainerRef,\n        searchListingResultsSpacerMobileRef,\n        handleContainerTouchStart,\n        handleContainerTouchMove,\n        handleContainerTouchEnd,\n        handleMapClickCloseContainer,\n    } = useHandleMobileSearchResults(totalResults);\n    const [scrollDirection, isHitBottom] = useScrollDirection(searchListingContainerRef);\n\n    const isTouchDevice = useIsTouchDevice();\n\n    const convertDateFromUrlToDateObj = (dateString: string) => {\n        // new Date(\"2024-05-14T00:00:00.000\").toString()\n        const parts = dateString.split(\"-\"); // Split the string into parts using the \"-\" delimiter\n        const convertedDate = new Date(`${parts[2]}-${parts[1]}-${parts[0]}T00:00:00.000`).toString();\n        if (convertedDate === \"Invalid Date\") {\n            return null;\n        }\n        return convertedDate;\n    };\n\n    const fetchListings = useCallback(\n        async (\n            place_id: string | undefined,\n            startDate: string,\n            endDate: string,\n            searchFilters: SearchFilters,\n            page = 1,\n            boundingBox: BoundingBoxInterface | null = null,\n            isMapRequest: boolean = false\n        ) => {\n            setLoading(true);\n            if (!boundingBox) {\n                //if no bounding box given, mean search by location, remove the bounding box\n                setBoundingBox(null);\n            }\n            callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-search`, \"search\", {\n                body: {\n                    placeId: place_id,\n                    startDate: startDate ? convertDateFromUrlToDateObj(startDate as string) : \"anyArrival\",\n                    endDate: endDate ? convertDateFromUrlToDateObj(endDate as string) : \"anyDeparture\",\n                    currentDate: new Date().toString(),\n                    searchFilters: searchFilters,\n                    page: page,\n                    size: 30,\n                    boundingBox: boundingBox,\n                    isMapRequest: isMapRequest,\n                    identifier: loggedIn ? userModel?.username : identityId,\n                },\n            })\n                .then((res) => {\n                    setTotalResults(res.total);\n                    if (page === 1) {\n                        //if page === 1, that means search filter has changed, init listing\n                        setListings({ [page]: res.listings });\n                    } else {\n                        //if page !== 1, that means page has changed, cache previously visited page data\n                        setListings((prevState) => {\n                            return { ...prevState, [page]: res.listings };\n                        });\n                    }\n                    setPageCount(Math.ceil(res.total / 30));\n                    setLoading(false);\n                    if (res.distribution) {\n                        setDistribution(res.distribution);\n                    }\n                })\n                .catch((err) => console.log(err));\n        },\n        []\n    );\n\n    //init and when searchfilter changes\n    useEffect(() => {\n        //first time fetch use seachfilter from url, others all use recoilstate\n        const arrivalDate = queryParams.arrivalDate ? queryParams.arrivalDate : \"anyArrival\";\n        const departureDate = queryParams.departureDate ? queryParams.departureDate : \"anyDeparture\";\n        const placeId = queryParams.locationId ? queryParams.locationId : \"ChIJ38WHZwf9KysRUhNblaFnglM\";\n        const defaultSearchFilterCopy = JSON.parse(JSON.stringify(defaultSearchFilter));\n        defaultSearchFilterCopy.priceRange = { min: 0, max: 0 };\n        fetchListings(placeId, arrivalDate, departureDate, queryParams.searchFilters ? JSON.parse(queryParams.searchFilters) : defaultSearchFilterCopy);\n        currentCategory.current = searchFiltersRecoil.category;\n    }, [fetchListings, queryParams.arrivalDate, queryParams.departureDate, queryParams.locationId, queryParams.searchFilters]);\n\n    const hideNavbar = () => {\n        if (isSearchResultsContainerClosed) {\n            return true;\n        } else if (scrollDirection === \"down\" && !isHitBottom) {\n            return true;\n        }\n    };\n\n    const clickedListingFromSearch = (listingId: string) => {\n        analytics.track(\"ClickedListingFromSearch\", {\n            userId: loggedIn ? userModel?.id : identityId,\n            listingId: listingId,\n        });\n    };\n\n    const clickedListingFromMap = (listingId: string) => {\n        analytics.track(\"ClickedListingFromMap\", {\n            userId: loggedIn ? userModel?.id : identityId,\n            listingId: listingId,\n        });\n    };\n\n    const clickedNextPageFromSearch = (pageNum: number) => {\n        analytics.track(\"ClickedListingFromMap\", {\n            userId: loggedIn ? userModel?.id : identityId,\n            pageNum: pageNum,\n            searchQuery: searchQuery,\n        });\n    };\n\n    const updateSearchBySearchFilters = (searchFilters: SearchFilters) => {\n        const placeTitle = searchQuery.title ? searchQuery.title : \"Australia\";\n        const arrivalDate = searchQuery.startDate\n            ? `${String((searchQuery.startDate as Date).getDate()).padStart(2, \"0\")}-${String((searchQuery.startDate as Date).getMonth() + 1).padStart(2, \"0\")}-${(searchQuery.startDate as Date).getFullYear()}`\n            : null;\n        const departureDate = searchQuery.endDate\n            ? `${String((searchQuery.endDate as Date).getDate()).padStart(2, \"0\")}-${String((searchQuery.endDate as Date).getMonth() + 1).padStart(2, \"0\")}-${(searchQuery.endDate as Date).getFullYear()}`\n            : null;\n        const locationString = placeTitle !== \"Australia\" ? `location=${placeTitle}` : \"\";\n        const locationIdString = searchQuery.placeId !== \"ChIJ38WHZwf9KysRUhNblaFnglM\" ? `locationId=${searchQuery.placeId}` : \"\";\n        const arrivalDateString = arrivalDate ? `arrivalDate=${arrivalDate}` : \"\";\n        const departureDateString = departureDate ? `departureDate=${departureDate}` : \"\";\n        const lat = searchQuery.lat ? `lat=${searchQuery.lat}` : \"\";\n        const lng = searchQuery.lng ? `lng=${searchQuery.lng}` : \"\";\n        //if filter is not the default\n        const searchFiltersString =\n            calculateNumberOfFilterSelected(searchFilters) > 0 ||\n            searchQuery.searchFilters.adults ||\n            searchQuery.searchFilters.children ||\n            searchQuery.searchFilters.infants ||\n            searchQuery.searchFilters.pets\n                ? `searchFilters=${JSON.stringify(searchFilters)}`\n                : \"\";\n        const searchParamsStrings = [locationString, locationIdString, arrivalDateString, departureDateString, lat, lng, searchFiltersString].filter((param) => param !== \"\").join(\"&\");\n        navigate(`/search${searchParamsStrings ? `?${searchParamsStrings}` : \"\"}`);\n    };\n    const filterBtnPosition = () => {\n        if (isSearchResultsContainerClosed) {\n            return `${24 + 76}px`;\n        } else {\n            return isHitBottom ? `${24 + 146}px` : hideNavbar() ? \"24px\" : `${24 + 65}px`;\n        }\n    };\n    const updateSearchQuery = () => {\n        const params = new URLSearchParams(window.location.search);\n        const updatedSearchQuery = { ...searchQuery };\n        const parseLocationString = (location: string) => {\n            const newLocations = location.split(\"-\");\n            return newLocations.map((newLocation) => newLocation.charAt(0).toUpperCase() + newLocation.slice(1).toLowerCase()).join(\" \");\n        };\n        const parseDateString = (dateString: string): Date => {\n            const [day, month, year] = dateString.split(\"-\").map(Number);\n            return new Date(year, month - 1, day);\n        };\n\n        if (!updatedSearchQuery.lat && params.has(\"lat\")) {\n            updatedSearchQuery.lat = parseFloat(params.get(\"lat\")!);\n        }\n        if (!updatedSearchQuery.lng && params.has(\"lng\")) {\n            updatedSearchQuery.lng = parseFloat(params.get(\"lng\")!);\n        }\n        if (!updatedSearchQuery.title && params.has(\"location\")) {\n            updatedSearchQuery.title = parseLocationString(params.get(\"location\")!);\n        }\n        if (!updatedSearchQuery.startDate && params.has(\"arrivalDate\")) {\n            updatedSearchQuery.startDate = parseDateString(params.get(\"arrivalDate\")!);\n        }\n        if (!updatedSearchQuery.endDate && params.has(\"departureDate\")) {\n            updatedSearchQuery.endDate = parseDateString(params.get(\"departureDate\")!);\n        }\n        if (!updatedSearchQuery.placeId && params.has(\"placeId\")) {\n            updatedSearchQuery.placeId = params.get(\"placeId\")!;\n        }\n        if (params.has(\"searchFilters\")) {\n            try {\n                const filters = JSON.parse(params.get(\"searchFilters\")!);\n\n                const validFilters: SearchFilters = {\n                    category: filters.category || \"\",\n                    typeOfPlace: filters.typeOfPlace || [],\n                    propertyType: filters.propertyType || [],\n                    optionsForYourStay: filters.optionsForYourStay || [],\n                    priceRange: filters.priceRange || { min: 0, max: 10000 },\n                    guests: filters.guests || 0,\n                    adults: filters.adults || 0,\n                    children: filters.children || 0,\n                    infants: filters.infants || 0,\n                    pets: filters.pets || 0,\n                    bedrooms: filters.bedrooms || 0,\n                    beds: filters.beds || 0,\n                    bathrooms: filters.bathrooms || 0,\n                    amenities: filters.amenities || [],\n                    services: filters.services || [],\n                    houseRules: filters.houseRules || [],\n                };\n                updatedSearchQuery.searchFilters = validFilters;\n            } catch (error) {\n                console.error(\"Failed to parse searchFilters:\", error);\n            }\n        }\n\n        return updatedSearchQuery;\n    };\n\n    useEffect(() => {\n        setSearchQuery(updateSearchQuery());\n    }, []);\n\n    const maxPrice = useCallback(() => {\n        if (listings && listings[1] && listings[1].length > 0) {\n            const priceListing = listings[1].map((listing: SearchListingModel) => listing.minimumPrice / 100);\n            return Math.max(...priceListing);\n        } else {\n            return 1000;\n        }\n    }, [listings]);\n\n    useEffect(() => {\n        maxPrice();\n    }, [maxPrice]);\n\n    const handleInteraction = (event: React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>): void => {\n        event.stopPropagation();\n        setIsSearchFilterPopup(true);\n    };\n\n    return (\n        <>\n            <HelmetTags title={`Anystay | Stays in ${queryParams.location ? queryParams.location : \"Australia\"}`} />\n            <CategoryBar\n                updateFilter={(filter) => {\n                    const placeTitle = searchQuery.title ? searchQuery.title : \"Australia\";\n                    const arrivalDate = searchQuery.startDate\n                        ? `${String((searchQuery.startDate as Date).getDate()).padStart(2, \"0\")}-${String((searchQuery.startDate as Date).getMonth() + 1).padStart(2, \"0\")}-${(searchQuery.startDate as Date).getFullYear()}`\n                        : null;\n                    const departureDate = searchQuery.endDate\n                        ? `${String((searchQuery.endDate as Date).getDate()).padStart(2, \"0\")}-${String((searchQuery.endDate as Date).getMonth() + 1).padStart(2, \"0\")}-${(searchQuery.endDate as Date).getFullYear()}`\n                        : null;\n                    const locationString = placeTitle !== \"Australia\" ? `location=${placeTitle}` : \"\";\n                    const locationIdString = searchQuery.placeId !== \"ChIJ38WHZwf9KysRUhNblaFnglM\" ? `locationId=${searchQuery.placeId}` : \"\";\n                    const arrivalDateString = arrivalDate ? `arrivalDate=${arrivalDate}` : \"\";\n                    const departureDateString = departureDate ? `departureDate=${departureDate}` : \"\";\n                    const lat = searchQuery.lat ? `lat=${searchQuery.lat}` : \"\";\n                    const lng = searchQuery.lng ? `lng=${searchQuery.lng}` : \"\";\n                    //if filter is not the default\n                    const filterCopy = JSON.parse(JSON.stringify(filter));\n                    if (currentCategory.current !== filter.category) {\n                        filterCopy.priceRange = { min: 0, max: 0 };\n                        currentCategory.current = filterCopy.category;\n                    }\n\n                    const searchFiltersString =\n                        calculateNumberOfFilterSelected(filterCopy) > 0 ||\n                        filterCopy.adults ||\n                        filterCopy.children ||\n                        filterCopy.infants ||\n                        filterCopy.pets ||\n                        filterCopy.category !== searchFiltersRecoil.category\n                            ? `searchFilters=${JSON.stringify(filterCopy)}`\n                            : \"\";\n                    const searchParamsStrings = [locationString, locationIdString, arrivalDateString, departureDateString, lat, lng, searchFiltersString].filter((param) => param !== \"\").join(\"&\");\n                    setSearchFiltersRecoil(filter);\n                    navigate(`/search${searchParamsStrings ? `?${searchParamsStrings}` : \"\"}`);\n                }}\n                distribution={distribution}\n                isTouchDevice={isTouchDevice}\n                searchListingContainerRef={searchListingContainerRef}\n                setPage={setPage}\n            />\n            <MobileNavbar hide={hideNavbar()} isTouchDevice={isTouchDevice} />\n            {location.pathname.includes(\"/search\") && window.innerWidth < 768 && !isSearchFilterPopup && (\n                <WithIconBtn\n                    isTouchDevice={isTouchDevice}\n                    onClick={handleInteraction}\n                    onTouchEnd={handleInteraction}\n                    position=\"fixed\"\n                    bottom={filterBtnPosition()}\n                    left=\"50%\"\n                    center\n                    iconSrc=\"https://d292awxalydr86.cloudfront.net/Universal+icons/filter.svg\"\n                    svgColorInvert\n                >\n                    Filters\n                </WithIconBtn>\n            )}\n            {/* searchFilter for mobile */}\n            {isSearchFilterPopup && (\n                <SearchFilterPopup\n                    togglePopup={() => setIsSearchFilterPopup((prev) => !prev)}\n                    updateSearchBySearchFilters={updateSearchBySearchFilters}\n                    distribution={distribution}\n                    setPage={setPage}\n                />\n            )}\n\n            <SearchListingContainer\n                ref={searchListingContainerRef}\n                onTouchStart={(e) => handleContainerTouchStart(e)}\n                onTouchMove={(e) => {\n                    if (searchListingResultsSpacerMobileRef.current && searchListingResultsSpacerMobileRef.current?.getBoundingClientRect().y === 0 && !isSearchResultsContainerClosed) {\n                        handleContainerTouchMove(e);\n                    }\n                }}\n                onTouchEnd={(e) => handleContainerTouchEnd(e)}\n                onTouchCancel={(e) => handleContainerTouchEnd(e)}\n            >\n                <SearchListingResultsSpacerMobile ref={searchListingResultsSpacerMobileRef} />\n                <SearchListingResultsContainer id=\"SearchListingResultsContainer\">\n                    <SearchListingResultsContainerMobileTitleTab />\n                    {\n                        <SearchListingResultsContainerTitleWrapper\n                            onTouchStart={(e) => handleContainerTitleTouchStart(e)}\n                            onTouchMove={(e) => handleContainerTitleTouchMove(e)}\n                            onTouchEnd={(e) => handleContainerTitleTouchEnd(e)}\n                            onTouchCancel={(e) => handleContainerTitleTouchEnd(e)}\n                            onClick={(e) => handleContainerOpenOnClick(e)}\n                        >\n                            {loading || totalResults === null ? (\n                                <SearchListingResultsContainerMobileTitleLoading />\n                            ) : (\n                                <SearchListingResultsContainerMobileTitle>\n                                    {totalResults > 1000 ? \"1000+\" : totalResults} stays in {queryParams.location ? queryParams.location : \"Australia\"}\n                                </SearchListingResultsContainerMobileTitle>\n                            )}\n                        </SearchListingResultsContainerTitleWrapper>\n                    }\n                    <SearchListingResultCardsWrapper noResults={!loading && listings[page] && listings[page].length === 0}>\n                        {RenderSearchListingResultCards(listings[page], loading, clickedListingFromSearch)}\n                    </SearchListingResultCardsWrapper>\n\n                    {pageCount > 1 && (\n                        <PaginationWrapper>\n                            <Pagination\n                                page={page}\n                                onChange={(event, value) => {\n                                    if (!listings[value]) {\n                                        const arrivalDate = queryParams.arrivalDate ? queryParams.arrivalDate : \"anyArrival\";\n                                        const departureDate = queryParams.departureDate ? queryParams.departureDate : \"anyDeparture\";\n                                        const placeId = queryParams.locationId ? queryParams.locationId : \"ChIJ38WHZwf9KysRUhNblaFnglM\";\n                                        fetchListings(placeId, arrivalDate, departureDate, searchFiltersRecoil, value, boundingBox);\n                                    }\n                                    searchListingContainerRef.current?.scrollTo(0, 0);\n                                    setPage(value);\n                                    clickedNextPageFromSearch(value);\n                                }}\n                                count={pageCount}\n                                size=\"small\"\n                            />\n                            <PaginationTitle>\n                                Showing {page} of {pageCount} pages\n                            </PaginationTitle>\n                        </PaginationWrapper>\n                    )}\n                </SearchListingResultsContainer>\n                <SearchListingMapWrapper {...(window.innerWidth < 768 ? { onClick: () => handleMapClickCloseContainer() } : {})}>\n                    {mapFullscreen && (\n                        <SearchListingMapExitButton type=\"button\" onClick={() => setMapFullscreen(!mapFullscreen)}>\n                            <SearchListingResultsContainerDesktopTitleIcon\n                                style={{ transform: \"rotate(180deg)\" }}\n                                src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/Arrow.svg\"}\n                                alt=\"Arrow icon\"\n                            />\n                        </SearchListingMapExitButton>\n                    )}\n                    <SearchListingMap\n                        clickedListingFromMap={clickedListingFromMap}\n                        listings={listings[page]}\n                        setBoundingBox={setBoundingBox}\n                        fetchListings={fetchListings}\n                        isSearchResultsContainerClosed={isSearchResultsContainerClosed}\n                    />\n                </SearchListingMapWrapper>\n            </SearchListingContainer>\n        </>\n    );\n}\n\nfunction RenderNoResultPlaceHolder() {\n    return (\n        <NoResultWrapper>\n            <NoResultTitle>No results</NoResultTitle>\n            <NoResultSubTitle>Try changing your dates or search nearby areas</NoResultSubTitle>\n        </NoResultWrapper>\n    );\n}\n\nfunction RenderSearchListingResultCards(listings: SearchListingModel[], loading: boolean, clickedListingFromSearch: any) {\n    let skeletons = [...Array(30).keys()].map((x) => x + 1);\n    if (loading) {\n        return skeletons.map((skeleton) => {\n            return <SkeletonLoadingDummyCard key={skeleton} />;\n        });\n    }\n    return (\n        <>\n            {listings && listings.length > 0 ? (\n                listings.slice(0).map((listing, index) => {\n                    return <SearchListingResult clickedListingFromSearch={clickedListingFromSearch} listing={listing} key={listing.id} delay={index * 0.12} />;\n                })\n            ) : (\n                <RenderNoResultPlaceHolder />\n            )}\n        </>\n    );\n}\n\nexport default SearchListing;\n"],"names":["mapStyles","featureType","elementType","stylers","color","visibility","hue","saturate","lightness","_ref","popupCardRef","listing","setIsTouchingCard","clickedListingFromMap","userModel","setUserModel","useRecoilState","userModelSelector","accessToken","setAccessToken","accessTokenSelector","signInMenuActivated","setSignInMenuActivated","signInMenuActivatedSelector","isSaved","setIsSaved","useState","isSavedLoading","useRef","init","location","useLocation","isTouchDevice","useIsTouchDevice","queryParams","useMemo","searchParams","URLSearchParams","search","params","key","value","entries","useEffect","current","window","google","maps","OverlayView","preventMapHitsFrom","savedListings","includes","id","handleButtonClick","async","event","preventDefault","stopPropagation","prev","toggleSaved","err","console","log","_jsxs","SearchMapListingCardContainer","ref","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","children","_jsx","SearchListingSaveButtonWrapper","onClick","undefined","HeartIcon","xmlns","viewBox","d","fill","ColorTheme","Red","Black","opacityColor","transform","SearchMapListingCardWrapper","to","getURL","arrivalDateString","arrivalDate","departureDateString","departureDate","searchFiltersFromQueryParams","searchFilters","JSON","parse","searchParamsStrings","adults","pets","infants","filter","param","join","target","innerWidth","rel","SearchMapListingCardImagesWrapper","modules","Navigation","Pagination","navigation","centeredSlides","pagination","clickable","dynamicBullets","dynamicMainBullets","loop","onSlideChange","e","initialSlide","spaceBetween","slidesPerView","watchSlidesProgress","listingImages","map","image","index","SearchMapListingCardImageWrapper","virtualIndex","SearchMapListingCardImage","src","constructOptimisedImageUrl","alt","SearchMapListingCardTextWrapper","SearchMapListingCardTitle","propertyType","charAt","toUpperCase","slice","suburb","SearchMapListingCardSubtitle","propertyTitle","SearchMapListingCardReview","SearchListingResultReview","overallAverage","totalReviews","SearchListingResultOverallReviewAvg","toFixed","SearchListingResultNoReviewText","SearchListingMapMarkers","listings","selectedListing","setListing","markersRef","marker","el","length","_Fragment","OverlayViewF","position","lat","lng","lon","mapPaneName","SearchMapMarker","panTo","markerWidth","overlay","draw","setMap","projection","getProjection","LatLng","markerPoint","fromLatLngToContainerPixel","centerPoint","getCenter","newCenterPosition","x","y","getDiv","offsetWidth","rightBound","newCenterLatLng","fromContainerPixelToLatLng","adjustMapListingCardPosition","selected","listingId","Number","totalPrice","React","_markersRef$current$f","_window$google$maps$C","setBoundingBox","fetchListings","isSearchResultsContainerClosed","setSearchFilters","searchFiltersSelector","wheelEvent","Object","defineProperty","l","document","addEventListener","removeEventListener","center","setCenter","isTouchingCard","timer","mapLoaded","placeId","locationId","bounds","LatLngBounds","fitBounds","setZoom","fetchListingOnUserAction","mapInstance","timeout","getBounds","boundingBox","topRight","getNorthEast","bottomLeft","getSouthWest","debounce","func","clearTimeout","setTimeout","searchResultsContainerClosed","dragListener","zoomListener","clickListener","addListener","removeListener","onLoad","onUnmount","clickedMarkerRef","find","GoogleMap","mapContainerStyle","width","height","zoom","options","fullscreenControl","disableDefaultUI","minZoom","maxZoom","styles","gestureHandling","disableDoubleClickZoom","zoomControl","zoomControlOptions","ControlPosition","TOP_RIGHT","getPixelPositionOffset","SearchListingMapListingCard","SearchListingResultCard","styled","div","SearchListingResultCardImageWrapper","BorderRadiusTheme","radius_12","borderRadius","Grey2","SearchListingResultTextWrapper","SearchListingResultCardSubtitle","SearchListingResultCardTitle","SearchListingResultCardPriceWrapper","ul","SpacingTheme","spacing_200","gap","DummyImg","li","TextTheme","sans_200","fontSize","lineHeight","fontWeight","SearchListingResultCardDate","props","style","SearchListingPhoto","imgKey","imgLoading","setImgLoading","Fragment","display","objectFit","gridColumn","gridRow","SearchListingResult","delay","clickedListingFromSearch","navigate","useNavigate","imageUrls","_listing$listingImage","handleSaveButton","touchStartY","motion","zIndex","initial","opacity","animate","transition","duration","top","left","SkeletonLoadingDummyCard","minWidth","SearchListingLink","pathname","touches","clientY","touchEndY","changedTouches","Math","abs","getPlaceType","placeType","place","toLowerCase","replace","char","typeOfPlace","substring","SearchListingResultCardAttributeWrapper","SearchListingResultCardAttribute","beds","startDate","endDate","start","Date","end","day","month","startStr","toLocaleDateString","endStr","getMonth","getFullYear","dayOptions","convertDateRange","SearchListingResultCardPrice","numberOfListings","searchListingContainerRef","searchListingResultsSpacerMobileRef","initialTouchY","closeContainerTrigger","containerInitialTouchY","setIsSearchResultsContainerClosed","handleContainerTitleTouchStart","overflow","handleContainerTitleTouchMove","currentY","relativeMoveY","handleContainerTitleTouchEnd","scrollTo","handleContainerOpenOnClick","handleContainerTouchStart","handleContainerTouchMove","_searchListingResults","getBoundingClientRect","handleContainerTouchEnd","handleMapClickCloseContainer","WithIconBtnWrapper","button","right","bottom","backgroundColor","spacing_250","padding","spacing_350","ShadowTheme","shadow_100","boxShadow","IconWrapper","White","Icon","img","svgColorInvert","BtnText","p","sans_300_semi","iconSrc","handleInteraction","analytics","Analytics","app","plugins","segmentPlugin","writeKey","process","RenderNoResultPlaceHolder","NoResultWrapper","NoResultTitle","NoResultSubTitle","RenderSearchListingResultCards","loading","skeletons","Array","keys","skeleton","setListings","searchFiltersRecoil","setSearchFiltersRecoil","searchQuery","setSearchQuery","searchQuerySelector","identityId","setIdentityId","identityIdSelector","loggedIn","setLoggedIn","loggedInSelector","distribution","setDistribution","currentCategory","mapFullscreen","setMapFullscreen","totalResults","setTotalResults","setLoading","page","setPage","pageCount","setPageCount","isSearchFilterPopup","setIsSearchFilterPopup","useHandleMobileSearchResults","scrollDirection","isHitBottom","useScrollDirection","convertDateFromUrlToDateObj","dateString","parts","split","convertedDate","toString","useCallback","place_id","arguments","isMapRequest","callApi","body","currentDate","size","identifier","username","then","res","total","prevState","ceil","catch","defaultSearchFilterCopy","stringify","defaultSearchFilter","priceRange","min","max","category","hideNavbar","updateSearchQuery","updatedSearchQuery","parseDateString","year","has","parseFloat","get","title","newLocation","parseLocationString","filters","validFilters","optionsForYourStay","guests","bedrooms","bathrooms","amenities","services","houseRules","error","maxPrice","priceListing","minimumPrice","HelmetTags","CategoryBar","updateFilter","placeTitle","String","getDate","padStart","locationString","locationIdString","filterCopy","calculateNumberOfFilterSelected","MobileNavbar","hide","WithIconBtn","SearchFilterPopup","togglePopup","updateSearchBySearchFilters","SearchListingContainer","onTouchMove","onTouchCancel","SearchListingResultsSpacerMobile","SearchListingResultsContainer","SearchListingResultsContainerMobileTitleTab","SearchListingResultsContainerTitleWrapper","SearchListingResultsContainerMobileTitleLoading","SearchListingResultsContainerMobileTitle","SearchListingResultCardsWrapper","noResults","track","userId","PaginationWrapper","onChange","_searchListingContain","pageNum","count","PaginationTitle","SearchListingMapWrapper","SearchListingMapExitButton","type","SearchListingResultsContainerDesktopTitleIcon","SearchListingMap"],"mappings":";;kLAAO,MAAMA,EAAY,CACrB,CACIC,YAAa,yBACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,0BACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,0BACbC,YAAa,qBACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,8BACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,0BACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,qBACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,qBACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,oBACbC,YAAa,gBACbC,QAAS,CACL,CACIG,IAAK,IACLC,SAAU,OAItB,CACIN,YAAa,oBACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,MACbE,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,MACbC,YAAa,cACbC,QAAS,CACL,CACIK,UAAW,MAIvB,CACIP,YAAa,MACbC,YAAa,mBACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,MACbC,YAAa,qBACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,iBACbE,QAAS,CACL,CACIE,WAAY,QAIxB,CACIJ,YAAa,iBACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,WACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,WAEX,CACIC,WAAY,QAIxB,CACIJ,YAAa,WACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,QAIxB,CACIJ,YAAa,aACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,WAEX,CACIC,WAAY,QAIxB,CACIJ,YAAa,qBACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,WAEX,CACIC,WAAY,QAIxB,CACIJ,YAAa,qBACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,gBACbC,YAAa,kBACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,gBACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,gBACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,eACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,eACbC,YAAa,kBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,eACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,eACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,iCACbE,QAAS,CACL,CACIE,WAAY,QAIxB,CACIJ,YAAa,iCACbC,YAAa,cACbC,QAAS,CACL,CACIK,UAAW,MAIvB,CACIP,YAAa,iCACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,aACbC,YAAa,gBACbC,QAAS,CACL,CACIK,UAAW,MAIvB,CACIP,YAAa,aACbC,YAAa,kBACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,aACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,UACbC,YAAa,cACbC,QAAS,CACL,CACIK,UAAW,MAIvB,CACIP,YAAa,UACbC,YAAa,cACbC,QAAS,CACL,CACIE,WAAY,SAIxB,CACIJ,YAAa,eACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,0BACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,QACbC,YAAa,gBACbC,QAAS,CACL,CACIC,MAAO,aAInB,CACIH,YAAa,QACbC,YAAa,mBACbC,QAAS,CACL,CACIC,MAAO,c,mIC9TvB,MAqJA,EArJoCK,IAA4G,IAA3G,aAAEC,EAAY,QAAEC,EAAO,kBAAEC,EAAiB,sBAAEC,GAAyDJ,EACtI,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,gBAAeC,EAAAA,IAC1CC,EAAaC,IAAkBH,EAAAA,EAAAA,gBAAeI,EAAAA,IAC9CC,EAAqBC,IAA0BN,EAAAA,EAAAA,gBAAeO,EAAAA,KAC9DC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,GAAiBC,EAAAA,EAAAA,SAAO,GACxBC,GAAOD,EAAAA,EAAAA,SAAO,GACdE,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KAEhBC,GAAcC,EAAAA,EAAAA,UAAQ,KACxB,MAAMC,EAAe,IAAIC,gBAAgBP,EAASQ,QAC5CC,EAAsB,CAAC,EAC7B,IAAK,IAAKC,EAAKC,KAAUL,EAAaM,UAClCH,EAAOC,GAA4BC,EAEvC,OAAOF,CAAM,GACd,CAACT,EAASQ,UAEbK,EAAAA,EAAAA,YAAU,KACFjC,EAAakC,SACbC,OAAOC,OAAOC,KAAKC,YAAYC,mBAAmBvC,EAAakC,QACnE,GACD,CAACjC,EAASD,KAEbiC,EAAAA,EAAAA,YAAU,KAEFd,EAAKe,SACL9B,GAAaA,EAAUoC,cAAcC,SAASxC,EAAQyC,MACtD3B,GAAW,GACXI,EAAKe,SAAU,EACnB,GACD,CAACjC,EAAQyC,GAAItC,IAIhB,MAAMuC,EAAoBC,UAGtB,GAFAC,EAAMC,iBACND,EAAME,kBACF3C,EAAW,CACX,GAAIa,EAAeiB,QAAS,OAC5B,IACInB,GAAYiC,IAAUA,IACtB/B,EAAeiB,SAAU,QACnBe,EAAAA,EAAAA,GAAYhD,EAAQyC,GAAItC,EAAWI,EAC7C,CAAE,MAAO0C,GACLC,QAAQC,IAAIF,GACZnC,GAAYiC,IAAUA,GAC1B,CAAC,QACG/B,EAAeiB,SAAU,CAC7B,CACJ,MACItB,GAAuB,EAC3B,EAeJ,OACIyC,EAAAA,EAAAA,MAACC,EAAAA,GAA6B,CAC1BC,IAAKvD,EACLwD,aAAcA,KACVtD,GAAkB,EAAK,EAE3BuD,WAAYA,KACRvD,GAAkB,EAAM,EAE5BwD,aAAcA,KACVxD,GAAkB,EAAK,EAE3ByD,aAAcA,KACVzD,GAAkB,EAAM,EAC1B0D,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,GAA8B,CAACC,QAAUzC,OAAoC0C,EAApBrB,EAA+Bc,WAAYnC,EAAgBqB,OAAoBqB,EAAUJ,UAC/IC,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CAACC,MAAM,6BAA6BC,QAAQ,YAAWP,UAC7DC,EAAAA,EAAAA,KAAA,QACIO,EAAE,+sBACFC,KAAMvD,EAAU,GAAGwD,EAAAA,GAAWC,IAAI7E,QAAU,GAAG4E,EAAAA,GAAWE,MAAMC,eAChEC,UAAU,yBAKtBrB,EAAAA,EAAAA,MAACsB,EAAAA,GAA2B,CACxBZ,QAAUzC,OAA0D0C,EAA1C,IAAM7D,EAAsBF,EAAQyC,IAC9De,WAAYnC,EAAgB,IAAMnB,EAAsBF,EAAQyC,SAAMsB,EACtEY,GAzCGC,MACX,MAAMC,EAAoBtD,EAAYuD,YAAc,eAAevD,EAAYuD,cAAgB,GACzFC,EAAsBxD,EAAYyD,cAAgB,iBAAiBzD,EAAYyD,gBAAkB,GACjGC,EAA+B1D,EAAY2D,cAAgBC,KAAKC,MAAM7D,EAAY2D,eAAiB,KAKnGG,EAAsB,CAACR,EAAmBE,EAJ3BE,GAAgCA,EAA6BK,OAAS,UAAUL,EAA6BK,SAAW,GACtHL,GAAgCA,EAA6BtB,SAAW,YAAYsB,EAA6BtB,WAAa,GAClIsB,GAAgCA,EAA6BM,KAAO,QAAQN,EAA6BM,OAAS,GAC/GN,GAAgCA,EAA6BO,QAAU,WAAWP,EAA6BO,UAAY,IACnBC,QAAQC,GAAoB,KAAVA,IAAcC,KAAK,KAEnK,MAAO,YAAY3F,EAAQyC,KAAK4C,EAAsB,IAAIA,IAAwB,IAAI,EA+B1ET,GACJgB,OAAQ1D,OAAO2D,WAAa,IAAM,SAAW,GAC7CC,IAAI,sBAAqBnC,SAAA,EAEzBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAiC,CAC9BC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBC,aAAYjE,OAAO2D,WAAa,KAChCO,gBAAgB,EAChBC,WAAY,CACRC,WAAW,EACXC,gBAAgB,EAChBC,mBAAoB,GAExBC,KAAMvE,OAAO2D,WAAa,IAC1Ba,cAAgBC,MAChBC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfC,qBAAqB,EACrBpD,SAEC3D,EAAQgH,cAAcC,KAAI,CAACC,EAAOC,KAE3BvD,EAAAA,EAAAA,KAACwD,EAAAA,GAAgC,CAAaC,aAAcF,EAAMxD,UAC9DC,EAAAA,EAAAA,KAAC0D,EAAAA,GAAyB,CAACC,KAAKC,EAAAA,EAAAA,GAA4BN,EAA6BrF,IAAK,KAAM4F,IAAI,+BAA+BhF,GAAI,SAAS0E,OADjHA,QAOnD/D,EAAAA,EAAAA,MAACsE,EAAAA,GAA+B,CAAA/D,SAAA,EAC5BP,EAAAA,EAAAA,MAACuE,EAAAA,GAAyB,CAAAhE,SAAA,CACrB3D,EAAQ4H,aAAaC,OAAO,GAAGC,cAAgB9H,EAAQ4H,aAAaG,MAAM,GAAG,OAAK/H,EAAQgI,WAE/FpE,EAAAA,EAAAA,KAACqE,EAAAA,GAA4B,CAAAtE,SAAE3D,EAAQkI,iBAEvCtE,EAAAA,EAAAA,KAACuE,EAAAA,GAA0B,CAAAxE,UACvBC,EAAAA,EAAAA,KAACwE,EAAAA,GAAyB,CAAAzE,SACrB3D,EAAQqI,gBAAkBrI,EAAQsI,cAAgBtI,EAAQqI,eAAiB,GACxEjF,EAAAA,EAAAA,MAACmF,EAAAA,GAAmC,CAAA5E,SAAA,EAC9B3D,EAAQqI,eAAiB,IAAIG,QAAQ,GAAG,KAACpF,EAAAA,EAAAA,MAAA,QAAAO,SAAA,CAAM,IAAE3D,EAAQsI,aAAa,WAG5E1E,EAAAA,EAAAA,KAAC6E,EAAAA,GAA+B,CAAA9E,SAAC,oBAMzB,ECpKzB,SAAS+E,EAAuB5I,GAA4F,IAA3F,SAAE6I,EAAQ,gBAAEC,EAAe,WAAEC,EAAU,WAAEC,EAAU,IAAE7B,GAAmCnH,EAWpI,OAVAkC,EAAAA,EAAAA,YAAU,KACN,GAAI8G,EAAW7G,QACX,IAAK,IAAI8G,KAAUD,EAAW7G,QACtB8G,EAAOC,IACP9G,OAAOC,OAAOC,KAAKC,YAAYC,mBAAmByG,EAAOC,GAGrE,GACD,CAACL,IAECA,GAAgC,IAApBA,EAASM,QAKtBrF,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAAvF,SACKgF,EAAS1B,KAAI,CAACjH,EAASmH,KAEhBvD,EAAAA,EAAAA,KAACuF,EAAAA,GAAY,CAETC,SAAU,CAAEC,IAAMrJ,EAAQmB,SAA0CkI,IAAKC,IAAMtJ,EAAQmB,SAA0CoI,KACjIC,YAAa,qBAAqB7F,UAElCC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAe,CACZ3F,QAASA,MACDmD,GAAS2B,GAAmBA,EAAgBnG,KAAOzC,EAAQyC,GAU3DoG,EAAW,OATX5B,EAAIyC,MC9CzB,SAAsCvI,EAAwC8F,EAAsB0C,GAC/G,MAAMC,EAAU,IAAI1H,OAAOC,OAAOC,KAAKC,YACvCuH,EAAQC,KAAO,WAAa,EAC5BD,EAAQE,OAAO7C,GAEf,MAAM8C,EAAaH,EAAQI,gBAC3B,IAAKD,EACD,OAAO,IAAI7H,OAAOC,OAAOC,KAAK6H,QAAQ,MAAO,SAIjD,IAAIC,EAAcH,EAAWI,2BAA2B,IAAIjI,OAAOC,OAAOC,KAAK6H,OAAO9I,EAASkI,IAAKlI,EAASmI,MACzGc,EAAcL,EAAWI,2BAA2B,IAAIjI,OAAOC,OAAOC,KAAK6H,OAAOhD,EAAIoD,cAC1F,GAAID,GAAeF,EAAa,CAC5B,IAAII,EAAoB,CAAEC,EAAGH,EAAYG,EAAGC,EAAGJ,EAAYI,GAE3D,GAAItI,OAAO2D,YAAc,KAAOqE,EAAYM,EAAI,GAAK,OAAS,KAAWN,EAAYK,EAAIZ,EAAc,EAAI,IAAM1C,EAAIwD,SAASC,YAAc,GAAK,GAAI,CACjJ,IAAIC,EAAa1D,EAAIwD,SAASC,YAAc,GAAK,GACjDJ,EAAkBC,EAAIH,EAAYG,GAAKI,EAAa,KAAOT,EAAYK,EAAIZ,EAAc,IACzFW,EAAkBE,EAAIJ,EAAYI,GAAK,OAAwBN,EAAYM,EAC/E,CAGA,GAAItI,OAAO2D,WAAa,KAAOqE,EAAYK,EAAIZ,EAAc,EAAI,IAAM1C,EAAIwD,SAASC,YAAc,GAAI,CAClG,IAAIC,EAAa1D,EAAIwD,SAASC,YAAc,GAC5CJ,EAAkBC,EAAIH,EAAYG,GAAKI,EAAa,KAAOT,EAAYK,EAAIZ,EAAc,IACzFzG,QAAQC,IAAI,aAChB,MAAO,GAAIjB,OAAO2D,YAAc,KAAOqE,EAAYK,EAAIZ,EAAc,EAAI,IAAM1C,EAAIwD,SAASC,YAAc,IAAMR,EAAYM,EAAI,GAAK,QAAU,IAAS,CACpJ,IAAIG,EAAa1D,EAAIwD,SAASC,YAAc,GAC5CJ,EAAkBC,EAAIH,EAAYG,GAAKI,EAAa,KAAOT,EAAYK,EAAIZ,EAAc,GAC7F,CAGIzH,OAAO2D,WAAa,KAAOqE,EAAYK,EAAIZ,EAAc,EAAI,IAAM,GACnEW,EAAkBC,EAAIH,EAAYG,GAAK,KAAYL,EAAYK,EAAIZ,EAAc,IAC1EzH,OAAO2D,YAAc,KAAOqE,EAAYK,EAAIZ,EAAc,EAAI,IAAM,KAC3EW,EAAkBC,EAAIH,EAAYG,GAAK,KAAYL,EAAYK,EAAIZ,EAAc,KAIjFzH,OAAO2D,WAAa,KAAOqE,EAAYM,EAAI,GAAK,OAAS,GACzDF,EAAkBE,EAAIJ,EAAYI,GAAK,OAAmBN,EAAYM,GAC/DtI,OAAO2D,YAAc,KAAOqE,EAAYM,EAAI,GAAK,OAAS,IAAMN,EAAYK,EAAIZ,EAAc,EAAI,KAAO1C,EAAIwD,SAASC,YAAc,GAAK,KAChJJ,EAAkBE,EAAIJ,EAAYI,GAAK,OAAmBN,EAAYM,IAG1E,IAAII,EAAkBb,EAAWc,2BAA2BP,GAE5D,OADAV,EAAQE,OAAO,MACRc,CACX,CACI,OAAO,IAAI1I,OAAOC,OAAOC,KAAK6H,QAAQ,MAAO,QAErD,CDLwCa,CACI,CAAEzB,IAAMrJ,EAAQmB,SAA0CkI,IAAKC,IAAMtJ,EAAQmB,SAA0CoI,KACvHtC,EACA6B,EAAW7G,QAAQkF,GAAO6B,GAAG0B,cAGrC7B,EAAW7I,GAGf,EAEJ+K,UAAyB,OAAfnC,QAAe,IAAfA,OAAe,EAAfA,EAAiBnG,MAAOzC,EAAQyC,GAC1Ca,IAAM0F,GAAQF,EAAW7G,QAAQkF,GAAS,CAAE6B,GAAIA,EAAmBgC,UAAWhL,EAAQyC,IAAMkB,SAE3F,IAAIsH,OAAOjL,EAAQkL,WAAa,KAAK1C,QAAQ,YAtB7CxI,EAAQyC,QARtB,IAqCf,CE/CA,QAAe0I,EAAAA,MAAW,SAAyBrL,GAA6H,IAADsL,EAAAC,EAAA,IAA3H,SAAE1C,EAAQ,eAAE2C,EAAc,cAAEC,EAAa,+BAAEC,EAA8B,sBAAEtL,GAA8CJ,EACzK,MAAOE,EAAS6I,IAAc9H,EAAAA,EAAAA,UAAoC,MAC5DI,GAAWC,EAAAA,EAAAA,MAEXG,GAAcC,EAAAA,EAAAA,UAAQ,KACxB,MAAMC,EAAe,IAAIC,gBAAgBP,EAASQ,QAC5CC,EAAsB,CAAC,EAC7B,IAAK,IAAKC,EAAKC,KAAUL,EAAaM,UAClCH,EAAOC,GAA4BC,EAEvC,OAAOF,CAAM,GACd,CAACT,EAASQ,UAENuD,EAAeuG,IAAoBpL,EAAAA,EAAAA,gBAAeqL,EAAAA,IAOzD,SAASC,EAAW/I,GAEhBgJ,OAAOC,eAAejJ,EAAO,UAAW,CAAEd,OAAO,GACrD,CAPI9B,IAAY2I,EAAS1B,KAAK6E,GAAMA,EAAErJ,KAAID,SAASxC,EAAQyC,KACvDoG,EAAW,OAOf7G,EAAAA,EAAAA,YAAU,KACN+J,SAASC,iBAAiB,QAASL,GAAY,GACxC,KACHI,SAASE,oBAAoB,QAASN,GAAY,EAAK,IAE5D,IAEH,MAAO1E,EAAK6C,IAAU/I,EAAAA,EAAAA,UAAiC,OAChDmL,EAAQC,IAAapL,EAAAA,EAAAA,UAAS,CAAEsI,KAAM,MAAOC,IAAK,WAClD8C,EAAgBnM,IAAqBc,EAAAA,EAAAA,WAAS,GAE/CsL,GAAQpL,EAAAA,EAAAA,QAA8B,MACtCqL,GAAYrL,EAAAA,EAAAA,SAAO,GACnBlB,GAAekB,EAAAA,EAAAA,QAAoB,MACnC6H,GAAa7H,EAAAA,EAAAA,QAAiD,KASpEe,EAAAA,EAAAA,YAAU,KACN,MAAMuK,EAAUhL,EAAYiL,WAAajL,EAAYiL,WAAa,8BAC5DnD,EAAM9H,EAAY8H,IAAM4B,OAAO1J,EAAY8H,MAAQ,MACnDC,EAAM/H,EAAY+H,IAAM2B,OAAO1J,EAAY+H,KAAO,QACxD,GAAIgD,EAAUrK,SAAWgF,GAAOsF,EAAS,CACrC,MAAME,EAAS,IAAIvK,OAAOC,OAAOC,KAAKsK,aAAa,CAAErD,IAAKA,EAAKC,IAAKA,IACpErC,EAAI0F,UAAUF,GACdxF,EAAI2F,QAAoB,gCAAZL,EAA4C,EAAI,GAChE,IACD,CAACtF,EAAK1F,EAAYiL,WAAYjL,EAAY8H,IAAK9H,EAAY+H,MAE9D,MAAMuD,EAA2B1B,EAAAA,aAC7B,CAAC2B,EAA8BC,KAC3B,MAAMN,EAASK,EAAYE,YAC3B,IAAKP,EAAQ,OACb,MAEMQ,EAAc,CAAEC,SAFJ,CAAE7D,IAAKoD,EAAOU,eAAe9D,MAAOE,IAAKkD,EAAOU,eAAe7D,OAEtC8D,WADzB,CAAE/D,IAAKoD,EAAOY,eAAehE,MAAOE,IAAKkD,EAAOY,eAAe/D,QAvBxEgE,EAACC,EAAkBR,KAChCS,aAAanB,EAAMpK,SACnBoK,EAAMpK,QAAUwL,YAAW,KACvBF,GAAM,GACPR,EAAQ,EAsBPO,EAAS,KACLhC,EAAe2B,GACf,MAAMV,EAAUhL,EAAYiL,WAAajL,EAAYiL,WAAa,8BAC5D1H,EAAcvD,EAAYuD,YAAcvD,EAAYuD,YAAc,aAClEE,EAAgBzD,EAAYyD,cAAgBzD,EAAYyD,cAAgB,eAC9EuG,EAAcgB,EAASzH,EAAaE,EAAeE,EAAe,EAAG+H,GAAa,EAAK,GACxFF,EAAQ,GAEf,CAACxB,EAAehK,EAAYuD,YAAavD,EAAYyD,cAAezD,EAAYiL,WAAYtH,EAAeoG,IAE/G,IAAIoC,EAA+BxL,OAAO2D,WAAa,IAAM2F,EAAiC,SAC9FxJ,EAAAA,EAAAA,YAAU,KAIN,IAAI2L,EACAC,EACAC,EACJ,GANKH,GACD7E,EAAW,MAKX5B,EAUA,OATA0G,EAAe1G,EAAI6G,YAAY,QAAQ,WACnCjB,EAAyB5F,EAAK,IAClC,IACA2G,EAAe3G,EAAI6G,YAAY,gBAAgB,WAC3CjB,EAAyB5F,EAAK,IAClC,IACA4G,EAAgB5G,EAAI6G,YAAY,SAAS,WACrCjF,EAAW,KACf,IACO,KACH3G,OAAOC,OAAOC,KAAKQ,MAAMmL,eAAeJ,GACxCzL,OAAOC,OAAOC,KAAKQ,MAAMmL,eAAeH,GACxC1L,OAAOC,OAAOC,KAAKQ,MAAMmL,eAAeF,EAAc,CAE9D,GACD,CAAChB,EAA0B5F,EAAKyG,IAEnC,MAAMM,EAAS7C,EAAAA,aACX,SAAkB2B,GACdW,YAAW9K,UACP,MAAM8J,EAAS,IAAIvK,OAAOC,OAAOC,KAAKsK,aAAaR,GACnDY,EAAYH,UAAUF,GAEtB,MAAMF,EAAUhL,EAAYiL,WAAajL,EAAYiL,WAAa,8BAC5DnD,EAAM9H,EAAY8H,IAAM4B,OAAO1J,EAAY8H,MAAQ,MACnDC,EAAM/H,EAAY+H,IAAM2B,OAAO1J,EAAY+H,KAAO,QAKxD6C,EAAU,CAAE9C,IAAKA,EAAKC,IAAKA,IAE3BwD,EAAYF,QAAoB,gCAAZL,EAA4C,EAAI,IACpEzC,EAAOgD,GAEPR,EAAUrK,SAAU,CAAI,GACzB,IACP,GAEA,CAACiK,EAAQ3K,EAAY8H,IAAK9H,EAAY+H,IAAK/H,EAAYiL,aAGrDyB,EAAY9C,EAAAA,aAAkB,WAChCrB,EAAO,KACX,GAAG,IAEH,IAAIoE,EAAwF,QAAxE9C,EAAGtC,EAAW7G,QAAQkM,MAAMpF,GAAWA,EAAOiC,aAAqB,OAAPhL,QAAO,IAAPA,OAAO,EAAPA,EAASyC,aAAG,IAAA2I,OAAA,EAArEA,EAAuEpC,GAc9F,OACIpF,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAAvF,UACIP,EAAAA,EAAAA,MAACgL,EAAAA,GAAS,CACNC,kBAAmB,CACfC,MAAO,OACPC,OAAQ,QAEZrC,OAAQA,EACR8B,OAAQA,EACRC,UAAWA,EACXO,KAAM,EACNC,QAAS,CACLC,mBAAmB,EACnBC,kBAAkB,EAClBC,QAAS,EACTC,QAAS,GACTC,OAAQzP,EACR0P,gBAAiB3C,EAAiB,OAAS,SAC3C4C,yBAAwBhP,EACxBiP,cAAa/M,OAAO2D,YAAc,KAClCqJ,mBAAoB,CAChB9F,SAA4C,QAApCiC,EAAEnJ,OAAOC,OAAOC,KAAK+M,uBAAe,IAAA9D,OAAA,EAAlCA,EAAoC+D,YAEpDzL,SAAA,EAEFC,EAAAA,EAAAA,KAAC8E,EAAuB,CAACG,WAAYA,EAAYD,gBAAiB5I,EAAS2I,SAAUA,EAAUG,WAAYA,EAAY7B,IAAKA,IAC3HjH,IACG4D,EAAAA,EAAAA,KAACuF,EAAAA,GAAY,CACTC,SAAU,CAAEC,IAAMrJ,EAAQmB,SAA0CkI,IAAKC,IAAMtJ,EAAQmB,SAA0CoI,KACjIC,YAAa,YACb6F,uBA3CWA,CAACf,EAAeC,IACvCL,EACO,CACH3D,GAAI+D,EAAQ,EAAIJ,EAAiBxD,YAAc,EAC/CF,GAAI+D,EAAS,IAGV,CACHhE,GAAI+D,EAAQ,EACZ9D,GAAI+D,EAAS,IAkC0C5K,UAE/CC,EAAAA,EAAAA,KAAC0L,EAA2B,CAACpP,sBAAuBA,EAAuBH,aAAcA,EAAcC,QAASA,EAASC,kBAAmBA,UAMpK,I,cCzMO,MAAMsP,EAA0BC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;EA8BpCC,GAhB8BF,EAAAA,GAAOC,GAAG;;qBAEhCE,EAAAA,GAAkBC,UAAUC;;;;;;;;;;;;;EAcEL,EAAAA,GAAOC,GAAG;;qBAExCE,EAAAA,GAAkBC,UAAUC;wBACzBxL,EAAAA,GAAWyL,MAAMrQ;;;;;;GAO5BsQ,EAAiCP,EAAAA,GAAOC,GAAG;;;;EAM3CO,EAAkCR,EAAAA,GAAOC,GAAG;;;;;wBAKjCpL,EAAAA,GAAWyL,MAAMrQ;EAG5BwQ,EAA+BT,EAAAA,GAAOC,GAAG;;;;wBAI9BpL,EAAAA,GAAWyL,MAAMrQ;EAa5ByQ,GAV0CV,EAAAA,GAAOW,EAAE;;;;;;WAMrDC,EAAAA,GAAaC,YAAYC;;EAIed,EAAAA,GAAOC,GAAG;;;wBAGrCpL,EAAAA,GAAWyL,MAAMrQ;GAkB5B8Q,GAhBmCf,EAAAA,GAAOgB,EAAE;;;;;;;iBAOxCC,EAAAA,GAAUC,SAASC;mBACjBF,EAAAA,GAAUC,SAASE;mBACnBH,EAAAA,GAAUC,SAASG;;;;wBAIdxM,EAAAA,GAAWyL,MAAMrQ;EAGjB+P,EAAAA,GAAOC,GAAG;;;GAKrBqB,EAA8BtB,EAAAA,GAAOC,GAAG;;;;;wBAK7BpL,EAAAA,GAAWyL,MAAMrQ;EC5DzC,EAzB2EsR,IAEnE3N,EAAAA,EAAAA,MAACmM,EAAuB,CAACyB,MAAOD,EAAMC,MAAMrN,SAAA,EACxCC,EAAAA,EAAAA,KAAC8L,EAAmC,CAAA/L,UAChCC,EAAAA,EAAAA,KAAC2M,EAAQ,OAEbnN,EAAAA,EAAAA,MAAC2M,EAA8B,CAAApM,SAAA,EAC3BC,EAAAA,EAAAA,KAACoM,EAA+B,KAChCpM,EAAAA,EAAAA,KAACqM,EAA4B,KAE7BrM,EAAAA,EAAAA,KAACkN,EAA2B,KAS5BlN,EAAAA,EAAAA,KAACsM,EAAmC,U,cCrCrC,SAASe,EAAkBnR,GAAkC,IAAjC,OAAEoR,GAA4BpR,EACrE,MAAOqR,EAAYC,IAAiBrQ,EAAAA,EAAAA,WAAS,GAC7C,OACI6C,EAAAA,EAAAA,KAACyN,EAAAA,SAAQ,CAAA1N,SACJuN,IACGtN,EAAAA,EAAAA,KAAA,OACI2D,IAAK2J,EACLzJ,IAAI,mBACJuJ,MAAO,CACHM,QAASH,EAAa,OAAS,QAC/B7C,MAAO,OACPC,OAAQ,OACRgD,UAAW,QACXC,WAAY,MACZC,QAAS,OAEbzD,OAAQA,KACJoD,GAAc,EAAM,KAM5C,CCWe,SAASM,EAAmB5R,GAA+H,IAA9H,QAAEE,EAAO,MAAE2R,EAAK,yBAAEC,GAAyG9R,EACnK,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,gBAAeC,EAAAA,IAC1CO,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCR,EAAaC,IAAkBH,EAAAA,EAAAA,gBAAeI,EAAAA,IAC9CC,EAAqBC,IAA0BN,EAAAA,EAAAA,gBAAeO,EAAAA,IAC/DI,GAAiBC,EAAAA,EAAAA,SAAO,GACxBC,GAAOD,EAAAA,EAAAA,SAAO,GAEdE,GAAWC,EAAAA,EAAAA,MACXG,GAAcC,EAAAA,EAAAA,UAAQ,KACxB,MAAMC,EAAe,IAAIC,gBAAgBP,EAASQ,QAC5CC,EAAsB,CAAC,EAC7B,IAAK,IAAKC,EAAKC,KAAUL,EAAaM,UAClCH,EAAOC,GAA4BC,EAEvC,OAAOF,CAAM,GACd,CAACT,EAASQ,SACPkQ,GAAWC,EAAAA,EAAAA,OAEjB9P,EAAAA,EAAAA,YAAU,KAEFd,EAAKe,SACL9B,GAAaA,EAAUoC,cAAcC,SAASxC,EAAQyC,MACtD3B,GAAW,GACXI,EAAKe,SAAU,EACnB,GACD,CAACjC,EAAQyC,GAAItC,IAEhB,MAAM4R,GAAYvQ,EAAAA,EAAAA,UAAQ,KAAO,IAADwQ,EAC5B,IAAW,OAAPhS,QAAO,IAAPA,GAAsB,QAAfgS,EAAPhS,EAASgH,qBAAa,IAAAgL,OAAf,EAAPA,EAAwB/I,QAAS,EACjC,OAAOjJ,EAAQgH,cAAcC,KAAKiK,IACvB1J,EAAAA,EAAAA,GAAiC,OAAN0J,QAAM,IAANA,OAAM,EAANA,EAAQrP,IAAK,MAEvD,GACD,CAAC7B,EAAQgH,gBAoDZ,MAAMiL,EAA2CtP,UAG7C,GAFAC,EAAMC,iBACND,EAAME,kBACF3C,EAAW,CACX,GAAIa,EAAeiB,QAAS,OAC5B,IACInB,GAAYiC,IAAUA,IACtB/B,EAAeiB,SAAU,QACnBe,EAAAA,EAAAA,GAAYhD,EAAQyC,GAAItC,EAAWI,EAC7C,CAAE,MAAO0C,GACLC,QAAQC,IAAIF,GACZnC,GAAYiC,IAAUA,GAC1B,CAAC,QACG/B,EAAeiB,SAAU,CAC7B,CACJ,MACItB,GAAuB,EAC3B,EAEJ,IAAIuR,EAEJ,MAIMtN,EAASA,KACX,MAAMC,EAAoBtD,EAAYuD,YAAc,eAAevD,EAAYuD,cAAgB,GACzFC,EAAsBxD,EAAYyD,cAAgB,iBAAiBzD,EAAYyD,gBAAkB,GACjGC,EAA+B1D,EAAY2D,cAAgBC,KAAKC,MAAM7D,EAAY2D,eAAiB,KAKnGG,EAAsB,CAACR,EAAmBE,EAJ3BE,GAAgCA,EAA6BK,OAAS,UAAUL,EAA6BK,SAAW,GACtHL,GAAgCA,EAA6BtB,SAAW,YAAYsB,EAA6BtB,WAAa,GAClIsB,GAAgCA,EAA6BM,KAAO,QAAQN,EAA6BM,OAAS,GAC/GN,GAAgCA,EAA6BO,QAAU,WAAWP,EAA6BO,UAAY,IACnBC,QAAQC,GAAoB,KAAVA,IAAcC,KAAK,KACnK,MAAO,YAAY3F,EAAQyC,KAAK4C,EAAsB,IAAIA,IAAwB,IAAI,EAY1F,OACIjC,EAAAA,EAAAA,MAACmM,EAAAA,GAAuB,CAAA5L,SAAA,EACpBC,EAAAA,EAAAA,KAACuO,EAAAA,EAAO1C,IAAG,CAACuB,MAAO,CAAEoB,OAAQ,GAAI9D,MAAO,QAAU+D,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,WAAY,CAAEC,SAAU,GAAKd,MAAOA,GAAQhO,UAC5IC,EAAAA,EAAAA,KAAA,OAAKoN,MAAO,CAAE5H,SAAU,WAAYsJ,IAAK,IAAKC,KAAM,IAAKrE,MAAO,QAAS3K,UACrEC,EAAAA,EAAAA,KAACgP,EAAwB,CAAC5B,MAAO,CAAE6B,SAAU,QAASvE,MAAO,eAGrE1K,EAAAA,EAAAA,KAACuO,EAAAA,EAAO1C,IAAG,CAACuB,MAAO,CAAEoB,OAAQ,IAAMC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,WAAY,CAAEC,SAAU,GAAKd,MAAOA,GAAQhO,UAC7HP,EAAAA,EAAAA,MAAC0P,EAAAA,GAAiB,CACdnO,GAAIC,IACJgB,OAAQ1D,OAAO2D,WAAa,IAAM,SAAW,GAC7CC,IAAI,yBACC3E,EAAS4R,SAASvQ,SAAS,UAC1B,CAAEe,aAtCkCoD,IACtDuL,EAAcvL,EAAEqM,QAAQ,GAAGC,OAAO,EAqCoDzP,WAtBlCmD,IACpD,MAAMuM,EAAYvM,EAAEwM,eAAe,GAAGF,QACzBG,KAAKC,IAAInB,EAAcgB,GACzB,IAEPvM,EAAE9D,iBACFgP,EAASjN,KACb,GAgBkB,CAAC,EACPd,QAAU6C,IACNiL,EAAyB5R,EAAQyC,IACjCkE,EAAE7D,iBAAiB,EACrBa,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,GAA8B,CAACL,WAAYyO,EAAkBnO,QAASmO,EAAiBtO,UACpFC,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CAACC,MAAM,6BAA6BC,QAAQ,YAAWP,UAC7DC,EAAAA,EAAAA,KAAA,QACIO,EAAE,+sBACFC,KAAMvD,EAAU,GAAGwD,EAAAA,GAAWC,IAAI7E,QAAU,GAAG4E,EAAAA,GAAWE,MAAMC,eAChEC,UAAU,yBAKtBb,EAAAA,EAAAA,KAAC8L,EAAAA,GAAmC,CAAA/L,SAAEoO,IAAanO,EAAAA,EAAAA,KAACqN,EAAkB,CAACC,OAAQa,EAAU,QACzF3O,EAAAA,EAAAA,MAAC2M,EAAAA,GAA8B,CAAApM,SAAA,EAC3BC,EAAAA,EAAAA,KAACoM,EAAAA,GAA+B,CAAArM,SAhI/B2P,MACjB,IAAIC,EAAY,GAChB,GAAIvT,GAA8B,OAAnBA,EAAQgI,OAAiB,CACpC,MAAMwL,EAAQxT,EAAQgI,OAAOyL,cAAcC,QAAQ,SAAUC,GAASA,EAAK7L,gBAC3E,OAAQ9H,EAAQ4T,aACZ,IAAK,eACDL,EAAYvT,EAAQ4H,aAAe,OAAS4L,EAC5CD,EAAYA,EAAU,GAAGzL,cAAgByL,EAAUM,UAAU,GAC7D,MACJ,IAAK,aACDN,EAAY,YAAcC,EAC1BD,EAAYA,EAAU,GAAGzL,cAAgByL,EAAUM,UAAU,GAC7D,MACJ,IAAK,eACDN,EAAY,mBAAqBC,EACjCD,EAAYA,EAAU,GAAGzL,cAAgByL,EAAUM,UAAU,GAC7D,MACJ,IAAK,cACDN,EAAY,kBAAoBC,EAChCD,EAAYA,EAAU,GAAGzL,cAAgByL,EAAUM,UAAU,GAKzE,CACA,OAAON,CAAS,EAuGkCD,MAClC1P,EAAAA,EAAAA,KAACqM,EAAAA,GAA4B,CAAAtM,SAAE3D,EAAQkI,gBACtC3G,EAAYuD,aAAevD,EAAYyD,eACpCpB,EAAAA,EAAAA,KAACkQ,EAAAA,GAAuC,CAAAnQ,UACpCP,EAAAA,EAAAA,MAAC2Q,EAAAA,GAAgC,CAAApQ,SAAA,CAC5B3D,EAAQgU,KAAK,IAAEhU,EAAQgU,KAAO,EAAI,OAAS,YAOpD5Q,EAAAA,EAAAA,MAAC0N,EAAAA,GAA2B,CAAAnN,SAAA,CAhHpD,SAA0BsQ,EAAmBC,GAEzC,MAAMC,EAAQ,IAAIC,KAAKH,GACjBI,EAAM,IAAID,KAAKF,GAGfzF,EAAsC,CAAE6F,IAAK,UAAWC,MAAO,SAC/DC,EAAWL,EAAMM,mBAAmB,QAAShG,GAASiF,QAAQ,KAAM,KACpEgB,EAASL,EAAII,mBAAmB,QAAShG,GAASiF,QAAQ,KAAM,KAGtE,GAAIS,EAAMQ,aAAeN,EAAIM,YAAcR,EAAMS,gBAAkBP,EAAIO,cAAe,CAElF,MAAMC,EAAyC,CAAEP,IAAK,WAGtD,MAAO,GAFaH,EAAMM,mBAAmB,QAASI,GAAYnB,QAAQ,KAAM,UAC9DW,EAAII,mBAAmB,QAASI,GAAYnB,QAAQ,KAAM,QACpCS,EAAMM,mBAAmB,QAAS,CAAEF,MAAO,WACvF,CAEA,MAAO,GAAGC,OAAcE,GAC5B,CA4FsDI,CAAiB9U,EAAQiU,UAAWjU,EAAQkU,SAAS,QAGvF9Q,EAAAA,EAAAA,MAAC8M,EAAAA,GAAmC,CAAAvM,SAAA,EAChCP,EAAAA,EAAAA,MAAC2R,EAAAA,GAA4B,CAAApR,SAAA,CAAC,IAAEsH,OAAOjL,EAAQkL,WAAa,KAAK1C,QAAQ,GAAG,WAC5E5E,EAAAA,EAAAA,KAACwE,EAAAA,GAAyB,CAAAzE,SACrB3D,EAAQqI,gBAAkBrI,EAAQqI,eAAiB,GAChDjF,EAAAA,EAAAA,MAACmF,EAAAA,GAAmC,CAAA5E,SAAA,EAC9B3D,EAAQqI,eAAiB,IAAIG,QAAQ,GAAG,KAACpF,EAAAA,EAAAA,MAAA,QAAAO,SAAA,CAAM,IAAE3D,EAAQsI,aAAa,WAG5E1E,EAAAA,EAAAA,KAAC6E,EAAAA,GAA+B,CAAA9E,SAAC,uBASrE,C,gCCtOA,MAoJA,EApJsCqR,IAClC,MAAMC,GAA4BhU,EAAAA,EAAAA,QAA8B,MAC1DiU,GAAsCjU,EAAAA,EAAAA,QAA8B,MACpEkU,GAAgBlU,EAAAA,EAAAA,QAAsB,MACtCmU,GAAwBnU,EAAAA,EAAAA,SAAgB,GACxCoU,GAAyBpU,EAAAA,EAAAA,QAAsB,OAG9CuK,EAAgC8J,IAAqCvU,EAAAA,EAAAA,WAAS,GA6HrF,MAAO,CACHwU,+BA3HoC5O,IAEpCwO,EAAclT,QAAU0E,EAAEqM,QAAQ,GAAGC,QAEjCgC,EAA0BhT,SAAWiT,EAAoCjT,UACzEgT,EAA0BhT,QAAQ+O,MAAMwE,SAAW,SACnDN,EAAoCjT,QAAQ+O,MAAMwB,WAAa,QACnE,EAqHAiD,8BAnHmC9O,IAEnC,IAAI+O,EAAW/O,EAAEqM,QAAQ,GAAGC,QAExB0C,EAAgB,EAChBR,EAAclT,UACd0T,EAAgBD,EAAWP,EAAclT,SAKzC0T,EAAgB,GAChBP,EAAsBnT,SAAU,EACzB0T,GAAiB,IACxBP,EAAsBnT,SAAU,GAGhCuJ,EACA0J,EAAoCjT,QAAS+O,MAAMzC,OAAS,wBAAwBoH,QAC5EnK,GAAkCwJ,EAAmB,GAAKW,GAAiB,EACnFhP,EAAE9D,iBAEEqS,EAAoCjT,UACpCiT,EAAoCjT,QAAQ+O,MAAMzC,OAAS,gBAAgBoH,OAEnF,EA2FAC,6BAzFkCjP,IAE9BuO,EAAoCjT,UACpCiT,EAAoCjT,QAAQ+O,MAAMwB,WAAa,oBAI/D4C,EAAsBnT,QAClBgT,EAA0BhT,SAAWiT,EAAoCjT,UACzEgT,EAA0BhT,QAAQ4T,SAAS,EAAG,GAC9CZ,EAA0BhT,QAAQ+O,MAAMwE,SAAW,SAEnDF,GAAkC,GAClCJ,EAAoCjT,QAAQ+O,MAAMzC,OAAS,wBAG/D+G,GAAkC,GAC9BJ,EAAoCjT,SAAWgT,EAA0BhT,UACzEiT,EAAoCjT,QAAQ+O,MAAMzC,OAAS,QAC3D0G,EAA0BhT,QAAQ+O,MAAMwE,SAAW,UAE3D,EAqEAM,2BAlEgCnP,IAC5BuO,EAAoCjT,SAAWgT,EAA0BhT,UAEzEiT,EAAoCjT,QAAQ+O,MAAMwB,WAAa,mBAC/DyC,EAA0BhT,QAAQ+O,MAAMwE,SAAW,SACnDF,GAAkC,GAClCJ,EAAoCjT,QAAQ+O,MAAMzC,OAAS,QAC/D,EA4DA/C,iCACAyJ,4BACAC,sCACAa,0BA7D+BpP,IAC3BuO,EAAoCjT,UAEpCoT,EAAuBpT,QAAU0E,EAAEqM,QAAQ,GAAGC,QAC9CiC,EAAoCjT,QAAQ+O,MAAMwB,WAAa,QACnE,EAyDAwD,yBAtD8BrP,IAAgC,IAADsP,EAC7D,GAAIf,EAAoCjT,SAAsF,KAAhC,QAA3CgU,EAAAf,EAAoCjT,eAAO,IAAAgU,OAAA,EAA3CA,EAA6CC,wBAAwB1L,KAAYgB,EAAgC,CAGhK,IAAIkK,EAAW/O,EAAEqM,QAAQ,GAAGC,QAExB0C,EAAgB,EAChBN,EAAuBpT,UACvB0T,EAAgBD,EAAWL,EAAuBpT,SAIlD0T,EAAgB,GAChBP,EAAsBnT,SAAU,EACzB0T,GAAiB,IACxBP,EAAsBnT,SAAU,EAExC,GAsCAkU,wBApC6BxP,IAEzBuO,EAAoCjT,UACpCiT,EAAoCjT,QAAQ+O,MAAMwB,WAAa,oBAG/D4C,EAAsBnT,SAAWiT,EAAoCjT,SACjEgT,EAA0BhT,UAC1BgT,EAA0BhT,QAAQ4T,SAAS,EAAG,GAC9CZ,EAA0BhT,QAAQ+O,MAAMwE,SAAW,SACnDF,GAAkC,GAClCJ,EAAoCjT,QAAQ+O,MAAMzC,OAAS,sBAEnE,EAwBA6H,6BAtBiCA,KAC7BlB,EAAoCjT,SAAWgT,EAA0BhT,UACzEiT,EAAoCjT,QAAQ+O,MAAMwB,WAAa,mBAE/DyC,EAA0BhT,QAAQ4T,SAAS,EAAG,GAC9CZ,EAA0BhT,QAAQ+O,MAAMwE,SAAW,SAEnDF,GAAkC,GAClCJ,EAAoCjT,QAAQ+O,MAAMzC,OAAS,sBAC/D,EAcH,E,0ECtIE,MAAM8H,EAAqB7G,EAAAA,GAAO8G,MAA+B;gBACvDvF,GAAWA,EAAM3H,SAAW2H,EAAM3H,SAAW;YACjD2H,GAAWA,EAAM4B,KAAO5B,EAAM4B,KAAO;aACpC5B,GAAWA,EAAMwF,MAAQxF,EAAMwF,MAAQ;WACzCxF,GAAWA,EAAM2B,IAAM3B,EAAM2B,IAAM;cAChC3B,GAAWA,EAAMyF,OAASzF,EAAMyF,OAAS;wBAC/BzF,GAAWA,EAAM0F,gBAAkB1F,EAAM0F,gBAAkBpS,EAAAA,GAAWE,MAAM9E;;;;;WAK1F2Q,EAAAA,GAAaC,YAAYC;eACrBF,EAAAA,GAAasG,YAAYC,WAAWvG,EAAAA,GAAawG,YAAYD;;;;kBAI1DE,EAAAA,GAAYC,WAAWC;MAClChG,GAAUA,EAAM7E,QAAU;;EAIpB8K,EAAcxH,EAAAA,GAAOC,GAAG;;;;;;aAMxBpL,EAAAA,GAAW4S,MAAMxX;EAEjByX,EAAO1H,EAAAA,GAAO2H,GAAiC;;;;MAIrDpG,GAAUA,EAAMqG,gBAAkB;EAE5BC,EAAU7H,EAAAA,GAAO8H,CAAC;aAClBjT,EAAAA,GAAW4S,MAAMxX;iBACbgR,EAAAA,GAAU8G,cAAc5G;mBACtBF,EAAAA,GAAU8G,cAAc3G;mBACxBH,EAAAA,GAAU8G,cAAc1G;ECT3C,EApBoB/Q,IAAiH,IAAhH,QAAE0X,EAAO,IAAE/P,EAAG,SAAE9D,EAAQ,eAAEyT,EAAc,cAAE/V,EAAa,QAAEyC,EAAO,WAAEN,KAAeuN,GAAyBjR,EAC3H,MAAM2X,EAAyC7U,IACvCvB,GAAiBmC,EACjBA,EAAWZ,IACHvB,GAAiByC,GACzBA,EAAQlB,EACZ,EAEJ,OACIQ,EAAAA,EAAAA,MAACiT,EAAkB,CAACvS,QAAUzC,OAAoC0C,EAApB0T,EAA+BjU,WAAYnC,EAAgBoW,OAAoB1T,KAAegN,EAAKpN,SAAA,CAC5I6T,IACG5T,EAAAA,EAAAA,KAACoT,EAAW,CAAArT,UACRC,EAAAA,EAAAA,KAACsT,EAAI,CAAC3P,IAAKiQ,EAAS/P,IAAKA,GAAY,cAAe2P,eAAgBA,OAG5ExT,EAAAA,EAAAA,KAACyT,EAAO,CAAA1T,SAAEA,MACO,ECavB+T,IAAYC,EAAAA,EAAAA,IAAU,CACxBC,IAAK,UACLC,QAAS,EACLC,EAAAA,EAAAA,GAAc,CACVC,SAAUC,wCA6ctB,SAASC,KACL,OACI7U,EAAAA,EAAAA,MAAC8U,EAAAA,GAAe,CAAAvU,SAAA,EACZC,EAAAA,EAAAA,KAACuU,EAAAA,GAAa,CAAAxU,SAAC,gBACfC,EAAAA,EAAAA,KAACwU,EAAAA,GAAgB,CAAAzU,SAAC,qDAG9B,CAEA,SAAS0U,GAA+B1P,EAAgC2P,EAAkB1G,GACtF,IAAI2G,EAAY,IAAIC,MAAM,IAAIC,QAAQxR,KAAKsD,GAAMA,EAAI,IACrD,OAAI+N,EACOC,EAAUtR,KAAKyR,IACX9U,EAAAA,EAAAA,KAACgP,EAAwB,GAAM8F,MAI1C9U,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAAvF,SACKgF,GAAYA,EAASM,OAAS,EAC3BN,EAASZ,MAAM,GAAGd,KAAI,CAACjH,EAASmH,KACrBvD,EAAAA,EAAAA,KAAC8N,EAAmB,CAACE,yBAA0BA,EAA0B5R,QAASA,EAA0B2R,MAAe,IAARxK,GAAnBnH,EAAQyC,OAGnHmB,EAAAA,EAAAA,KAACqU,GAAyB,KAI1C,CAEA,SA1cA,WACI,MAAOtP,EAAUgQ,IAAe5X,EAAAA,EAAAA,UAAkD,CAAC,GAG7EI,GAAWC,EAAAA,EAAAA,MACXyQ,GAAWC,EAAAA,EAAAA,MAEXvQ,GAAcC,EAAAA,EAAAA,UAAQ,KACxB,MAAMC,EAAe,IAAIC,gBAAgBP,EAASQ,QAC5CC,EAAsB,CAAC,EAC7B,IAAK,IAAKC,EAAKC,KAAUL,EAAaM,UAClCH,EAAOC,GAA4BC,EAEvC,OAAOF,CAAM,GACd,CAACT,EAASQ,UAENiX,EAAqBC,IAA0BxY,EAAAA,EAAAA,gBAAeqL,EAAAA,KAC9DoN,EAAaC,IAAkB1Y,EAAAA,EAAAA,gBAAe2Y,EAAAA,KAC9CC,EAAYC,IAAiB7Y,EAAAA,EAAAA,gBAAe8Y,EAAAA,IAC5ChZ,EAAWC,IAAgBC,EAAAA,EAAAA,gBAAeC,EAAAA,IAC1C8Y,EAAUC,IAAehZ,EAAAA,EAAAA,gBAAeiZ,EAAAA,IACxCC,EAAcC,IAAmBzY,EAAAA,EAAAA,UAAoC,CAAC,GAEvE0Y,GAAkBxY,EAAAA,EAAAA,QAAO,KAE/Be,EAAAA,EAAAA,YAAU,KACN,GAAIT,EAAY2D,cAAe,CAC3B,MAAMA,EAAgBC,KAAKC,MAAM7D,EAAY2D,eAC7C2T,EAAuB3T,EAC3B,IACD,CAAC3D,EAAY2D,cAAe2T,IAE/B,MAAO5L,EAAa3B,IAAkBvK,EAAAA,EAAAA,UAAsC,OAErE2Y,EAAeC,IAAoB5Y,EAAAA,EAAAA,WAAS,IAC5C6Y,EAAcC,IAAmB9Y,EAAAA,EAAAA,UAAS,IAC1CuX,EAASwB,IAAc/Y,EAAAA,EAAAA,WAAS,IAChCgZ,EAAMC,IAAWjZ,EAAAA,EAAAA,UAAS,IAC1BkZ,EAAWC,IAAgBnZ,EAAAA,EAAAA,UAAS,IACpCoZ,EAAqBC,IAA0BrZ,EAAAA,EAAAA,WAAS,IAGzD,+BACFwU,GAA8B,8BAC9BE,GAA6B,6BAC7BG,GAA4B,2BAC5BE,GAA0B,+BAC1BtK,GAA8B,0BAC9ByJ,GAAyB,oCACzBC,GAAmC,0BACnCa,GAAyB,yBACzBC,GAAwB,wBACxBG,GAAuB,6BACvBC,IACAiE,EAA6BT,IAC1BU,GAAiBC,KAAeC,EAAAA,EAAAA,GAAmBvF,IAEpD5T,IAAgBC,EAAAA,EAAAA,KAEhBmZ,GAA+BC,IAEjC,MAAMC,EAAQD,EAAWE,MAAM,KACzBC,EAAgB,IAAIzG,KAAK,GAAGuG,EAAM,MAAMA,EAAM,MAAMA,EAAM,mBAAmBG,WACnF,MAAsB,iBAAlBD,EACO,KAEJA,CAAa,EAGlBtP,IAAgBwP,EAAAA,EAAAA,cAClBpY,eACIqY,EACA/G,EACAC,EACAhP,GAIE,IAHF6U,EAAIkB,UAAAhS,OAAA,QAAAlF,IAAAkX,UAAA,GAAAA,UAAA,GAAG,EACPhO,EAAwCgO,UAAAhS,OAAA,QAAAlF,IAAAkX,UAAA,GAAAA,UAAA,GAAG,KAC3CC,EAAqBD,UAAAhS,OAAA,QAAAlF,IAAAkX,UAAA,IAAAA,UAAA,GAErBnB,GAAW,GACN7M,GAED3B,EAAe,OAEnB6P,EAAAA,EAAAA,GAAQ,OAAQ,qBAA+C,SAAU,CACrEC,KAAM,CACF7O,QAASyO,EACT/G,UAAWA,EAAYwG,GAA4BxG,GAAuB,aAC1EC,QAASA,EAAUuG,GAA4BvG,GAAqB,eACpEmH,aAAa,IAAIjH,MAAO0G,WACxB5V,cAAeA,EACf6U,KAAMA,EACNuB,KAAM,GACNrO,YAAaA,EACbiO,aAAcA,EACdK,WAAYnC,EAAoB,OAATjZ,QAAS,IAATA,OAAS,EAATA,EAAWqb,SAAWvC,KAGhDwC,MAAMC,IACH7B,EAAgB6B,EAAIC,OAGhBhD,EAFS,IAAToB,EAEY,CAAE,CAACA,GAAO2B,EAAI/S,UAGbiT,IACF,IAAKA,EAAW,CAAC7B,GAAO2B,EAAI/S,YAG3CuR,EAAa9G,KAAKyI,KAAKH,EAAIC,MAAQ,KACnC7B,GAAW,GACP4B,EAAInC,cACJC,EAAgBkC,EAAInC,aACxB,IAEHuC,OAAO7Y,GAAQC,QAAQC,IAAIF,IACpC,GACA,KAIJjB,EAAAA,EAAAA,YAAU,KAEN,MAAM8C,EAAcvD,EAAYuD,YAAcvD,EAAYuD,YAAc,aAClEE,EAAgBzD,EAAYyD,cAAgBzD,EAAYyD,cAAgB,eACxEuH,EAAUhL,EAAYiL,WAAajL,EAAYiL,WAAa,8BAC5DuP,EAA0B5W,KAAKC,MAAMD,KAAK6W,UAAUC,EAAAA,IAC1DF,EAAwBG,WAAa,CAAEC,IAAK,EAAGC,IAAK,GACpD7Q,GAAcgB,EAASzH,EAAaE,EAAezD,EAAY2D,cAAgBC,KAAKC,MAAM7D,EAAY2D,eAAiB6W,GACvHtC,EAAgBxX,QAAU2W,EAAoByD,QAAQ,GACvD,CAAC9Q,GAAehK,EAAYuD,YAAavD,EAAYyD,cAAezD,EAAYiL,WAAYjL,EAAY2D,gBAE3G,MAAMoX,GAAaA,MACX9Q,KAE2B,SAApB8O,KAA+BC,SAAnC,IAyHXvY,EAAAA,EAAAA,YAAU,KACN+W,EA9DsBwD,MACtB,MAAM3a,EAAS,IAAIF,gBAAgBQ,OAAOf,SAASQ,QAC7C6a,EAAqB,IAAK1D,GAK1B2D,EAAmB/B,IACrB,MAAOpG,EAAKC,EAAOmI,GAAQhC,EAAWE,MAAM,KAAK3T,IAAIgE,QACrD,OAAO,IAAImJ,KAAKsI,EAAMnI,EAAQ,EAAGD,EAAI,EAqBzC,IAlBKkI,EAAmBnT,KAAOzH,EAAO+a,IAAI,SACtCH,EAAmBnT,IAAMuT,WAAWhb,EAAOib,IAAI,UAE9CL,EAAmBlT,KAAO1H,EAAO+a,IAAI,SACtCH,EAAmBlT,IAAMsT,WAAWhb,EAAOib,IAAI,UAE9CL,EAAmBM,OAASlb,EAAO+a,IAAI,cACxCH,EAAmBM,MAhBM3b,IACJA,EAASyZ,MAAM,KAChB3T,KAAK8V,GAAgBA,EAAYlV,OAAO,GAAGC,cAAgBiV,EAAYhV,MAAM,GAAG0L,gBAAe9N,KAAK,KAc7FqX,CAAoBpb,EAAOib,IAAI,eAEzDL,EAAmBvI,WAAarS,EAAO+a,IAAI,iBAC5CH,EAAmBvI,UAAYwI,EAAgB7a,EAAOib,IAAI,kBAEzDL,EAAmBtI,SAAWtS,EAAO+a,IAAI,mBAC1CH,EAAmBtI,QAAUuI,EAAgB7a,EAAOib,IAAI,oBAEvDL,EAAmBjQ,SAAW3K,EAAO+a,IAAI,aAC1CH,EAAmBjQ,QAAU3K,EAAOib,IAAI,YAExCjb,EAAO+a,IAAI,iBACX,IACI,MAAMM,EAAU9X,KAAKC,MAAMxD,EAAOib,IAAI,kBAEhCK,EAA8B,CAChCb,SAAUY,EAAQZ,UAAY,GAC9BzI,YAAaqJ,EAAQrJ,aAAe,GACpChM,aAAcqV,EAAQrV,cAAgB,GACtCuV,mBAAoBF,EAAQE,oBAAsB,GAClDjB,WAAYe,EAAQf,YAAc,CAAEC,IAAK,EAAGC,IAAK,KACjDgB,OAAQH,EAAQG,QAAU,EAC1B9X,OAAQ2X,EAAQ3X,QAAU,EAC1B3B,SAAUsZ,EAAQtZ,UAAY,EAC9B6B,QAASyX,EAAQzX,SAAW,EAC5BD,KAAM0X,EAAQ1X,MAAQ,EACtB8X,SAAUJ,EAAQI,UAAY,EAC9BrJ,KAAMiJ,EAAQjJ,MAAQ,EACtBsJ,UAAWL,EAAQK,WAAa,EAChCC,UAAWN,EAAQM,WAAa,GAChCC,SAAUP,EAAQO,UAAY,GAC9BC,WAAYR,EAAQQ,YAAc,IAEtCjB,EAAmBtX,cAAgBgY,CACvC,CAAE,MAAOQ,GACLxa,QAAQwa,MAAM,iCAAkCA,EACpD,CAGJ,OAAOlB,CAAkB,EAIVD,GAAoB,GACpC,IAEH,MAAMoB,IAAW5C,EAAAA,EAAAA,cAAY,KACzB,GAAIpS,GAAYA,EAAS,IAAMA,EAAS,GAAGM,OAAS,EAAG,CACnD,MAAM2U,EAAejV,EAAS,GAAG1B,KAAKjH,GAAgCA,EAAQ6d,aAAe,MAC7F,OAAOzK,KAAKgJ,OAAOwB,EACvB,CACI,OAAO,GACX,GACD,CAACjV,KAEJ3G,EAAAA,EAAAA,YAAU,KACN2b,IAAU,GACX,CAACA,KAEJ,MAAMlG,GAAqB7U,IACvBA,EAAME,kBACNsX,GAAuB,EAAK,EAGhC,OACIhX,EAAAA,EAAAA,MAAA8F,EAAAA,SAAA,CAAAvF,SAAA,EACIC,EAAAA,EAAAA,KAACka,EAAAA,EAAU,CAAChB,MAAO,sBAAsBvb,EAAYJ,SAAWI,EAAYJ,SAAW,iBACvFyC,EAAAA,EAAAA,KAACma,EAAAA,EAAW,CACRC,aAAevY,IACX,MAAMwY,EAAanF,EAAYgE,MAAQhE,EAAYgE,MAAQ,YACrDhY,EAAcgU,EAAY7E,UAC1B,GAAGiK,OAAQpF,EAAY7E,UAAmBkK,WAAWC,SAAS,EAAG,QAAQF,OAAQpF,EAAY7E,UAAmBU,WAAa,GAAGyJ,SAAS,EAAG,QAAStF,EAAY7E,UAAmBW,gBACpL,KACA5P,EAAgB8T,EAAY5E,QAC5B,GAAGgK,OAAQpF,EAAY5E,QAAiBiK,WAAWC,SAAS,EAAG,QAAQF,OAAQpF,EAAY5E,QAAiBS,WAAa,GAAGyJ,SAAS,EAAG,QAAStF,EAAY5E,QAAiBU,gBAC9K,KACAyJ,EAAgC,cAAfJ,EAA6B,YAAYA,IAAe,GACzEK,EAA2C,gCAAxBxF,EAAYvM,QAA4C,cAAcuM,EAAYvM,UAAY,GACjH1H,EAAoBC,EAAc,eAAeA,IAAgB,GACjEC,EAAsBC,EAAgB,iBAAiBA,IAAkB,GACzEqE,EAAMyP,EAAYzP,IAAM,OAAOyP,EAAYzP,MAAQ,GACnDC,EAAMwP,EAAYxP,IAAM,OAAOwP,EAAYxP,MAAQ,GAEnDiV,EAAapZ,KAAKC,MAAMD,KAAK6W,UAAUvW,IACzCgU,EAAgBxX,UAAYwD,EAAO4W,WACnCkC,EAAWrC,WAAa,CAAEC,IAAK,EAAGC,IAAK,GACvC3C,EAAgBxX,QAAUsc,EAAWlC,UAGzC,MASMhX,EAAsB,CAACgZ,EAAgBC,EAAkBzZ,EAAmBE,EAAqBsE,EAAKC,GARxGkV,EAAAA,EAAAA,GAAgCD,GAAc,GAC9CA,EAAWjZ,QACXiZ,EAAW5a,UACX4a,EAAW/Y,SACX+Y,EAAWhZ,MACXgZ,EAAWlC,WAAazD,EAAoByD,SACtC,iBAAiBlX,KAAK6W,UAAUuC,KAChC,IAC4H9Y,QAAQC,GAAoB,KAAVA,IAAcC,KAAK,KAC3KkT,EAAuBpT,GACvBoM,EAAS,WAAUxM,EAAsB,IAAIA,IAAwB,IAAK,EAE9EkU,aAAcA,EACdlY,cAAeA,GACf4T,0BAA2BA,GAC3B+E,QAASA,KAEbpW,EAAAA,EAAAA,KAAC6a,EAAAA,EAAY,CAACC,KAAMpC,KAAcjb,cAAeA,KAChDF,EAAS4R,SAASvQ,SAAS,YAAcN,OAAO2D,WAAa,MAAQsU,IAClEvW,EAAAA,EAAAA,KAAC+a,EAAW,CACRtd,cAAeA,GACfyC,QAAS2T,GACTjU,WAAYiU,GACZrO,SAAS,QACToN,OA3IRhL,GACO,QAEA+O,GAAc,QAAkB+B,KAAe,OAAS,OAyIvD3J,KAAK,MACLzG,QAAM,EACNsL,QAAQ,mEACRJ,gBAAc,EAAAzT,SACjB,YAKJwW,IACGvW,EAAAA,EAAAA,KAACgb,EAAAA,EAAiB,CACdC,YAAaA,IAAMzE,GAAwBrX,IAAUA,IACrD+b,4BAnLqB5Z,IACjC,MAAM+Y,EAAanF,EAAYgE,MAAQhE,EAAYgE,MAAQ,YACrDhY,EAAcgU,EAAY7E,UAC1B,GAAGiK,OAAQpF,EAAY7E,UAAmBkK,WAAWC,SAAS,EAAG,QAAQF,OAAQpF,EAAY7E,UAAmBU,WAAa,GAAGyJ,SAAS,EAAG,QAAStF,EAAY7E,UAAmBW,gBACpL,KACA5P,EAAgB8T,EAAY5E,QAC5B,GAAGgK,OAAQpF,EAAY5E,QAAiBiK,WAAWC,SAAS,EAAG,QAAQF,OAAQpF,EAAY5E,QAAiBS,WAAa,GAAGyJ,SAAS,EAAG,QAAStF,EAAY5E,QAAiBU,gBAC9K,KAgBAvP,EAAsB,CAfU,cAAf4Y,EAA6B,YAAYA,IAAe,GAC9B,gCAAxBnF,EAAYvM,QAA4C,cAAcuM,EAAYvM,UAAY,GAC7FzH,EAAc,eAAeA,IAAgB,GAC3CE,EAAgB,iBAAiBA,IAAkB,GACnE8T,EAAYzP,IAAM,OAAOyP,EAAYzP,MAAQ,GAC7CyP,EAAYxP,IAAM,OAAOwP,EAAYxP,MAAQ,IAGrDkV,EAAAA,EAAAA,GAAgCtZ,GAAiB,GACjD4T,EAAY5T,cAAcI,QAC1BwT,EAAY5T,cAAcvB,UAC1BmV,EAAY5T,cAAcM,SAC1BsT,EAAY5T,cAAcK,KACpB,iBAAiBJ,KAAK6W,UAAU9W,KAChC,IAC4HO,QAAQC,GAAoB,KAAVA,IAAcC,KAAK,KAC3KkM,EAAS,WAAUxM,EAAsB,IAAIA,IAAwB,IAAK,EA4J9DkU,aAAcA,EACdS,QAASA,KAIjB5W,EAAAA,EAAAA,MAAC2b,EAAAA,GAAsB,CACnBzb,IAAK2R,GACL1R,aAAeoD,GAAMoP,GAA0BpP,GAC/CqY,YAAcrY,IAAO,IAADsP,EACZf,GAAoCjT,SAAsF,KAAhC,QAA3CgU,EAAAf,GAAoCjT,eAAO,IAAAgU,OAAA,EAA3CA,EAA6CC,wBAAwB1L,KAAYgB,IAChIwK,GAAyBrP,EAC7B,EAEJnD,WAAamD,GAAMwP,GAAwBxP,GAC3CsY,cAAgBtY,GAAMwP,GAAwBxP,GAAGhD,SAAA,EAEjDC,EAAAA,EAAAA,KAACsb,EAAAA,GAAgC,CAAC5b,IAAK4R,MACvC9R,EAAAA,EAAAA,MAAC+b,EAAAA,GAA6B,CAAC1c,GAAG,gCAA+BkB,SAAA,EAC7DC,EAAAA,EAAAA,KAACwb,EAAAA,GAA2C,KAExCxb,EAAAA,EAAAA,KAACyb,EAAAA,GAAyC,CACtC9b,aAAeoD,GAAM4O,GAA+B5O,GACpDqY,YAAcrY,GAAM8O,GAA8B9O,GAClDnD,WAAamD,GAAMiP,GAA6BjP,GAChDsY,cAAgBtY,GAAMiP,GAA6BjP,GACnD7C,QAAU6C,GAAMmP,GAA2BnP,GAAGhD,SAE7C2U,GAA4B,OAAjBsB,GACRhW,EAAAA,EAAAA,KAAC0b,EAAAA,GAA+C,KAEhDlc,EAAAA,EAAAA,MAACmc,EAAAA,GAAwC,CAAA5b,SAAA,CACpCiW,EAAe,IAAO,QAAUA,EAAa,aAAWrY,EAAYJ,SAAWI,EAAYJ,SAAW,kBAKvHyC,EAAAA,EAAAA,KAAC4b,EAAAA,GAA+B,CAACC,WAAYnH,GAAW3P,EAASoR,IAAmC,IAA1BpR,EAASoR,GAAM9Q,OAAatF,SACjG0U,GAA+B1P,EAASoR,GAAOzB,GA/OlCtN,IAC9B0M,GAAUgI,MAAM,2BAA4B,CACxCC,OAAQvG,EAAoB,OAATjZ,QAAS,IAATA,OAAS,EAATA,EAAWsC,GAAKwW,EACnCjO,UAAWA,GACb,MA8OWiP,EAAY,IACT7W,EAAAA,EAAAA,MAACwc,EAAAA,GAAiB,CAAAjc,SAAA,EACdC,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACP6T,KAAMA,EACN8F,SAAUA,CAACjd,EAAOd,KAAW,IAADge,EAxOrBC,EAyOH,IAAKpX,EAAS7G,GAAQ,CAClB,MAAMgD,EAAcvD,EAAYuD,YAAcvD,EAAYuD,YAAc,aAClEE,EAAgBzD,EAAYyD,cAAgBzD,EAAYyD,cAAgB,eACxEuH,EAAUhL,EAAYiL,WAAajL,EAAYiL,WAAa,8BAClEjB,GAAcgB,EAASzH,EAAaE,EAAe4T,EAAqB9W,EAAOmL,EACnF,CACiC,QAAjC6S,EAAA7K,GAA0BhT,eAAO,IAAA6d,GAAjCA,EAAmCjK,SAAS,EAAG,GAC/CmE,EAAQlY,GAhPLie,EAiPuBje,EAhPtD4V,GAAUgI,MAAM,wBAAyB,CACrCC,OAAQvG,EAAoB,OAATjZ,QAAS,IAATA,OAAS,EAATA,EAAWsC,GAAKwW,EACnC8G,QAASA,EACTjH,YAAaA,GA6O2C,EAEpCkH,MAAO/F,EACPqB,KAAK,WAETlY,EAAAA,EAAAA,MAAC6c,EAAAA,GAAe,CAAAtc,SAAA,CAAC,WACJoW,EAAK,OAAKE,EAAU,mBAK7C7W,EAAAA,EAAAA,MAAC8c,EAAAA,GAAuB,IAAMhe,OAAO2D,WAAa,IAAM,CAAE/B,QAASA,IAAMsS,MAAmC,CAAC,EAACzS,SAAA,CACzG+V,IACG9V,EAAAA,EAAAA,KAACuc,EAAAA,GAA0B,CAACC,KAAK,SAAStc,QAASA,IAAM6V,GAAkBD,GAAe/V,UACtFC,EAAAA,EAAAA,KAACyc,EAAAA,GAA6C,CAC1CrP,MAAO,CAAEvM,UAAW,kBACpB8C,IAAK,kEACLE,IAAI,kBAIhB7D,EAAAA,EAAAA,KAAC0c,EAAgB,CACbpgB,sBA9QW8K,IAC3B0M,GAAUgI,MAAM,wBAAyB,CACrCC,OAAQvG,EAAoB,OAATjZ,QAAS,IAATA,OAAS,EAATA,EAAWsC,GAAKwW,EACnCjO,UAAWA,GACb,EA2QcrC,SAAUA,EAASoR,GACnBzO,eAAgBA,EAChBC,cAAeA,GACfC,+BAAgCA,aAMxD,C","debug_id":"45adcd19-7cd3-5d2f-bdf1-44bf5320b791"}