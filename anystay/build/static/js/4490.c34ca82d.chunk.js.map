{"version":3,"file":"static/js/4490.c34ca82d.chunk.js","sources":["components/categoryBar/categoryBarStyling.ts","components/categoryBar/categoryItem/categoryItemStyling.ts","components/categoryBar/categoryItem/categoryItem.tsx","components/categoryBar/filterBtn/filterBtnStyling.ts","components/categoryBar/filterBtn/filterBtn.tsx","components/categoryBar/categoryBar.tsx","hook/useScrollDirection.ts","pages/searchListing/filterPopups/searchFilters.tsx","state/selectors/identityId.ts","utils/defaultSearchQuery/defaultSearchQuery.ts","utils/savedListings/toggleSaved.ts"],"sourceRoot":"","sourcesContent":["import styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { ColorTheme, BorderRadiusTheme } from \"../globaStyledComponents/globalStyledComponentsStyling\";\n\nexport const CategoryBarWrapper = styled.div`\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 83px;\n    background: ${ColorTheme.White.color};\n    padding: 0px 18px;\n    z-index: 4;\n\n    @media (min-width: 768px) {\n        border-bottom: 1px solid ${ColorTheme.Grey2.color};\n        box-shadow: none;\n        padding-right: 13px;\n        z-index: 3;\n        top: 80px;\n    }\n    @media (max-width: 767px) {\n        padding: 0;\n    }\n`;\nexport const CategoryBarItemsWrapper = styled(Swiper)`\n    width: 100%;\n    display: flex;\n    transition: 0.2s;\n    .swiper-button-next:after,\n    .swiper-button-prev:after {\n        font-size: 13px;\n        font-weight: 1000;\n        width: 26px;\n        height: 56px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: ${BorderRadiusTheme.radius_8.borderRadius};\n    }\n    .swiper-button-next:hover:after,\n    .swiper-button-prev:hover:after {\n        transform: scale(1.1);\n    }\n\n    .swiper-button-prev,\n    .swiper-button-next {\n        color: ${ColorTheme.Black.color};\n        width: 20px;\n        height: 100%;\n        width: 35px;\n        top: 26%;\n        @media (max-width: 767px) {\n            display: none !important;\n        }\n    }\n\n    .swiper-button-prev {\n        background: linear-gradient(to right, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0));\n        display: flex;\n        justify-content: flex-start;\n        left: 0;\n    }\n    .swiper-button-prev.swiper-button-disabled {\n        display: none !important;\n    }\n    .swiper-button-next.swiper-button-disabled {\n        display: none !important;\n    }\n\n    .swiper-button-next {\n        background: linear-gradient(to left, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0));\n        display: flex;\n        justify-content: flex-end;\n        right: 0;\n    }\n\n    ::selection {\n        display: none;\n    }\n`;\n\nexport const CategoryBarDivider = styled.div`\n    height: 24px;\n    width: 1px;\n    background-color: ${ColorTheme.Grey2.color};\n    margin: 0 13px 0 8px;\n\n    @media (max-width: 767px) {\n        display: none;\n    }\n`;\n\nexport const CategoryItemSwiperSlide = styled(SwiperSlide)`\n    width: fit-content;\n    height: 100%;\n    padding-right: 32px;\n\n    @media (max-width: 767px) {\n        &:last-child {\n            padding-right: 24px;\n        }\n        &:first-child {\n            padding-left: 18px;\n        }\n    }\n`;\n","import styled, { css } from \"styled-components\";\nimport { TextTheme, ColorTheme } from \"../../globaStyledComponents/globalStyledComponentsStyling\";\n\ninterface CategoryItemProps {\n    selected?: boolean;\n}\n\nexport const CategoryItemWrapper = styled.button<CategoryItemProps>`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    padding-top: 2px;\n    height: 100%;\n    ${(props) =>\n        !props.selected &&\n        css`\n            &:hover p {\n                border-bottom: 2px solid ${ColorTheme.Black.color};\n                color: ${ColorTheme.Black.color};\n            }\n        `}\n\n    @media (min-width: 768px) {\n        padding-top: 16px;\n    }\n`;\n\nexport const CategoryItemIcon = styled.img`\n    height: 24px;\n    width: 24px;\n    object-fit: cover;\n    margin-bottom: 4px;\n\n    @media (min-width: 768px) {\n        margin-bottom: 6px;\n    }\n`;\nexport const CategoryItemText = styled.p<CategoryItemProps>`\n    font-size: ${TextTheme.sans_200_semi.fontSize};\n    line-height: ${TextTheme.sans_200_semi.lineHeight};\n    font-weight: ${TextTheme.sans_200_semi.fontWeight};\n    padding-bottom: 14px;\n    border-bottom: ${(props) => (props.selected ? `2px solid ${ColorTheme.Black.color}` : `2px solid transparent`)};\n    color: ${(props) => (props.selected ? ColorTheme.Black.color : ColorTheme.Grey.color)};\n    transition: 0.2s;\n`;\n","import { CategoryItemWrapper, CategoryItemIcon, CategoryItemText } from \"./categoryItemStyling\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\ninterface CategoryItemProps {\n    label: string;\n    imgSrc: string;\n    selected: boolean;\n    onClick: (() => void) | undefined;\n    onTouchEnd: (() => void) | undefined;\n}\n\nconst CategoryItem: React.FC<CategoryItemProps> = ({ label, imgSrc, selected, onClick, onTouchEnd }) => {\n    return (\n        <CategoryItemWrapper onClick={onClick} onTouchEnd={onTouchEnd}>\n            <CategoryItemIcon src={imgSrc} alt={label} />\n            <CategoryItemText selected={selected}>{label}</CategoryItemText>\n        </CategoryItemWrapper>\n    );\n};\n\nexport default CategoryItem;\n","import styled from \"styled-components\";\nimport { TextTheme, ColorTheme, BorderRadiusTheme } from \"../../globaStyledComponents/globalStyledComponentsStyling\";\n\nexport const FilterBtnWrapper = styled.button`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    bottom: 2px;\n    width: 66px;\n    height: 66px;\n    gap: 6px;\n    justify-content: flex-end;\n    align-items: center;\n    border: none;\n    background-color: transparent;\n    border-radius: ${BorderRadiusTheme.radius_8.borderRadius};\n    cursor: pointer;\n    &:hover {\n        background-color: ${ColorTheme.Grey5.color};\n    }\n\n    @media (max-width: 767px) {\n        display: none;\n    }\n`;\nexport const FilterBtnIcon = styled.img`\n    height: 20px;\n    width: 20px;\n    object-fit: cover;\n    margin-bottom: 2px;\n`;\n\nexport const FilterBtnText = styled.p`\n    font-size: ${TextTheme.sans_200_semi.fontSize};\n    line-height: ${TextTheme.sans_200_semi.lineHeight};\n    font-weight: ${TextTheme.sans_200_semi.fontWeight};\n    margin: 0;\n    margin-bottom: 8px;\n`;\nexport const FilterSelectedNumberBubble = styled.div`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: ${ColorTheme.Red.color};\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${ColorTheme.White.color};\n    font-size: ${TextTheme.sans_200_semi.fontSize};\n    font-weight: ${TextTheme.sans_200_semi.fontWeight};\n    line-height: ${TextTheme.sans_200_semi.lineHeight};\n`;\n","import { FilterBtnWrapper, FilterBtnIcon, FilterBtnText, FilterSelectedNumberBubble } from \"./filterBtnStyling\";\nimport SearchListingFilters from \"../../../pages/searchListing/filterPopups/searchFilters\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { searchFiltersSelector } from \"../../../state/selectors/searchQuery\";\nimport { SearchFilters } from \"../../../interfaces/state/searchQuery\";\nimport { calculateNumberOfFilterSelected } from \"./calculateNumberOfFilterSelected\";\n\ninterface FilterBtnProps {\n    updateFilter: (searchFilter: SearchFilters) => void;\n    distribution: { [key: string]: number };\n    isTouchDevice?: boolean;\n}\n\nconst FilterBtn: React.FC<FilterBtnProps> = ({ updateFilter, distribution, isTouchDevice }) => {\n    const [filterActive, setFilterActive] = useState(false);\n    const [searchFilters, setSearchFilters] = useRecoilState(searchFiltersSelector);\n\n    const [filterSelectedNumber, setFilterSelectedNumber] = useState(0);\n\n    useEffect(() => {\n        //calculate number of filter selected\n        if (distribution) {\n            setFilterSelectedNumber(calculateNumberOfFilterSelected(searchFilters, distribution.min, distribution.max));\n        }\n    }, [distribution, searchFilters]);\n\n    return (\n        <>\n            <FilterBtnWrapper\n                onClick={() => {\n                    setFilterActive(true);\n                }}\n            >\n                <FilterBtnIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/filter.svg\"} alt={\"filter icon\"} />\n                <FilterBtnText>Filters</FilterBtnText>\n                {filterSelectedNumber > 0 && <FilterSelectedNumberBubble>{filterSelectedNumber}</FilterSelectedNumberBubble>}\n            </FilterBtnWrapper>\n            {filterActive && (\n                <SearchListingFilters\n                    togglePopup={() => {\n                        if (!isTouchDevice) {\n                            setFilterActive(false);\n                        }\n                    }}\n                    updateSearchBySearchFilters={updateFilter}\n                    distribution={distribution}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FilterBtn;\n","import { CategoryBarWrapper, CategoryBarItemsWrapper, CategoryItemSwiperSlide, CategoryBarDivider } from \"./categoryBarStyling\";\nimport CategoryItem from \"./categoryItem/categoryItem\";\nimport { Navigation, Mousewheel, FreeMode } from \"swiper\";\nimport { useEffect, useRef, useState } from \"react\";\nimport FilterBtn from \"./filterBtn/filterBtn\";\nimport { searchFiltersSelector } from \"../../state/selectors/searchQuery\";\nimport { useRecoilState } from \"recoil\";\nimport { SearchFilters } from \"../../interfaces/state/searchQuery\";\nimport { SwiperRef } from \"swiper/react\";\nimport useScrollDirection from \"../../hook/useScrollDirection\";\n\nconst categoryData = [\n    { inlineId: \"all\", label: \"All\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/All.jpg\" },\n    { inlineId: \"entire-place\", label: \"Homes\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Home.jpg\" },\n    { inlineId: \"private-room\", label: \"Rooms\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Rooms.jpg\" },\n    { inlineId: \"shared-room\", label: \"Shared\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Shared.jpg\" },\n    { inlineId: \"camping\", label: \"Camping\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Camping.jpg\" },\n    { inlineId: \"resorts\", label: \"Resorts\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Resorts.jpg\" },\n    { inlineId: \"motel\", label: \"Motels\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Motels.jpg\" },\n    { inlineId: \"beach-house\", label: \"Beach\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Beach.jpg\" },\n    { inlineId: \"cabin\", label: \"Cabins\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Cabins.jpg\" },\n    { inlineId: \"farms\", label: \"Farms\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Farms.jpg\" },\n    { inlineId: \"villa\", label: \"Villas\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Villa.jpg\" },\n    { inlineId: \"glamping\", label: \"Glamping\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Glamping.jpg\" },\n    { inlineId: \"island\", label: \"Islands\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Islands.jpg\" },\n    { inlineId: \"romantic\", label: \"Romantic\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Romantic.jpg\" },\n    { inlineId: \"bed-and-breakfast\", label: \"B&Bs\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/B%26Bs.jpg\" },\n    { inlineId: \"boat\", label: \"Boats\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Boats.jpg\" },\n    { inlineId: \"cozy\", label: \"Cozy\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Cozy.jpg\" },\n    { inlineId: \"boutique-hotel\", label: \"Hostels\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Hostels.jpg\" },\n    { inlineId: \"views\", label: \"Views\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Views.jpg\" },\n    { inlineId: \"wineries\", label: \"Wineries\", img: \"https://d292awxalydr86.cloudfront.net/Home+page/Category+icons/Wineries.jpg\" },\n];\n\ninterface CategoryBarProps {\n    updateFilter: (searchFilter: SearchFilters) => void;\n    distribution: { [key: string]: number };\n    isTouchDevice?: boolean;\n    searchListingContainerRef?: React.MutableRefObject<HTMLDivElement | null>;\n    setPage?: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst CategoryBar: React.FC<CategoryBarProps> = ({ updateFilter, distribution, isTouchDevice, searchListingContainerRef, setPage }) => {\n    const [searchFilters, setSearchFilters] = useRecoilState(searchFiltersSelector);\n    const categoryBarRef = useRef<SwiperRef | null>(null);\n    const [scrollDirection, isHitBottom] = useScrollDirection(window);\n    const categoryChangedRef = useRef(true);\n\n    useEffect(() => {\n        if (distribution.min && distribution.max && categoryChangedRef.current) {\n            setSearchFilters({\n                ...searchFilters,\n                priceRange: { min: distribution.min, max: distribution.max },\n            });\n            categoryChangedRef.current = false;\n        }\n    }, [distribution]);\n\n    useEffect(() => {\n        const preventVerticalScroll = (e: WheelEvent) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n        const swiperWrapper = categoryBarRef.current?.swiper.el;\n        if (swiperWrapper) {\n            swiperWrapper.addEventListener(\"wheel\", preventVerticalScroll, { passive: false });\n        }\n\n        return () => {\n            if (swiperWrapper) {\n                swiperWrapper.removeEventListener(\"wheel\", preventVerticalScroll);\n            }\n        };\n    }, []);\n\n    return (\n        <CategoryBarWrapper>\n            <CategoryBarItemsWrapper\n                ref={categoryBarRef}\n                className=\"mySwiper\"\n                modules={[Navigation, Mousewheel, FreeMode]}\n                navigation={true}\n                mousewheel={true}\n                freeMode={true}\n                pagination={{\n                    clickable: true,\n                }}\n                loop={false}\n                initialSlide={0}\n                slidesPerView={\"auto\"}\n            >\n                {categoryData.map((item) => {\n                    return (\n                        <CategoryItemSwiperSlide key={item.inlineId}>\n                            <CategoryItem\n                                label={item.label}\n                                imgSrc={item.img}\n                                selected={item.inlineId === searchFilters.category}\n                                onClick={\n                                    !isTouchDevice\n                                        ? () => {\n                                              if (item.inlineId !== searchFilters.category) {\n                                                  //update recoil state\n                                                  const searchFiltersCopy = JSON.parse(JSON.stringify(searchFilters));\n                                                  searchFiltersCopy.category = item.inlineId;\n                                                  //fetch data\n                                                  categoryChangedRef.current = true;\n                                                  updateFilter(searchFiltersCopy);\n                                                  window.scrollTo(0, 0);\n                                                  if (searchListingContainerRef) searchListingContainerRef.current?.scrollTo(0, 0);\n                                                  if (setPage) setPage(1);\n                                              }\n                                          }\n                                        : undefined\n                                }\n                                onTouchEnd={\n                                    isTouchDevice\n                                        ? () => {\n                                              if (item.inlineId !== searchFilters.category) {\n                                                  //update recoil state\n                                                  const searchFiltersCopy = JSON.parse(JSON.stringify(searchFilters));\n                                                  searchFiltersCopy.category = item.inlineId;\n                                                  //fetch\n                                                  categoryChangedRef.current = true;\n                                                  updateFilter(searchFiltersCopy);\n                                                  window.scrollTo(0, 0);\n                                                  if (searchListingContainerRef) searchListingContainerRef.current?.scrollTo(0, 0);\n                                                  if (setPage) setPage(1);\n                                              }\n                                          }\n                                        : undefined\n                                }\n                            />\n                        </CategoryItemSwiperSlide>\n                    );\n                })}\n            </CategoryBarItemsWrapper>\n            <CategoryBarDivider />\n            <FilterBtn updateFilter={updateFilter} distribution={distribution} isTouchDevice={isTouchDevice} />\n        </CategoryBarWrapper>\n    );\n};\n\nexport default CategoryBar;\n","import { useCallback, useEffect, useState, useRef, RefObject } from \"react\";\n\n// this hook is to detect the scroll direction of the page and if the element has been scrolled to the bottom\nconst useScrollDirection = (ref: RefObject<HTMLElement> | Window): (string | boolean)[] => {\n    const prevScrollTopRef = useRef<number>(ref instanceof Window ? ref.scrollY : ref.current ? ref.current.scrollTop : 0);\n    const [scrollDirection, setScrollDirection] = useState([\"you have not scrolled yet\", false]);\n\n    const handleScroll = useCallback((): void => {\n        if (ref instanceof Window) {\n            const windowScrollTop = ref.scrollY;\n            if (prevScrollTopRef.current > windowScrollTop) {\n                setScrollDirection([\"up\", false]);\n            } else if (prevScrollTopRef.current < windowScrollTop && windowScrollTop > 100) {\n                if (windowScrollTop + ref.innerHeight >= document.scrollingElement!.scrollHeight - 200) {\n                    setScrollDirection([\"down\", true]);\n                } else {\n                    setScrollDirection([\"down\", false]);\n                }\n            }\n            prevScrollTopRef.current = windowScrollTop;\n        } else if (ref.current instanceof HTMLElement) {\n            const currentScrollTop = ref.current.scrollTop;\n            if (currentScrollTop > prevScrollTopRef.current && currentScrollTop > 400) {\n                if (currentScrollTop + ref.current.clientHeight >= ref.current.scrollHeight - 200) {\n                    setScrollDirection([\"down\", true]);\n                } else {\n                    setScrollDirection([\"down\", false]);\n                }\n            } else if (prevScrollTopRef.current > currentScrollTop) {\n                setScrollDirection([\"up\", false]);\n            }\n            prevScrollTopRef.current = currentScrollTop;\n        }\n    }, [ref, prevScrollTopRef]);\n\n    useEffect(() => {\n        if (ref instanceof Window) {\n            ref.addEventListener(\"scroll\", handleScroll);\n            return () => ref.removeEventListener(\"scroll\", handleScroll);\n        } else if (ref.current) {\n            const element = ref.current;\n            element.addEventListener(\"scroll\", handleScroll);\n            return () => {\n                element.removeEventListener(\"scroll\", handleScroll);\n            };\n        }\n    }, [handleScroll, ref]);\n    return scrollDirection;\n};\n\nexport default useScrollDirection;\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n    SearchListingFiltersWrapper,\n    SearchListingFiltersSection,\n    SearchListingFiltersSectionTitle,\n    SearchListingFiltersSectionPriceRangeInputWrapper,\n    PriceRangeSliderWrapper,\n    SearchListingGuestInputWrapper,\n    SearchListingGuestInputText,\n    SearchListingGuestInput,\n    SearchListingGuestButton,\n    SearchListingAmenitiesWrapper,\n    SearchListingAmenitieWrapper,\n    SearchListingAmenitieText,\n    SearchListingFiltersContent,\n    SearchListingFiltersSectionTitleWrapper,\n    SearchListingHouseRulesWrapper,\n    SearchListingPropertyTypeWrapper,\n    SearchFiltersTypeOfPlaceButtonWrapper,\n    SearchFiltersTypeOfPlaceTitleWrapper,\n    SearchFiltersTypeOfPlaceTitle,\n    SearchFiltersTypeOfPlaceIcon,\n    SearchFiltersOptionsForYourStayWrapper,\n    SearchFiltersOptionsForYourStayTitleWrapper,\n    SearchFiltersOptionsForYourStayTitle,\n    SearchFiltersOptionsForYourStaySubtitle,\n    SearchListingFiltersSectionPriceRangeInput,\n    SearchListingFiltersSectionPriceRangeTitle,\n    SearchListingFiltersSectionPriceRangeAmountWrapper,\n    SearchListingFiltersSectionPriceRangeAmountLabel,\n    SearchLisingFiltersSectionPriceRangeAmountInput,\n    SearchListingTypeOfPlaceSection,\n    SearchListingFiltersSectionSeeMoreButton,\n    SearchListingFiltersSectionSubtitle,\n    PriceRangeWrapper,\n    PriceRangeContentWrapper,\n    PriceRangeItem,\n} from \"../searchListingStyling\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Slider from \"@mui/material/Slider\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { searchFiltersSelector, searchQuerySelector } from \"../../../state/selectors/searchQuery\";\nimport { useRecoilState } from \"recoil\";\n// import { useHistory } from \"react-router-dom\";\nimport Switch from \"@mui/material/Switch\";\n// import { withStyles ,makeStyles} from '@mui/styles';\nimport { styled, SvgIcon } from \"@mui/material\";\nimport { ColorTheme } from \"../../../components/globaStyledComponents/globalStyledComponentsStyling\";\nimport { SearchFilters } from \"../../../interfaces/state/searchQuery\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\nimport useIsDesktopSize from \"../../../hook/useIsDesktopSize\";\nimport { Helmet } from \"react-helmet\";\nimport { PriceDistributionData } from \"../searchListing\";\nimport useIsTouchDevice from \"../../../hook/useIsTouchDevice\";\n\nconst typeOfPlaceData = [\n    {\n        inlineId: \"entire-place\",\n        title: \"Home\",\n        src: \"https://d292awxalydr86.cloudfront.net/Listing+page+icons/Entire+place.svg\",\n        alt: \"Entire places\",\n    },\n    {\n        inlineId: \"private-room\",\n        title: \"Room\",\n        src: \"https://d292awxalydr86.cloudfront.net/Listing+page+icons/Private+room.svg\",\n        alt: \"Private room\",\n    },\n    {\n        inlineId: \"serviced-room\",\n        title: \"Hotel\",\n        src: \"https://d292awxalydr86.cloudfront.net/Listing+page+icons/Hotel.svg\",\n        alt: \"Hotel room\",\n    },\n    {\n        inlineId: \"shared-room\",\n        title: \"Shared\",\n        src: \"https://d292awxalydr86.cloudfront.net/Listing+page+icons/Shared+room.svg\",\n        alt: \"Shared room\",\n    },\n    {\n        inlineId: \"camping\",\n        title: \"Camping\",\n        src: \"https://d292awxalydr86.cloudfront.net/Listing+page+icons/Camping.svg\",\n        alt: \"Camping\",\n    },\n];\nconst allAmenitiesTypes = [\n    \"Wifi\",\n    \"Aircon\",\n    \"Pool\",\n    \"Parking\",\n    \"TV\",\n    \"Kitchen\",\n    \"Toiletries\",\n    \"Towels\",\n    \"Bedding\",\n    \"Washer\",\n    \"Dryer\",\n    \"Desk\",\n    \"Office\",\n    \"Cutlery\",\n    \"Pots & pans\",\n    \"Dishwasher\",\n    \"Heating\",\n    \"Iron\",\n    \"Hair dryer\",\n    \"Spa\",\n    \"Safe\",\n    \"BBQ\",\n    \"Gym\",\n    \"Lift\",\n    \"Kettle\",\n    \"Microwave\",\n    \"Tea and coffee\",\n    \"Bathtub\",\n    \"Fridge\",\n    \"Vacuum\",\n    \"High chair\",\n    \"Crib\",\n    \"Alarm\",\n];\nconst allPropertyTypes = [\n    { value: \"house\", label: \"House\" },\n    { value: \"apartment\", label: \"Apartment\" },\n    { value: \"townhouse\", label: \"Townhouse\" },\n    { value: \"cabin\", label: \"Cabin\" },\n    { value: \"guest\", label: \"Guest house\" },\n    { value: \"studio\", label: \"Studio\" },\n    { value: \"chalet\", label: \"Chalet\" },\n    { value: \"hotel\", label: \"Hotel\" },\n    { value: \"serviced-apartment\", label: \"Serviced apartment\" },\n    { value: \"resort\", label: \"Resort\" },\n    { value: \"bed-and-breakfast\", label: \"Bed & Breakfast\" },\n    { value: \"farm-stay\", label: \"Farm stay\" },\n    { value: \"hostel\", label: \"Hostel\" },\n    { value: \"motel\", label: \"Motel\" },\n    { value: \"beach-house\", label: \"Beach house\" },\n    { value: \"tree-house\", label: \"Tree house\" },\n    { value: \"condo\", label: \"Condo\" },\n    { value: \"cottage\", label: \"Cottage\" },\n    { value: \"villa\", label: \"Villa\" },\n    { value: \"lodge\", label: \"Lodge\" },\n    { value: \"estate\", label: \"Estate\" },\n    { value: \"tiny-home\", label: \"Tiny home\" },\n    { value: \"yurt\", label: \"Yurt\" },\n    { value: \"glamping\", label: \"Glamping\" },\n    { value: \"guest-suite\", label: \"Guest suite\" },\n    { value: \"penthouse\", label: \"Penthouse\" },\n    { value: \"campsite\", label: \"Campsite\" },\n    { value: \"station\", label: \"Station\" },\n    { value: \"dome\", label: \"Dome\" },\n    { value: \"boutique-hotel\", label: \"Boutique hotel\" },\n    { value: \"barn\", label: \"Barn\" },\n    { value: \"shed\", label: \"Shed\" },\n    { value: \"shack\", label: \"Shack\" },\n    { value: \"caravan\", label: \"Caravan\" },\n    { value: \"wagon\", label: \"Wagon\" },\n    { value: \"boat\", label: \"Boat\" },\n    { value: \"yacht\", label: \"Yacht\" },\n    { value: \"castle\", label: \"Castle\" },\n    { value: \"island\", label: \"Island\" },\n    { value: \"lake-house\", label: \"Lake house\" },\n    { value: \"tower\", label: \"Tower\" },\n    { value: \"aparthotel\", label: \"Aparthotel\" },\n    { value: \"nature-lodge\", label: \"Nature lodge\" },\n    { value: \"houseboat\", label: \"Houseboat\" },\n    { value: \"lighthouse\", label: \"Lighthouse\" },\n    { value: \"bungalow\", label: \"Bungalow\" },\n    { value: \"hut\", label: \"Hut\" },\n    { value: \"loft\", label: \"Loft\" },\n    { value: \"train\", label: \"Train\" },\n    { value: \"teepee\", label: \"Teepee\" },\n    { value: \"bus\", label: \"Bus\" },\n    { value: \"suite\", label: \"Suite\" },\n    { value: \"cave\", label: \"Cave\" },\n    { value: \"chatea\", label: \"Chateau\" },\n    { value: \"riad\", label: \"Riad\" },\n    { value: \"rv\", label: \"RV\" },\n    { value: \"windmill\", label: \"Windmill\" },\n    { value: \"sheperds-hut\", label: \"Shepherds hut\" },\n    { value: \"tram\", label: \"Tram\" },\n    { value: \"igloo\", label: \"Igloo\" },\n    { value: \"church\", label: \"Church\" },\n    { value: \"eco-house\", label: \"Eco house\" },\n    { value: \"bunker\", label: \"Bunker\" },\n];\nconst allHouseRulesTypes = [\"Smoking\", \"Event friendly\"];\n\nconst optionsForYourStayData = [\n    {\n        inlineId: \"instant-book\",\n        title: \"Instant book\",\n        description: \"Book a place instantly\",\n    },\n    {\n        inlineId: \"free-cancellation\",\n        title: \"Free cancellation\",\n        description: \"Make a free cancellation\",\n    },\n    {\n        inlineId: \"pets-allowed\",\n        title: \"Pets allowed\",\n        description: \"Book a pet friendly place\",\n    },\n];\n\ninterface SearchListingFiltersProps {\n    togglePopup: () => void;\n    updateSearchBySearchFilters: (searchFilters: SearchFilters) => void;\n    distribution: { [key: string]: number };\n    setPage?: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst SearchListingFilters: React.FC<SearchListingFiltersProps> = ({ togglePopup, updateSearchBySearchFilters, distribution, setPage }) => {\n    const wrapperRef = useClickOutside(true, togglePopup);\n    const [searchFilters, setSearchFilters] = useRecoilState(searchFiltersSelector);\n\n    const [typeOfPlace, setTypeOfPlace] = useState(searchFilters.typeOfPlace);\n    const [propertyType, setPropertyType] = useState(searchFilters.propertyType);\n    const [amenities, setAmenities] = useState(searchFilters.amenities);\n    const [houseRules, setHouseRules] = useState(searchFilters.houseRules);\n    const [priceRange, setPriceRange] = useState([searchFilters.priceRange.min, searchFilters.priceRange.max]);\n    const [bedrooms, setBedrooms] = useState(searchFilters.bedrooms);\n    const [beds, setBeds] = useState(searchFilters.beds);\n    const [bathrooms, setBathrooms] = useState(searchFilters.bathrooms);\n    const [optionsForYourStay, setOptionsForYourStay] = useState(searchFilters.optionsForYourStay);\n\n    const [moreAmenities, setMoreAmenities] = useState(false);\n    const [morePropertyType, setMorePropertyType] = useState(false);\n    const [boolArray, setBoolArray] = useState<boolean[]>(Array(60).fill(false));\n\n    const priceDistribution = Object.fromEntries(Object.entries(distribution).filter(([key, value]) => !isNaN(Number(key))));\n    const min = distribution.min ? distribution.min : 0;\n    const max = distribution.max ? distribution.max : 1000;\n    const total = distribution.total ? distribution.total : 0;\n\n    const isTouchDevice = useIsTouchDevice();\n\n    // useEffect(() => {\n    //     if (min && max) {\n    //         setPriceRange([min, max]);\n    //     }\n    // }, [searchFilters.priceRange.min, searchFilters.priceRange.max]);\n\n    const clearFilter = () => {\n        const searchFiltersCopy = { ...searchFilters };\n        searchFiltersCopy.amenities = [];\n        searchFiltersCopy.propertyType = [];\n        searchFiltersCopy.houseRules = [];\n        searchFiltersCopy.typeOfPlace = [];\n        searchFiltersCopy.bedrooms = 0;\n        searchFiltersCopy.beds = 0;\n        searchFiltersCopy.bathrooms = 0;\n        searchFiltersCopy.priceRange = { min: min, max: max };\n        searchFiltersCopy.optionsForYourStay = [];\n        setSearchFilters(searchFiltersCopy);\n        setTypeOfPlace(searchFiltersCopy.typeOfPlace);\n        setPropertyType(searchFiltersCopy.propertyType);\n        setAmenities(searchFiltersCopy.amenities);\n        setHouseRules(searchFiltersCopy.houseRules);\n        setPriceRange([searchFiltersCopy.priceRange.min, searchFiltersCopy.priceRange.max]);\n        setBedrooms(searchFiltersCopy.bedrooms);\n        setBathrooms(searchFiltersCopy.bathrooms);\n        setOptionsForYourStay(searchFiltersCopy.optionsForYourStay);\n        setMoreAmenities(false);\n        setMorePropertyType(false);\n\n        const minValue = searchFiltersCopy.priceRange.min;\n        const maxValue = searchFiltersCopy.priceRange.max;\n\n        const minIndex = checkCurrentValue(minValue);\n        const maxIndex = checkCurrentValue(maxValue);\n\n        setBoolArray((prev) => {\n            return prev.map((item, index) => {\n                return index < minIndex || index > maxIndex ? true : false;\n            });\n        });\n    };\n\n    const saveFilter = () => {\n        const searchFiltersCopy = { ...searchFilters };\n        searchFiltersCopy.amenities = amenities;\n        searchFiltersCopy.propertyType = propertyType;\n        searchFiltersCopy.houseRules = houseRules;\n        searchFiltersCopy.typeOfPlace = typeOfPlace;\n        searchFiltersCopy.bedrooms = bedrooms;\n        searchFiltersCopy.beds = beds;\n        searchFiltersCopy.bathrooms = bathrooms;\n        searchFiltersCopy.priceRange = { min: priceRange[0], max: priceRange[1] };\n        searchFiltersCopy.optionsForYourStay = optionsForYourStay;\n        setSearchFilters(searchFiltersCopy);\n        togglePopup();\n        updateSearchBySearchFilters(searchFiltersCopy);\n        if (setPage) setPage(1);\n    };\n\n    const classes = {\n        border: `1px solid ${ColorTheme.Grey1.color}`,\n        borderRadius: \"4px\",\n        padding: \"0\",\n        width: \"24px\",\n        height: \"24px\",\n        \"& .MuiSvgIcon-root\": {\n            width: \"24px\",\n            height: \"24px\",\n            \"& path\": {\n                fill: \"none\",\n            },\n        },\n        \"&.Mui-checked\": {\n            border: \"unset\",\n            \"& .MuiSvgIcon-root\": {\n                width: \"32px\",\n                height: \"32px\",\n                \"& path\": {\n                    // transform: \"translate(3px, 3px)\",\n                    fill: \"red\",\n                    // stroke: \"red\",\n                    // strokeWidth: \"6px\",\n                },\n            },\n        },\n    };\n\n    // const displayValue = (value: number) => {\n    //     if (value <= 1000) {\n    //         return Math.round((value / 1000) * 50);\n    //     } else {\n    //         return Math.round(50 + ((value - 1000) / 9000) * 50);\n    //     }\n    // };\n\n    // const reverseDisplayValue = (displayedValue: number) => {\n    //     if (displayedValue <= 50) {\n    //         return Math.round((displayedValue / 50) * 1000);\n    //     } else {\n    //         return Math.round(1000 + ((displayedValue - 50) / 50) * 9000);\n    //     }A\n    // };\n\n    const checkCurrentValue = useCallback(\n        (price: number) => {\n            const pricegap = (max - min) / 60;\n            const index = Math.floor((price - min) / pricegap);\n            return index;\n        },\n        [max, min]\n    );\n\n    const handleChange = useCallback(\n        (event: Event, newValue: number | number[]) => {\n            setPriceRange([(newValue as number[])[0], (newValue as number[])[1]]);\n            const minValue = (newValue as number[])[0];\n            const maxValue = (newValue as number[])[1];\n\n            const minIndex = checkCurrentValue(minValue);\n            const maxIndex = checkCurrentValue(maxValue);\n            setBoolArray((prev) => {\n                return prev.map((item, index) => {\n                    return index < minIndex || index > maxIndex ? true : false;\n                });\n            });\n        },\n        [checkCurrentValue]\n    );\n\n    useEffect(() => {\n        const simulatedEvent = new Event(\"change\");\n        handleChange(simulatedEvent, priceRange);\n        let themeColorMeta = document.querySelector('meta[name=\"theme-color\"]');\n        const originalColor = themeColorMeta?.getAttribute(\"content\");\n        themeColorMeta?.setAttribute(\"content\", ColorTheme.White.color);\n        return () => themeColorMeta?.setAttribute(\"content\", originalColor as string);\n    }, []);\n\n    const generatePriceSteps = () => {\n        const ranges = [];\n        for (let price = min; price <= max && ranges.length <= 60; price += (max - min) / 60) {\n            ranges.push(price);\n        }\n        return ranges;\n    };\n\n    const priceSteps = generatePriceSteps();\n    const isDesktopSize = useIsDesktopSize();\n    const priceDistributionValues = Object.values(priceDistribution || {});\n    const maxHeight = Math.max(...priceDistributionValues);\n    const scalingFactor = maxHeight ? 50 / maxHeight : 1;\n    return (\n        <GlobalPopupContainerCenter\n            ref={wrapperRef}\n            backBtnType={\"Close\"}\n            closePopup={togglePopup}\n            onTouchEnd={isTouchDevice ? togglePopup : undefined}\n            handleSave={saveFilter}\n            cancelPopup={clearFilter}\n            btnText=\"Save\"\n            cancelBtnText=\"Clear\"\n            desktopWidth=\"720px\"\n            height=\"calc(100% - 12px)\"\n            desktopHeight=\"calc(100% - 80px)\"\n            noBackdrop={isDesktopSize ? false : true}\n        >\n            <SearchListingFiltersWrapper>\n                <SearchListingFiltersContent>\n                    <SearchListingFiltersSection style={{ paddingTop: \"12px\" }}>\n                        <SearchListingFiltersSectionTitle style={{ marginBottom: \"24px\" }}>Type of place</SearchListingFiltersSectionTitle>\n                        <SearchListingTypeOfPlaceSection>\n                            {typeOfPlaceData.map((item) => {\n                                return (\n                                    <SearchFiltersTypeOfPlaceButtonWrapper\n                                        key={item.inlineId}\n                                        selected={typeOfPlace.includes(item.inlineId)}\n                                        onClick={\n                                            !isTouchDevice\n                                                ? () => {\n                                                      if (typeOfPlace.includes(item.inlineId)) {\n                                                          setTypeOfPlace(typeOfPlace.filter((e) => e !== item.inlineId));\n                                                      } else {\n                                                          setTypeOfPlace([...typeOfPlace, item.inlineId]);\n                                                      }\n                                                  }\n                                                : undefined\n                                        }\n                                        onTouchEnd={\n                                            isTouchDevice\n                                                ? () => {\n                                                      if (typeOfPlace.includes(item.inlineId)) {\n                                                          setTypeOfPlace(typeOfPlace.filter((e) => e !== item.inlineId));\n                                                      } else {\n                                                          setTypeOfPlace([...typeOfPlace, item.inlineId]);\n                                                      }\n                                                  }\n                                                : undefined\n                                        }\n                                    >\n                                        <SearchFiltersTypeOfPlaceIcon src={item.src} alt={item.alt} />\n\n                                        <SearchFiltersTypeOfPlaceTitleWrapper>\n                                            <SearchFiltersTypeOfPlaceTitle>{item.title}</SearchFiltersTypeOfPlaceTitle>\n                                        </SearchFiltersTypeOfPlaceTitleWrapper>\n                                    </SearchFiltersTypeOfPlaceButtonWrapper>\n                                );\n                            })}\n                        </SearchListingTypeOfPlaceSection>\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection>\n                        <SearchListingFiltersSectionTitle style={{ marginBottom: \"8px\" }}>Price range</SearchListingFiltersSectionTitle>\n                        <SearchListingFiltersSectionSubtitle>Nightly price shown in AUD</SearchListingFiltersSectionSubtitle>\n                        <PriceRangeContentWrapper>\n                            <PriceRangeWrapper>\n                                {priceSteps.map((price, index) => {\n                                    const height = distribution ? distribution[index] || 0 : 0;\n\n                                    const selected = boolArray[index];\n                                    if (!total) return null;\n                                    const adjustedHeight = ((height * scalingFactor) / total) * 100;\n\n                                    return <PriceRangeItem key={index} height={adjustedHeight} selected={selected} />;\n                                })}\n                            </PriceRangeWrapper>\n                            <PriceRangeSliderWrapper className={\"price-range\"}>\n                                <Slider\n                                    sx={{\n                                        \"& .MuiSlider-track\": { color: \"#262626\", background: \"#262626\" },\n                                        \"& .MuiSlider-rail\": { color: \"#737373\", background: \"#737373\" },\n                                        \"& .MuiSlider-rail, & .MuiSlider-track\": { marginTop: \"10px\", height: \"2px\" },\n                                        \"& .MuiSlider-thumb\": {\n                                            width: \"32px\",\n                                            height: \"32px\",\n                                            marginTop: \"10px\",\n                                            background: \"white\",\n                                            boxShadow: \"0px 0.5px 4px 0px rgba(0, 0, 0, 0.12), 0px 6px 13px 0px rgba(0, 0, 0, 0.12)\",\n                                        },\n                                    }}\n                                    id=\"priceRangeSlider\"\n                                    min={min}\n                                    max={max}\n                                    value={priceRange}\n                                    onChange={handleChange}\n                                    valueLabelDisplay=\"off\"\n                                />\n                            </PriceRangeSliderWrapper>\n                        </PriceRangeContentWrapper>\n\n                        <SearchListingFiltersSectionPriceRangeInputWrapper>\n                            <SearchListingFiltersSectionPriceRangeInput>\n                                <SearchListingFiltersSectionPriceRangeTitle>Min</SearchListingFiltersSectionPriceRangeTitle>\n                                <SearchListingFiltersSectionPriceRangeAmountWrapper>\n                                    <SearchListingFiltersSectionPriceRangeAmountLabel>$</SearchListingFiltersSectionPriceRangeAmountLabel>\n                                    <SearchLisingFiltersSectionPriceRangeAmountInput\n                                        id={\"minPriceInput\"}\n                                        value={priceRange[0]}\n                                        type=\"number\"\n                                        onChange={(e) => {\n                                            if (e.target.value === \"\") {\n                                                setPriceRange([0, priceRange[1]]);\n                                            }\n                                            if (e.target.value.startsWith(\"0\")) {\n                                                e.target.value = e.target.value.replace(\"0\", \"\");\n                                                setPriceRange([Number(e.target.value), priceRange[1]]);\n                                            } else {\n                                                setPriceRange([Number(e.target.value), priceRange[1]]);\n                                            }\n                                        }}\n                                    />\n                                </SearchListingFiltersSectionPriceRangeAmountWrapper>\n                            </SearchListingFiltersSectionPriceRangeInput>\n                            <SearchListingFiltersSectionPriceRangeInput>\n                                <SearchListingFiltersSectionPriceRangeTitle>Max</SearchListingFiltersSectionPriceRangeTitle>\n                                <SearchListingFiltersSectionPriceRangeAmountWrapper>\n                                    <SearchListingFiltersSectionPriceRangeAmountLabel>$</SearchListingFiltersSectionPriceRangeAmountLabel>\n                                    <SearchLisingFiltersSectionPriceRangeAmountInput\n                                        id={\"maxPriceInput\"}\n                                        value={priceRange[1]}\n                                        type=\"number\"\n                                        onChange={(e) => {\n                                            if (e.target.value === \"\") {\n                                                setPriceRange([priceRange[0], 0]);\n                                            }\n                                            if (e.target.value.startsWith(\"0\")) {\n                                                e.target.value = e.target.value.replace(\"0\", \"\");\n                                                setPriceRange([priceRange[0], Number(e.target.value)]);\n                                            } else {\n                                                setPriceRange([priceRange[0], Number(e.target.value)]);\n                                            }\n                                        }}\n                                    />\n                                </SearchListingFiltersSectionPriceRangeAmountWrapper>\n                            </SearchListingFiltersSectionPriceRangeInput>\n                        </SearchListingFiltersSectionPriceRangeInputWrapper>\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection>\n                        <SearchListingFiltersSectionTitle>Rooms and spaces</SearchListingFiltersSectionTitle>\n                        <SearchListingGuestInputWrapper>\n                            <SearchListingGuestInputText>Bedrooms</SearchListingGuestInputText>\n                            <SearchListingGuestInput>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (bedrooms > 0) {\n                                                      setBedrooms((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (bedrooms > 0) {\n                                                      setBedrooms((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    -\n                                </SearchListingGuestButton>\n                                <SearchListingGuestInputText>{bedrooms}</SearchListingGuestInputText>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (bedrooms < 10) {\n                                                      setBedrooms((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (bedrooms < 10) {\n                                                      setBedrooms((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    +\n                                </SearchListingGuestButton>\n                            </SearchListingGuestInput>\n                        </SearchListingGuestInputWrapper>\n                        <SearchListingGuestInputWrapper>\n                            <SearchListingGuestInputText>Beds</SearchListingGuestInputText>\n                            <SearchListingGuestInput>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (beds > 0) {\n                                                      setBeds((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (beds > 0) {\n                                                      setBeds((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    -\n                                </SearchListingGuestButton>\n                                <SearchListingGuestInputText>{beds}</SearchListingGuestInputText>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (beds < 10) {\n                                                      setBeds((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (beds < 10) {\n                                                      setBeds((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    +\n                                </SearchListingGuestButton>\n                            </SearchListingGuestInput>\n                        </SearchListingGuestInputWrapper>\n                        <SearchListingGuestInputWrapper style={{ marginBottom: \"0px\" }}>\n                            <SearchListingGuestInputText>Bathrooms</SearchListingGuestInputText>\n                            <SearchListingGuestInput>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (bathrooms > 0) {\n                                                      setBathrooms((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (bathrooms > 0) {\n                                                      setBathrooms((prevState) => prevState - 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    -\n                                </SearchListingGuestButton>\n                                <SearchListingGuestInputText>{bathrooms}</SearchListingGuestInputText>\n                                <SearchListingGuestButton\n                                    type=\"button\"\n                                    onClick={\n                                        !isTouchDevice\n                                            ? () => {\n                                                  if (bathrooms < 10) {\n                                                      setBathrooms((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                    onTouchEnd={\n                                        isTouchDevice\n                                            ? () => {\n                                                  if (bathrooms < 10) {\n                                                      setBathrooms((prevState) => prevState + 1);\n                                                  }\n                                              }\n                                            : undefined\n                                    }\n                                >\n                                    +\n                                </SearchListingGuestButton>\n                            </SearchListingGuestInput>\n                        </SearchListingGuestInputWrapper>\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection>\n                        <SearchListingFiltersSectionTitle>Options for your stay</SearchListingFiltersSectionTitle>\n                        {optionsForYourStayData.map((item, index) => {\n                            return (\n                                <SearchFiltersOptionsForYourStayWrapper key={item.inlineId}>\n                                    <SearchFiltersOptionsForYourStayTitleWrapper>\n                                        <SearchFiltersOptionsForYourStayTitle>{item.title}</SearchFiltersOptionsForYourStayTitle>\n                                        <SearchFiltersOptionsForYourStaySubtitle>{item.description}</SearchFiltersOptionsForYourStaySubtitle>\n                                    </SearchFiltersOptionsForYourStayTitleWrapper>\n                                    <AntSwitch\n                                        id={`antSwitch${index}`}\n                                        checked={optionsForYourStay.includes(item.inlineId)}\n                                        onChange={() => {\n                                            if (optionsForYourStay.includes(item.inlineId)) {\n                                                setOptionsForYourStay(optionsForYourStay.filter((e) => e !== item.inlineId));\n                                            } else {\n                                                setOptionsForYourStay([...optionsForYourStay, item.inlineId]);\n                                            }\n                                        }}\n                                    />\n                                </SearchFiltersOptionsForYourStayWrapper>\n                            );\n                        })}\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection>\n                        <SearchListingFiltersSectionTitleWrapper>\n                            <SearchListingFiltersSectionTitle>Amenities</SearchListingFiltersSectionTitle>\n                        </SearchListingFiltersSectionTitleWrapper>\n                        <SearchListingAmenitiesWrapper moreAmenities={moreAmenities}>\n                            {allAmenitiesTypes.map((item) => {\n                                return (\n                                    <SearchListingAmenitieWrapper key={item}>\n                                        <Checkbox\n                                            sx={classes}\n                                            id={item}\n                                            checked={amenities.includes(item)}\n                                            onChange={() => {\n                                                if (amenities.includes(item)) {\n                                                    setAmenities(amenities.filter((e) => e !== item));\n                                                } else {\n                                                    setAmenities([...amenities, item]);\n                                                }\n                                            }}\n                                        />\n                                        <SearchListingAmenitieText>{item}</SearchListingAmenitieText>\n                                    </SearchListingAmenitieWrapper>\n                                );\n                            })}\n                        </SearchListingAmenitiesWrapper>\n                        <SearchListingFiltersSectionSeeMoreButton onClick={() => setMoreAmenities(!moreAmenities)}>\n                            {moreAmenities ? \"Hide amenities\" : `See ${allAmenitiesTypes.length} amenities`}\n                        </SearchListingFiltersSectionSeeMoreButton>\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection>\n                        <SearchListingFiltersSectionTitleWrapper>\n                            <SearchListingFiltersSectionTitle>Property type</SearchListingFiltersSectionTitle>\n                        </SearchListingFiltersSectionTitleWrapper>\n                        <SearchListingPropertyTypeWrapper morePropertyType={morePropertyType}>\n                            {allPropertyTypes.map((item) => {\n                                return (\n                                    <SearchListingAmenitieWrapper key={item.value}>\n                                        <Checkbox\n                                            sx={classes}\n                                            id={item.value}\n                                            checked={propertyType.includes(item.value)}\n                                            onChange={(e) => {\n                                                if (propertyType.includes(item.value)) {\n                                                    setPropertyType(propertyType.filter((e) => e !== item.value));\n                                                } else {\n                                                    setPropertyType([...propertyType, item.value]);\n                                                }\n                                            }}\n                                        />\n                                        <SearchListingAmenitieText>{item.label}</SearchListingAmenitieText>\n                                    </SearchListingAmenitieWrapper>\n                                );\n                            })}\n                        </SearchListingPropertyTypeWrapper>\n                        <SearchListingFiltersSectionSeeMoreButton onClick={() => setMorePropertyType(!morePropertyType)}>\n                            {morePropertyType ? \"Hide property types\" : `See ${allPropertyTypes.length} property types`}\n                        </SearchListingFiltersSectionSeeMoreButton>\n                    </SearchListingFiltersSection>\n\n                    <SearchListingFiltersSection style={{ borderBottom: \"0\" }}>\n                        <SearchListingFiltersSectionTitleWrapper>\n                            <SearchListingFiltersSectionTitle>Special requests</SearchListingFiltersSectionTitle>\n                        </SearchListingFiltersSectionTitleWrapper>\n                        <SearchListingHouseRulesWrapper>\n                            {allHouseRulesTypes.map((item) => {\n                                return (\n                                    <SearchListingAmenitieWrapper key={item}>\n                                        <Checkbox\n                                            sx={classes}\n                                            id={item}\n                                            checked={houseRules.includes(item)}\n                                            onChange={() => {\n                                                if (houseRules.includes(item)) {\n                                                    setHouseRules(houseRules.filter((e) => e !== item));\n                                                } else {\n                                                    setHouseRules([...houseRules, item]);\n                                                }\n                                            }}\n                                        />\n                                        <SearchListingAmenitieText>{item}</SearchListingAmenitieText>\n                                    </SearchListingAmenitieWrapper>\n                                );\n                            })}\n                        </SearchListingHouseRulesWrapper>\n                    </SearchListingFiltersSection>\n                </SearchListingFiltersContent>\n            </SearchListingFiltersWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\nconst AntSwitch = styled(Switch)(({ theme }) => ({\n    width: 52,\n    height: 32,\n    padding: 0,\n    display: \"flex\",\n    marginLeft: \"auto\",\n    \"& .MuiSwitch-switchBase\": {\n        padding: 4,\n        color: theme.palette.common.white,\n        \"&.Mui-checked\": {\n            color: theme.palette.common.white,\n            transform: \"translateX(20px)\",\n            \"& + .MuiSwitch-track\": {\n                opacity: 1,\n                backgroundColor: ColorTheme.Red.color,\n                borderColor: ColorTheme.Red.color,\n            },\n        },\n    },\n    \"& .MuiSwitch-thumb\": {\n        width: 24,\n        height: 24,\n        boxShadow: \"0px 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 3px 8px 0px rgba(0, 0, 0, 0.15), 0px 3px 1px 0px rgba(0, 0, 0, 0.06)\",\n        color: ColorTheme.White.color,\n    },\n    \"& .MuiSwitch-track\": {\n        opacity: 1,\n        backgroundColor: ColorTheme.Grey3.color,\n        borderColor: ColorTheme.Grey3.color,\n        borderRadius: 32,\n    },\n}));\n\nexport default SearchListingFilters;\n","import { selector, DefaultValue } from \"recoil\";\nimport { identityIdState } from \"../atoms/identityId\";\n\nexport const identityIdSelector = selector<string>({\n    key: \"identityIdSelector\",\n    get: ({ get }) => get(identityIdState),\n    set: ({ set }, newValue: string | DefaultValue) => {\n        if (!(newValue instanceof DefaultValue)) {\n            return set(identityIdState, newValue);\n        }\n    },\n});\n","export const defaultSearchFilter = {\n    category: \"all\",\n    typeOfPlace: [],\n    propertyType: [],\n    optionsForYourStay: [],\n    priceRange: {\n        min: 0,\n        max: 1000,\n    },\n    guests: 0,\n    adults: 0,\n    children: 0,\n    infants: 0,\n    pets: 0,\n    bedrooms: 0,\n    beds: 0,\n    bathrooms: 0,\n    amenities: [],\n    services: [],\n    houseRules: [],\n};\n\nexport const defaultSearchQuery = {\n    lat: null,\n    lng: null,\n    title: null,\n    startDate: null,\n    endDate: null,\n    searchFilters: {\n        category: \"all\",\n        typeOfPlace: [],\n        propertyType: [],\n        optionsForYourStay: [],\n        priceRange: {\n            min: 0,\n            max: 1000,\n        },\n        guests: 0,\n        adults: 0,\n        children: 0,\n        infants: 0,\n        pets: 0,\n        bedrooms: 0,\n        bathrooms: 0,\n        beds: 0,\n        amenities: [],\n        services: [],\n        houseRules: [],\n    },\n    placeId: \"ChIJ38WHZwf9KysRUhNblaFnglM\",\n    // placeId: null\n};\n","import { callApi } from \"../api/api\";\nimport { userModelState } from \"../../state/atoms/userModel\";\nimport { setRecoil } from \"recoil-nexus\";\nimport Analytics from \"analytics\";\nimport segmentPlugin from \"@analytics/segment\";\n\ninterface UserModel {\n    id: string;\n    firstName: string;\n    email: string;\n    savedListings: string[];\n}\n\nconst analytics = Analytics({\n    app: \"Anystay\",\n    plugins: [\n        segmentPlugin({\n            writeKey: process.env.REACT_APP_SEGMENT_WRITE_KEY,\n        }),\n    ],\n});\n\nexport const toggleSaved = async (listingId: string, userModel: UserModel, accessToken: string) => {\n    try {\n        let addedOrRemoved = \"\";\n        if (!userModel) {\n            throw new Error(\"user model not defined.\");\n        }\n        const savedListings = userModel.savedListings || [];\n        let newListingIDs = [];\n        if (savedListings.includes(listingId)) {\n            addedOrRemoved = \"removed\";\n            newListingIDs = savedListings.filter((e) => e !== listingId);\n        } else {\n            addedOrRemoved = \"added\";\n            newListingIDs = [...savedListings, listingId];\n        }\n\n        await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, `user/saved`, {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                listingId: listingId,\n            },\n        });\n        \n\n        let userModelCopy = JSON.parse(JSON.stringify(userModel));\n        userModelCopy.savedListings = newListingIDs;\n        setRecoil(userModelState, userModelCopy);\n        analytics.track('SavedListing', {\n            userId: userModel.id,\n            addedOrRemoved: addedOrRemoved,\n            listingId: listingId\n        })\n    } catch (err) {\n        console.log(err);\n    }\n};\n"],"names":["CategoryBarWrapper","styled","div","ColorTheme","White","color","Grey2","CategoryBarItemsWrapper","Swiper","BorderRadiusTheme","radius_8","borderRadius","Black","CategoryBarDivider","CategoryItemSwiperSlide","SwiperSlide","CategoryItemWrapper","button","props","selected","css","CategoryItemIcon","img","CategoryItemText","p","TextTheme","sans_200_semi","fontSize","lineHeight","fontWeight","Grey","_ref","label","imgSrc","onClick","onTouchEnd","_jsxs","children","_jsx","src","alt","FilterBtnWrapper","Grey5","FilterBtnIcon","FilterBtnText","FilterSelectedNumberBubble","Red","updateFilter","distribution","isTouchDevice","filterActive","setFilterActive","useState","searchFilters","setSearchFilters","useRecoilState","searchFiltersSelector","filterSelectedNumber","setFilterSelectedNumber","useEffect","calculateNumberOfFilterSelected","min","max","_Fragment","SearchListingFilters","togglePopup","updateSearchBySearchFilters","categoryData","inlineId","searchListingContainerRef","setPage","categoryBarRef","useRef","scrollDirection","isHitBottom","useScrollDirection","window","categoryChangedRef","current","priceRange","_categoryBarRef$curre","preventVerticalScroll","e","preventDefault","stopPropagation","swiperWrapper","swiper","el","addEventListener","passive","removeEventListener","ref","className","modules","Navigation","Mousewheel","FreeMode","navigation","mousewheel","freeMode","pagination","clickable","loop","initialSlide","slidesPerView","map","item","CategoryItem","category","undefined","_searchListingContain","searchFiltersCopy","JSON","parse","stringify","scrollTo","_searchListingContain2","FilterBtn","prevScrollTopRef","Window","scrollY","scrollTop","setScrollDirection","handleScroll","useCallback","windowScrollTop","innerHeight","document","scrollingElement","scrollHeight","HTMLElement","currentScrollTop","clientHeight","element","typeOfPlaceData","title","allAmenitiesTypes","allPropertyTypes","value","allHouseRulesTypes","optionsForYourStayData","description","AntSwitch","Switch","_ref3","theme","width","height","padding","display","marginLeft","palette","common","white","transform","opacity","backgroundColor","borderColor","boxShadow","Grey3","wrapperRef","useClickOutside","typeOfPlace","setTypeOfPlace","propertyType","setPropertyType","amenities","setAmenities","houseRules","setHouseRules","setPriceRange","bedrooms","setBedrooms","beds","setBeds","bathrooms","setBathrooms","optionsForYourStay","setOptionsForYourStay","moreAmenities","setMoreAmenities","morePropertyType","setMorePropertyType","boolArray","setBoolArray","Array","fill","priceDistribution","Object","fromEntries","entries","filter","_ref2","key","isNaN","Number","total","useIsTouchDevice","classes","border","Grey1","checkCurrentValue","price","pricegap","Math","floor","handleChange","event","newValue","minValue","maxValue","minIndex","maxIndex","prev","index","simulatedEvent","Event","themeColorMeta","querySelector","originalColor","getAttribute","setAttribute","priceSteps","generatePriceSteps","ranges","length","push","isDesktopSize","useIsDesktopSize","priceDistributionValues","values","maxHeight","scalingFactor","GlobalPopupContainerCenter","backBtnType","closePopup","handleSave","saveFilter","cancelPopup","clearFilter","btnText","cancelBtnText","desktopWidth","desktopHeight","noBackdrop","SearchListingFiltersWrapper","SearchListingFiltersContent","SearchListingFiltersSection","style","paddingTop","SearchListingFiltersSectionTitle","marginBottom","SearchListingTypeOfPlaceSection","SearchFiltersTypeOfPlaceButtonWrapper","includes","SearchFiltersTypeOfPlaceIcon","SearchFiltersTypeOfPlaceTitleWrapper","SearchFiltersTypeOfPlaceTitle","SearchListingFiltersSectionSubtitle","PriceRangeContentWrapper","PriceRangeWrapper","adjustedHeight","PriceRangeItem","PriceRangeSliderWrapper","Slider","sx","background","marginTop","id","onChange","valueLabelDisplay","SearchListingFiltersSectionPriceRangeInputWrapper","SearchListingFiltersSectionPriceRangeInput","SearchListingFiltersSectionPriceRangeTitle","SearchListingFiltersSectionPriceRangeAmountWrapper","SearchListingFiltersSectionPriceRangeAmountLabel","SearchLisingFiltersSectionPriceRangeAmountInput","type","target","startsWith","replace","SearchListingGuestInputWrapper","SearchListingGuestInputText","SearchListingGuestInput","SearchListingGuestButton","prevState","SearchFiltersOptionsForYourStayWrapper","SearchFiltersOptionsForYourStayTitleWrapper","SearchFiltersOptionsForYourStayTitle","SearchFiltersOptionsForYourStaySubtitle","checked","SearchListingFiltersSectionTitleWrapper","SearchListingAmenitiesWrapper","SearchListingAmenitieWrapper","Checkbox","SearchListingAmenitieText","SearchListingFiltersSectionSeeMoreButton","SearchListingPropertyTypeWrapper","borderBottom","SearchListingHouseRulesWrapper","identityIdSelector","selector","get","identityIdState","set","DefaultValue","defaultSearchFilter","guests","adults","infants","pets","services","defaultSearchQuery","lat","lng","startDate","endDate","placeId","analytics","Analytics","app","plugins","segmentPlugin","writeKey","process","toggleSaved","async","listingId","userModel","accessToken","addedOrRemoved","Error","savedListings","newListingIDs","callApi","headers","Authorization","body","userModelCopy","setRecoil","userModelState","track","userId","err","console","log"],"mappings":"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","debug_id":"ad8c76f0-e616-5942-a5ff-2a36a9c8554c"}