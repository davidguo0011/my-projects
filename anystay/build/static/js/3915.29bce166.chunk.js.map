{"version":3,"file":"static/js/3915.29bce166.chunk.js","sources":["components/spinner/inlineTextLoading/InlineTextLoadingStyling.ts","components/spinner/inlineTextLoading/InlineTextLoading.tsx","pages/paymentSettings/paymentSettingsStyling.ts","pages/payoutSettings/payoutSettingsStyling.ts","pages/payoutSettings/popups/ServiceFeePopup.tsx","pages/payoutSettings/popups/IdVerification.tsx","pages/payoutSettings/popups/AddBankAccountFailed.tsx","pages/payoutSettings/popups/AddBankAccount.tsx","pages/payoutSettings/popups/AddTaxNumber.tsx","pages/payoutSettings/popups/AddPayoutAddressManual.tsx","pages/payoutSettings/popups/AddPayoutAddress.tsx","pages/payoutSettings/popups/BankAccountAdded.tsx","pages/payoutSettings/payoutSettings.tsx","state/selectors/stripeAccount.ts"],"sourceRoot":"","sourcesContent":["import styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\nimport { ColorTheme } from \"../../globaStyledComponents/globalStyledComponentsStyling\";\n\nconst flash = () => keyframes`\n    0% {\n      background-color: ${ColorTheme.White.color};\n      box-shadow: 22px 0 ${ColorTheme.White.color}, -22px 0 ${ColorTheme.Grey1.color};\n    }\n    50% {\n      background-color: ${ColorTheme.Grey1.color};\n      box-shadow: 22px 0 ${ColorTheme.White.color}, -22px 0 ${ColorTheme.White.color};\n    }\n    100% {\n      background-color: ${ColorTheme.White.color};\n      box-shadow: 22px 0 ${ColorTheme.Grey1.color}, -22px 0 ${ColorTheme.White.color};\n    }\n`;\n\nexport const InlineLoadingSpinnerComponent = styled.span`\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${ColorTheme.Grey1.color};\n    box-shadow:\n        22px 0 ${ColorTheme.Grey1.color},\n        -22px 0 ${ColorTheme.Grey1.color};\n    position: relative;\n    animation: ${flash()} 0.5s ease-out infinite alternate;\n`;\n","import { InlineLoadingSpinnerComponent } from \"./InlineTextLoadingStyling\";\n\nfunction InlineTextLoading(props: any) {\n    return <InlineLoadingSpinnerComponent {...props}></InlineLoadingSpinnerComponent>;\n}\n\nexport default InlineTextLoading;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { TextTheme, TallTextTheme, ButtonTheme, ColorTheme, BorderRadiusTheme, SpacingTheme } from \"../../components/globaStyledComponents/globalStyledComponentsStyling\";\n\nexport const PaymentSettingsWrapper = styled.div`\n    max-width: 1024px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 0 24px;\n    display: flex;\n    flex-direction: column;\n    /* overflow-y: auto; */\n    padding-bottom: 128px;\n\n    @media (min-width: 768px) {\n        padding: 0;\n        padding-top: 80px;\n        width: calc(100% - 64px);\n        ::-webkit-scrollbar {\n            display: none;\n        }\n    }\n`;\n\nexport const PaymentSettingsDesktopWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`;\n\nexport const PaymentSettingsDesktopMenu = styled.div`\n    height: fit-content;\n    width: 363px;\n    margin-left: 80px;\n    margin-top: 40px;\n    border-radius: ${BorderRadiusTheme.radius_12.borderRadius};\n    display: flex;\n    flex-direction: column;\n    padding: ${SpacingTheme.spacing_400.padding};\n    border: 1px solid ${ColorTheme.Grey2.color};\n\n    @media (max-width: 1013px) {\n        display: none;\n    }\n`;\n\nexport const PaymentSettingsTitleWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 48px;\n    padding-top: 64px;\n\n    @media (min-width: 768px) {\n        position: relative;\n        border: none;\n        padding-top: 48px;\n        justify-content: flex-start;\n    }\n`;\n\nexport const PaymentSettingsTitle = styled.p`\n    font-size: ${TextTheme.sans_900_semi.fontSize};\n    font-weight: ${TextTheme.sans_900_semi.fontWeight};\n\n    line-height: ${TextTheme.sans_900_semi.lineHeight};\n    justify-self: center;\n    margin: 0;\n\n    @media (min-width: 768px) {\n        font-size: ${TextTheme.sans_1000_bold.fontSize};\n        line-height: ${TextTheme.sans_1000_bold.lineHeight};\n        justify-self: flex-start;\n        padding-left: 24px;\n    }\n`;\n\nexport const PaymentSettingsContentWrapper = styled.div`\n    display: flex;\n`;\n\nexport const PaymentSettingsMenuWrapper = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-rows: 100%;\n    grid-template-columns: auto auto 1fr;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n    gap: ${SpacingTheme.spacing_400.gap};\n    height: 40px;\n`;\n\ninterface PaymentSettingsMenuItemProps {\n    selected: boolean;\n}\nexport const PaymentSettingsMenuItem = styled.button<PaymentSettingsMenuItemProps>`\n    font-size: ${ButtonTheme.sans_button_200.fontSize};\n    line-height: ${ButtonTheme.sans_button_200.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_200.fontWeight};\n    color: ${(props) => (props.selected ? ColorTheme.Black.color : ColorTheme.Grey.color)};\n    padding-bottom: 16px !important;\n    margin: 0;\n    background: none;\n    border: none;\n    border-bottom: ${(props) => (props.selected ? \"2px solid black\" : \"2px solid transparent\")};\n    padding: 0;\n    cursor: pointer;\n`;\n\nexport const RecentTransactionsWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n    margin-top: 48px;\n    margin-bottom: 0px;\n\n    //Temporarily hidden\n    display: none;\n`;\n\nexport const RecentTransactionsTitle = styled.div`\n    font-size: ${TextTheme.sans_600_bold.fontSize};\n    font-weight: ${TextTheme.sans_600_bold.fontWeight};\n    margin: 0;\n    line-height: ${TextTheme.sans_600_bold.lineHeight};\n\n    margin-bottom: 16px;\n`;\n\nexport const InfinitScrollLoadingSpinner = styled.div`\n    width: 100%;\n    height: 100px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const RecentTransactionsContent = styled.div`\n    margin-top: 48px;\n    display: flex;\n    flex-direction: column;\n`;\nexport const RecentTransactionsContentWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const RecentTransactionEmptyTitle = styled.p`\n    font-size: ${TextTheme.sans_700_semi.fontSize};\n    line-height: ${TextTheme.sans_700_semi.lineHeight};\n    font-weight: ${TextTheme.sans_700_semi.fontWeight};\n    color: ${ColorTheme.Grey1.color};\n    margin: 0;\n    margin-bottom: 12px;\n`;\n\nexport const RecentTransactionEmptySubtitle = styled.p`\n    font-size: ${TextTheme.sans_500.fontSize};\n    line-height: ${TextTheme.sans_500.lineHeight};\n    font-weight: ${TextTheme.sans_500.fontWeight};\n    color: ${ColorTheme.Grey1.color};\n    margin: 0;\n    margin-bottom: 90px;\n    width: 180px;\n`;\n\nexport const PaymentSettingsDesktopMenuIcon = styled.img`\n    width: 32px;\n    height: 32px;\n    object-fit: cover;\n`;\n\nexport const PaymentSettingsDesktopMenuText = styled.p`\n    font-size: ${TallTextTheme.sans_text_300.fontSize};\n    font-weight: ${TallTextTheme.sans_text_300.fontWeight};\n    line-height: ${TallTextTheme.sans_text_300.lineHeight};\n\n    margin-top: 24px;\n    margin-bottom: 0;\n`;\n\nexport const PayoutPaymentLink = styled(Link)`\n    text-decoration: none;\n    cursor: pointer;\n`;\n\nexport const PaymentsMenuItemButtonIcon = styled.img`\n    width: 8px;\n    height: 12px;\n    object-fit: cover;\n`;\n\nexport const PaymentsIconButton = styled.div`\n    padding: 0;\n    border: none;\n    background: none;\n    margin-left: auto;\n    cursor: pointer;\n`;\n\nexport const PaymentSettingsUnavailableTitle = styled.p`\n    font-size: ${TextTheme.sans_600_bold.fontSize};\n    font-weight: ${TextTheme.sans_600_bold.fontWeight};\n    line-height: ${TextTheme.sans_600_bold.lineHeight};\n\n    margin: 0 auto;\n    margin-top: 48px;\n    margin-bottom: 16px;\n`;\n\nexport const PaymentSettingsUnavailableSubtitle = styled.p`\n    max-width: 210px;\n    font-size: ${TextTheme.sans_300.fontSize};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    line-height: ${TextTheme.sans_300.lineHeight};\n\n    margin: 0 auto;\n    text-align: center;\n`;\n\nexport const PaymentSettingsUnavailableIcon = styled.img`\n    width: 64px;\n    height: 64px;\n    object-fit: cover;\n    text-align: center;\n    margin: 0 auto;\n    margin-top: auto;\n`;\n\nexport const PaymentSettingsUnavailableBackButton = styled.button`\n    background: none;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    margin: ${SpacingTheme.spacing_400.margin};\n    margin-right: auto;\n`;\n\nexport const PaymentSettingsUnavailableBackIcon = styled.img`\n    height: 16px;\n    object-fit: cover;\n`;\n","import styled from \"styled-components\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport { Link } from \"react-router-dom\";\nimport { ReactGoogleAutocompleteProps } from \"react-google-autocomplete\";\nimport { TextTheme, TallTextTheme, ButtonTheme, ColorTheme, ShadowTheme, BorderRadiusTheme, SpacingTheme } from \"../../components/globaStyledComponents/globalStyledComponentsStyling\";\n\ninterface ExtendedAutocompleteProps extends ReactGoogleAutocompleteProps {\n    value?: string;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    style?: React.CSSProperties;\n    placeholder?: string;\n}\n\nexport const PaymentSettingsContentWrapper = styled.div`\n    display: flex;\n`;\n\nexport const PaymentSettingsDesktopWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`;\n\nexport const PaymentSettingsDesktopMenu = styled.div`\n    height: fit-content;\n    width: 363px;\n    margin-left: 80px;\n    margin-top: 40px;\n    border-radius: ${BorderRadiusTheme.radius_12.borderRadius};\n    display: flex;\n    flex-direction: column;\n    padding: ${SpacingTheme.spacing_400.padding};\n    border: 1px solid ${ColorTheme.Grey2.color};\n\n    @media (max-width: 1024px) {\n        display: none;\n    }\n`;\n\nexport const PayoutSettingsTitleLink = styled(Link)`\n    padding: 0;\n    border: none;\n    background: none;\n    cursor: pointer;\n`;\n\nexport const PaymentSettingsDesktopMenuText = styled.p`\n    font-size: ${TallTextTheme.sans_text_300.fontSize};\n    font-weight: ${TallTextTheme.sans_text_300.fontWeight};\n    line-height: ${TallTextTheme.sans_text_300.lineHeight};\n\n    margin-top: 24px;\n    margin-bottom: 0;\n`;\n\nexport const PaymentSettingsTitleIcon = styled.img`\n    /* position: relative; */\n    width: 9px;\n    height: 16px;\n    margin: 0;\n    padding: 0;\n    justify-self: flex-start;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    object-fit: cover;\n`;\n\nexport const PaymentSettingsMenuWrapper = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-rows: 100%;\n    grid-template-columns: auto auto 1fr;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n    gap: ${SpacingTheme.spacing_400.gap};\n    height: 40px;\n`;\n\ninterface PaymentSettingsMenuItemProps {\n    selected: boolean;\n}\n\nexport const PaymentSettingsMenuItem = styled.button<PaymentSettingsMenuItemProps>`\n    font-size: ${ButtonTheme.sans_button_200.fontSize};\n    line-height: ${ButtonTheme.sans_button_200.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_200.fontWeight};\n    color: ${(props) => (props.selected ? ColorTheme.Black.color : ColorTheme.Grey.color)};\n    border: none;\n    border-bottom: ${(props) => (props.selected ? \"2px solid black\" : \"2px solid transparent\")};\n    padding-bottom: 16px !important;\n    margin: 0;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n`;\n\nexport const PaymentSettingsMenuItemSelected = styled.div<PaymentSettingsMenuItemProps>`\n    width: 100%;\n    height: 3px;\n    background: ${ColorTheme.Black.color};\n    align-self: flex-end;\n    transition: 0.3s;\n    grid-column: ${(props) => (props.selected ? \"1/2\" : \"2/3\")};\n    grid-row: 1/2;\n`;\n\nexport const PaymentMethodsWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 48px;\n`;\n\nexport const PaymentMethodsTitle = styled.p`\n    font-size: ${TextTheme.sans_700_semi.fontSize};\n    line-height: ${TextTheme.sans_700_semi.lineHeight};\n    font-weight: ${TextTheme.sans_700_semi.fontWeight};\n    margin: 0;\n\n    margin-bottom: 8px;\n`;\n\nexport const PaymentMethodsSubtitle = styled.p`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    margin: 0;\n    color: ${ColorTheme.Grey.color};\n    margin-bottom: 32px;\n\n    span {\n        font-weight: ${TextTheme.sans_200_semi.fontWeight};\n    }\n\n    @media (min-width: 768px) {\n        margin-bottom: 32px;\n        br {\n            display: none;\n        }\n    }\n`;\n\nexport const PaymentMethodsTitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nexport const PaymentMethod = styled.div`\n    display: flex;\n    width: 100%;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n    padding: ${SpacingTheme.spacing_400.padding} 0px ${SpacingTheme.spacing_250.padding};\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const PaymentMethodText = styled.p`\n    margin: 0;\n    font-size: ${TextTheme.sans_400_semi.fontSize};\n\n    line-height: ${TextTheme.sans_400_semi.lineHeight};\n    font-weight: ${TextTheme.sans_400_semi.fontWeight};\n`;\n\nexport const PaymentMethodButtonWrapper = styled.div`\n    width: 128px;\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`;\n\nexport const PaymentMethodButton = styled.button<PaymentSettingsMenuItemProps>`\n    text-decoration: underline;\n    background: none;\n    padding: 0;\n    font-size: ${ButtonTheme.sans_button_100.fontSize};\n    line-height: ${ButtonTheme.sans_button_100.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_100.fontWeight};\n    margin: 0;\n    color: ${(props) => (props.selected ? ColorTheme.Black.color : ColorTheme.Grey1.color)};\n    border: none;\n    cursor: pointer;\n`;\n\nexport const AddPaymentMethodButtonDesktop = styled.button`\n    width: 195px;\n    height: 48px;\n    border-radius: 9px;\n    margin-top: 24px;\n    margin-bottom: 16px;\n    background: ${ColorTheme.Black.color};\n    font-size: ${ButtonTheme.sans_button_200.fontSize};\n    line-height: ${ButtonTheme.sans_button_200.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_200.fontWeight};\n    color: ${ColorTheme.White.color};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    border: none;\n    padding: 0;\n\n    @media (max-width: 767px) {\n        display: none;\n    }\n`;\n\nexport const AddPaymentMethodButtonWrapper = styled.div`\n    width: 100%;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    background: ${ColorTheme.White.color};\n    position: fixed;\n    z-index: 9;\n    flex-direction: column;\n    bottom: 0;\n    left: 0;\n\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\n\nexport const AddPaymentMethodButton = styled.button`\n    width: calc(100% - 48px);\n    height: 48px;\n    border-radius: 9px;\n    margin-top: 16px;\n    background: ${ColorTheme.Black.color};\n    font-size: ${ButtonTheme.sans_button_200.fontSize};\n    line-height: ${ButtonTheme.sans_button_200.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_200.fontWeight};\n    color: ${ColorTheme.White.color};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\n\nexport const PaymentSettingsDesktopMenuIcon = styled.img`\n    width: 32px;\n    height: 32px;\n    object-fit: cover;\n`;\n\nexport const RecentTransactionsWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n`;\n\nexport const RecentTransactionsTitle = styled.div`\n    font-size: ${TextTheme.sans_600_bold.fontSize};\n    font-weight: ${TextTheme.sans_600_bold.fontWeight};\n    margin: 0;\n    line-height: ${TextTheme.sans_600_bold.lineHeight};\n\n    margin-bottom: 32px;\n`;\n\ninterface AddCardElementWrapperProps {\n    addCard: boolean;\n}\n\nexport const AddCardElementWrapper = styled.div<AddCardElementWrapperProps>`\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    z-index: 5;\n    min-height: 50vh;\n    background: ${ColorTheme.White.color};\n    border-radius: 14px 14px 0 0;\n    box-shadow: ${ShadowTheme.shadow_300.boxShadow};\n    display: flex;\n    flex-direction: column;\n    transform: translateY(${(props) => (props.addCard ? \"0\" : \"100vh\")});\n    transition: 0.3s;\n`;\n\nexport const AddCardElementTitleWrapper = styled.div`\n    width: calc(100% - 48px);\n    display: flex;\n    margin: ${SpacingTheme.spacing_400.margin};\n    padding-bottom: 24px;\n    // flex-direction: column;\n    gap: ${SpacingTheme.spacing_300.gap};\n    text-align: center;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n`;\n\nexport const AddCardElementTitle = styled.p`\n    font-size: ${TextTheme.sans_400_semi.fontSize};\n\n    line-height: ${TextTheme.sans_400_semi.lineHeight};\n    font-weight: ${TextTheme.sans_400_semi.fontWeight};\n    margin: 0;\n    margin-bottom: 4px;\n`;\n\nexport const AddCardElementSubtitle = styled.p`\n    font-size: ${TextTheme.sans_400.fontSize};\n    line-height: ${TextTheme.sans_400.lineHeight};\n    font-weight: ${TextTheme.sans_400.fontWeight};\n    margin: 0;\n\n    a {\n        font-weight: ${TextTheme.sans_300_semi.fontWeight};\n    }\n`;\n\nexport const AddCardElementCardWrapper = styled.form`\n    height: calc(70vh - 120px);\n    width: calc(100% - 48px);\n    margin: 0 24px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nexport const AddCardElementCardMenuButton = styled.button<PaymentSettingsMenuItemProps>`\n    height: 100px;\n    width: calc(50% - 8px);\n    border-radius: 9px;\n    border: ${(props) => (props.selected ? `1px solid ${ColorTheme.Blue.color}` : `1px solid ${ColorTheme.Grey1.color}`)};\n    outline: ${(props) => (props.selected ? `1px solid ${ColorTheme.Blue.color}` : null)};\n    padding: ${SpacingTheme.spacing_250.padding} ${SpacingTheme.spacing_300.padding};\n    display: flex;\n    flex-direction: column;\n    background: none;\n    text-align: left;\n    cursor: pointer;\n`;\n\nexport const AddCardElementCardMenuTitle = styled.p`\n    font-size: ${TextTheme.sans_300_semi.fontSize};\n    font-weight: ${TextTheme.sans_300_semi.fontWeight};\n    line-height: ${TextTheme.sans_300_semi.lineHeight};\n\n    margin: 0;\n`;\n\nexport const AddCardElementCardMenuSubtitle = styled.p`\n    font-size: ${TextTheme.sans_200.fontSize};\n    font-weight: ${TextTheme.sans_200.fontWeight};\n    line-height: ${TextTheme.sans_200.lineHeight};\n\n    margin: 0;\n    margin-top: 8px;\n`;\n\nexport const PayoutSettingsDetails = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const PayoutSettingsHoverWrapper = styled.div`\n    width: calc(100% + 24px);\n    margin-left: -12px;\n    border-radius: 10px;\n    padding: ${SpacingTheme.spacing_250.padding};\n    &:hover {\n        background-color: ${ColorTheme.Grey5.color};\n    }\n`;\n\nexport const PayoutSettingsInputWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid ${ColorTheme.Grey2.color};\n    padding-bottom: 12px;\n    cursor: pointer;\n`;\n\nexport const PayoutSettingsInputTitleWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n`;\n\nexport const PayoutSettingsInputTitle = styled.p`\n    font-size: ${TextTheme.sans_400_semi.fontSize};\n    font-weight: ${TextTheme.sans_400_semi.fontWeight};\n\n    line-height: ${TextTheme.sans_400_semi.lineHeight};\n    margin: 0;\n`;\n\nexport const PayoutSettingsInputButton = styled.button`\n    background: none;\n    border: none;\n    font-size: ${ButtonTheme.sans_button_100.fontSize};\n    line-height: ${ButtonTheme.sans_button_100.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_100.fontWeight};\n\n    padding: 0;\n    margin: 0;\n    text-decoration: underline;\n    cursor: pointer;\n`;\n\nexport const PayoutSettingsInputText = styled.p`\n    margin: 0;\n    grid-column: 1/2;\n    grid-row: 1/2;\n    font-size: ${TextTheme.sans_300.fontSize};\n    color: ${ColorTheme.Grey.color};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    margin-top: 16px;\n`;\n\nexport const AddPayoutAddressAutocompleteTitle = styled.p`\n    font-size: ${TextTheme.sans_500_semi.fontSize};\n    line-height: ${TextTheme.sans_500_semi.lineHeight};\n\n    font-weight: ${TextTheme.sans_500_semi.fontWeight};\n    margin-top: 32px;\n    margin-bottom: 12px;\n    text-align: center;\n`;\n\ninterface AddPayoutAddressAutocompleteSubtitleProps {\n    invalid: boolean;\n}\n\nexport const AddPayoutAddressAutocompleteSubtitle = styled.p<AddPayoutAddressAutocompleteSubtitleProps>`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    margin: 0 auto;\n    color: ${(props) => (props.invalid ? ColorTheme.Red1.color : ColorTheme.Black.color)};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    margin-bottom: 32px;\n    max-width: 230px;\n    text-align: center;\n`;\n\nexport const AddPayoutAddressAutocompleteSkip = styled.button`\n    font-size: ${ButtonTheme.sans_button_200.fontSize};\n    line-height: ${ButtonTheme.sans_button_200.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_200.fontWeight};\n    background: none;\n    border: none;\n    text-decoration: underline;\n\n    text-align: left;\n    align-self: flex-start;\n    cursor: pointer;\n`;\n\nexport const AddPayoutAddressWrapper = styled.div`\n    width: 100%;\n    border-radius: 14px 14px 0 0;\n    height: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_300.padding};\n    background: ${ColorTheme.White.color};\n    box-shadow: ${ShadowTheme.shadow_300.boxShadow};\n    min-height: 395px;\n\n    @media (min-width: 768px) {\n        width: 560px;\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport const AddPayoutAddressManualWrapper = styled.div`\n    width: 100%;\n    border-radius: 14px 14px 0 0;\n    height: fit-content;\n    padding: ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_300.padding};\n    padding-bottom: 100px;\n    background: ${ColorTheme.White.color};\n    box-shadow: ${ShadowTheme.shadow_300.boxShadow};\n\n    @media (min-width: 768px) {\n        width: 560px;\n        padding: ${SpacingTheme.spacing_400.padding};\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport const AddPayoutAddressTitle = styled.p`\n    font-size: ${TextTheme.sans_700_semi.fontSize};\n    line-height: ${TextTheme.sans_700_semi.lineHeight};\n    font-weight: ${TextTheme.sans_700_semi.fontWeight};\n    margin: ${SpacingTheme.spacing_500.margin} 0 ${SpacingTheme.spacing_250.margin};\n`;\n\nexport const AddPayoutAddressSubtitle = styled.p`\n    margin: 0;\n\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    max-width: 250px;\n    text-align: center;\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    margin-bottom: 32px;\n`;\n\nexport const AddPayoutAddressInputWrapper = styled.div`\n    padding-bottom: 24px;\n    width: 100%;\n`;\n\nexport const AddPayoutAddressInputWrapperWide = styled.div`\n    display: grid;\n    grid-template-columns: 50% 50%;\n`;\n\nexport const AddPayoutAddressInput = styled.input`\n    height: 54px;\n    width: 100%;\n    border: 1px solid ${ColorTheme.Grey1.color};\n    border-radius: 9px;\n    padding-left: 16px;\n    font-size: ${TextTheme.sans_400.fontSize};\n    font-weight: ${TextTheme.sans_400.fontWeight};\n    line-height: ${TextTheme.sans_400.lineHeight};\n    margin: 0;\n    margin-bottom: 8px;\n    outline: none;\n`;\n\nexport const AddPayoutAddressLabel = styled.label`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    margin: 0;\n    font-weight: ${TextTheme.sans_300.fontWeight};\n`;\n\nexport const AddPayoutAddressDoneButton = styled.button`\n    font-size: ${ButtonTheme.sans_button_100.fontSize};\n    line-height: ${ButtonTheme.sans_button_100.lineHeight};\n    font-weight: ${ButtonTheme.sans_button_100.fontWeight};\n    color: ${ColorTheme.White.color};\n    background: ${ColorTheme.Blue.color};\n    cursor: pointer;\n    border-radius: 9px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    height: 48px;\n    width: 156px;\n    ${(props) => props.disabled && \"opacity: 0.5; cursor: not-allowed;\"};\n\n    @media (min-width: 768px) {\n        width: 120px;\n    }\n`;\n\nexport const AddCardElementLabel = styled.label`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: ${SpacingTheme.spacing_200.gap};\n    font-size: ${TextTheme.sans_200.fontSize};\n    font-weight: ${TextTheme.sans_200.fontWeight};\n\n    line-height: ${TextTheme.sans_200.lineHeight};\n    margin-bottom: 24px;\n\n    & .StripeElement {\n        height: 50px !important;\n    }\n`;\n\nexport const AddCardElementTextInput = styled.input`\n    height: 54px;\n    border-radius: 9px;\n    background: none;\n    border: 1px solid ${ColorTheme.Grey1.color};\n    padding-left: 16px;\n    outline: none;\n`;\n\nexport const AddBankAccountInputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${SpacingTheme.spacing_250.gap};\n    width: 100%;\n`;\n\nexport const AddBankAccountInput = styled.input`\n    height: 54px;\n    width: 100%;\n    border-radius: 9px;\n    border: 1px solid ${ColorTheme.Grey1.color};\n    padding-left: 16px;\n\n    &::placeholder {\n        font-size: ${TextTheme.sans_400.fontSize};\n        font-weight: ${TextTheme.sans_400.fontWeight};\n        color: ${ColorTheme.Grey1.color};\n        line-height: ${TextTheme.sans_400.lineHeight};\n    }\n`;\n\nexport const AddBankAccountLabel = styled.label`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n\n    margin: 0;\n    margin-bottom: 24px;\n`;\n\nexport const AddBankAccountDoubleInputWrapper = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 50% 50%;\n    gap: ${SpacingTheme.spacing_300.gap};\n`;\n\nexport const AddIdentityDocumentWrapper = styled.div`\n    width: 100%;\n    border-radius: 14px 14px 0 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 499px;\n    background: ${ColorTheme.White.color};\n    /* bottom: 0;\n    left: 0;\n    position: fixed;\n    z-index: 102; */\n    box-shadow: ${ShadowTheme.shadow_300.boxShadow};\n    padding: ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_400.padding} ${SpacingTheme.spacing_300.padding};\n\n    @media (min-width: 768px) {\n        min-height: unset !important;\n        height: 600px !important;\n        /* border-radius: 14px; */\n        width: 560px;\n        padding: ${SpacingTheme.spacing_400.padding};\n        /* left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%); */\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport const AddPayoutAddAdressAutocompleteInputWrapper = styled.div`\n    width: 100%;\n    height: 54px;\n    border-radius: 9px;\n    border: 1px solid ${ColorTheme.Grey1.color};\n    outline: none;\n    display: flex;\n    position: relative;\n    margin-bottom: 456px;\n    @media (min-width: 768px) {\n        margin-bottom: 96px;\n    }\n`;\n\nexport const AddPayoutAddAdressAutocompleteInput = styled(Autocomplete)<ExtendedAutocompleteProps>`\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    font-size: ${TextTheme.sans_400.fontSize};\n    font-weight: ${TextTheme.sans_400.fontWeight};\n    color: ${ColorTheme.Grey1.color};\n    line-height: ${TextTheme.sans_400.lineHeight};\n    border-radius: 9px;\n    border: none;\n    outline: none;\n    padding: 0;\n    padding-left: 16px;\n    padding-right: 50px;\n`;\n\nexport const AutocompleteClearButton = styled.button`\n    height: 18px;\n    width: 18px;\n    border-radius: 50%;\n    border: none;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    background: ${ColorTheme.Grey3.color};\n    margin-right: 16px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    right: 0;\n`;\n\nexport const AutocompleteClearButtonIcon = styled.img`\n    height: 10px;\n    width: 10px;\n`;\n\nexport const AddIdentityDocumentTitle = styled.p`\n    font-size: ${TextTheme.sans_500_semi.fontSize};\n    font-weight: ${TextTheme.sans_500_semi.fontWeight};\n    line-height: ${TextTheme.sans_500_semi.lineHeight};\n\n    margin: 0;\n    margin-top: 32px;\n    margin-bottom: 12px;\n`;\n\ninterface AddIdentityDocumentSubtitleProps {\n    invalid: boolean;\n}\n\nexport const AddIdentityDocumentSubtitle = styled.p<AddIdentityDocumentSubtitleProps>`\n    font-size: ${TextTheme.sans_300.fontSize};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    color: ${(props) => (props.invalid ? ColorTheme.Red1.color : ColorTheme.Black.color)};\n    margin: 0;\n    margin-bottom: 32px;\n    max-width: 248px;\n    text-align: center;\n`;\n\ninterface AddIdentityDocumentButtonProps {\n    uploaded: boolean;\n}\n\nexport const AddIdentityDocumentButton = styled.button<AddIdentityDocumentButtonProps>`\n    width: 100%;\n    min-height: ${(props) => (props.uploaded ? \"64px\" : \"100px\")};\n    border-radius: 9px;\n    color: ${ColorTheme.Grey.color};\n    font-size: ${ButtonTheme.sans_button_100.fontSize};\n    line-height: ${ButtonTheme.sans_button_100.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n    margin-bottom: 24px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    justify-content: center;\n    background: none;\n    border: 1px dashed ${ColorTheme.Grey1.color};\n    position: relative;\n\n    @media (min-width: 768px) {\n        width: 100%;\n        height: 128px;\n        font-size: ${ButtonTheme.sans_button_200.fontSize};\n        line-height: ${ButtonTheme.sans_button_200.lineHeight};\n        margin-bottom: 32px;\n    }\n`;\n\nexport const AddIdentityDocumentImageContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: ${SpacingTheme.spacing_300.gap};\n`;\n\nexport const AddIdentityDocumentImageWrapper = styled.div`\n    height: 100px;\n    width: 100%;\n    display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: 100%;\n`;\n\nexport const AddIdentityDocumentImage = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    border-radius: 9px;\n    grid-column: 1/2;\n    grid-row: 1/2;\n`;\n\nexport const AddIdentityDocumentImageDeleteButton = styled.button`\n    grid-column: 1/2;\n    grid-row: 1/2;\n    height: 32px;\n    width: 32px;\n    background: ${ColorTheme.White.color};\n    border-radius: ${BorderRadiusTheme.radius_8.borderRadius};\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    justify-content: center;\n    border: none;\n    margin: auto;\n    margin-top: 16px;\n    margin-right: 16px;\n`;\n\nexport const AddIdentityDocumentImageDeleteButtonIcon = styled.img`\n    height: 16px;\n    width: 16px;\n    object-fit: cover;\n`;\n\nexport const BankAccountAddedWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const BankAccountAddedIcon = styled.img`\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    object-fit: cover;\n    margin: 0 auto;\n    margin-top: 120px;\n`;\n\nexport const BankAccountAddedTitle = styled.p`\n    font-size: ${TextTheme.sans_600_semi.fontSize};\n    line-height: ${TextTheme.sans_600_semi.lineHeight};\n    font-weight: ${TextTheme.sans_600_semi.fontWeight};\n\n    margin: 0 auto;\n    margin-top: 48px;\n    margin-bottom: 16px;\n    text-align: center;\n`;\n\nexport const BankAccountAddedSubtitle = styled.p`\n    font-size: ${TextTheme.sans_300.fontSize};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n\n    line-height: ${TextTheme.sans_300.lineHeight};\n    margin: 0 auto;\n    max-width: 270px;\n    text-align: center;\n    margin-bottom: 148px;\n`;\n\nexport const BankAccountAddedDoneButton = styled.button`\n    width: 100%;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${ColorTheme.White.color};\n    font-size: ${ButtonTheme.sans_button_100.fontSize};\n    line-height: ${ButtonTheme.sans_button_100.lineHeight};\n    cursor: pointer;\n    font-weight: ${ButtonTheme.sans_button_100.fontWeight};\n    border-radius: 9px;\n    border: none;\n    background: ${ColorTheme.Black.color};\n    padding: 0;\n    margin-top: 24px;\n`;\n\nexport const PaymentSettingsServiceFeeWrapper = styled.div<PaymentSettingsMenuItemProps>`\n    width: 100%;\n    border-radius: ${BorderRadiusTheme.radius_12.borderRadius};\n    border: ${(props) => (props.selected ? `1px solid ${ColorTheme.Blue.color}` : `1px solid ${ColorTheme.Grey1.color}`)};\n    padding: ${SpacingTheme.spacing_400.padding};\n    display: flex;\n    flex-direction: column;\n    gap: ${SpacingTheme.spacing_250.gap};\n    margin-bottom: 16px;\n`;\n\nexport const PaymentSettingsServiceFeeTitle = styled.p`\n    font-size: ${TextTheme.sans_300_semi.fontSize};\n    line-height: ${TextTheme.sans_300_semi.lineHeight};\n    font-weight: ${TextTheme.sans_300_semi.fontWeight};\n\n    margin: 0;\n`;\n\nexport const PaymentSettingsServiceFeeSubtitle = styled.p`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n\n    margin: 0;\n\n    strong {\n        font-weight: ${TextTheme.sans_300_semi.fontWeight};\n    }\n`;\n\nexport const PaymentSettingsServiceFeeWarning = styled.p`\n    height: 50px;\n    width: 100%;\n    background: ${ColorTheme.Grey3.color};\n    border-radius: 9px;\n    padding-left: 24px;\n    display: flex;\n    align-items: center;\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    color: ${ColorTheme.Grey.color};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n`;\n\nexport const AddPayoutFailedIcon = styled.img`\n    height: 64px;\n    width: 64px;\n    border-radius: 50%;\n    object-fit: cover;\n    margin: 0 auto;\n    margin-bottom: 48px;\n    margin-top: 124px;\n\n    @media (min-width: 768px) {\n        height: 80px;\n        width: 80px;\n    }\n`;\nexport const AddPayoutFailedTitle = styled.p`\n    font-size: ${TextTheme.sans_800_bold.fontSize};\n    line-height: ${TextTheme.sans_800_bold.lineHeight};\n    font-weight: ${TextTheme.sans_800_bold.fontWeight};\n\n    text-align: center;\n    margin: 0 auto;\n    margin-bottom: 12px;\n\n    @media (min-width: 768px) {\n        margin-right: auto;\n    }\n`;\n\nexport const AddPayoutFailedSubtitle = styled.p`\n    font-size: ${TextTheme.sans_300.fontSize};\n    line-height: ${TextTheme.sans_300.lineHeight};\n    font-weight: ${TextTheme.sans_300.fontWeight};\n\n    text-align: center;\n    margin: 0 auto;\n    max-width: 260px;\n    margin-bottom: 145px;\n\n    @media (min-width: 768px) {\n        font-size: ${TextTheme.sans_400.fontSize};\n        line-height: ${TextTheme.sans_400.lineHeight};\n    }\n`;\n","import { useState } from \"react\";\nimport {\n    AddPayoutAddressTitle,\n    AddPayoutAddressWrapper,\n    PaymentSettingsServiceFeeWrapper,\n    PaymentSettingsServiceFeeTitle,\n    PaymentSettingsServiceFeeSubtitle,\n    PaymentSettingsServiceFeeWarning,\n} from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { ColorTheme } from \"../../../components/globaStyledComponents/globalStyledComponentsStyling\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\ninterface ServiceFeePopupProps {\n    selected: any;\n    standardServiceFee: boolean;\n    toggleServiceFeePopup: () => void;\n}\n\nconst ServiceFeePopup: React.FC<ServiceFeePopupProps> = ({ selected, standardServiceFee, toggleServiceFeePopup }) => {\n    const [standardServiceFeeBoolean, setStandardServiceFeeBoolean] = useState<boolean>(standardServiceFee);\n    const [menuIndex, setMenuIndex] = useState<number>(standardServiceFee ? 1 : 2);\n    const serviceFeePopupRef = useClickOutside(selected, toggleServiceFeePopup);\n    // const updateHostServiceFee = async (standardServiceFee) => {\n    //     await API.post(`${process.env.REACT_APP_ENV}-anystay-user`, \"user/fee/type\", { body: { id: userHostModel.id, _version: userHostModel._version, standardServiceFee: standardServiceFee } })\n    //         .then(res => {\n    //             return true\n    //         })\n    //         .catch(err => {\n    //             console.log(err)\n    //             return false\n    //         })\n    // }\n\n    return (\n        <GlobalPopupContainerCenter ref={serviceFeePopupRef} backBtnType={\"Arrow\"} closePopup={toggleServiceFeePopup} noContinueBtn={true}>\n            <AddPayoutAddressWrapper>\n                <AddPayoutAddressTitle>Service fee</AddPayoutAddressTitle>\n                <PaymentSettingsServiceFeeWrapper\n                    selected={menuIndex === 1}\n                    onClick={() => {\n                        setMenuIndex(1);\n                        setStandardServiceFeeBoolean(true);\n                    }}\n                >\n                    <PaymentSettingsServiceFeeTitle style={{ color: ColorTheme.Blue.color }}>{\"Standard (7.5 - 13.5%)\"}</PaymentSettingsServiceFeeTitle>\n                    <PaymentSettingsServiceFeeSubtitle>\n                        <strong>Your guests won't be charged a service fee.</strong> We deduct a single service fee of 7.5% to 13.5% from your booking's total.\n                    </PaymentSettingsServiceFeeSubtitle>\n                </PaymentSettingsServiceFeeWrapper>\n                {/* <PaymentSettingsServiceFeeWrapper selected={menuIndex === 2} onClick={() => setState({ menuIndex: 2, standardServiceFee: false })}>\n                        <PaymentSettingsServiceFeeTitle>\n                            {\"Guest pays (8.5 - 15%)\"}\n                        </PaymentSettingsServiceFeeTitle>\n                        <PaymentSettingsServiceFeeSubtitle>\n                            <strong>You won't be charge a service fee.</strong> We add a single service fee of 8% - 15% to your guest's total.\n                        </PaymentSettingsServiceFeeSubtitle>\n                    </PaymentSettingsServiceFeeWrapper> */}\n                {menuIndex === 2 && <PaymentSettingsServiceFeeWarning>This may result in fewer bookings!</PaymentSettingsServiceFeeWarning>}\n                {/* <AddPayoutAddressButtonWrapper>\n                        <AddPayoutAddressBackButton type=\"button\" onClick={() => toggleServiceFeePopup()}>Cancel</AddPayoutAddressBackButton>\n                        <AddPayoutAddressDoneButton type=\"button\" onClick={() => {\n                            updateHostServiceFee(standardServiceFee)\n                            toggleServiceFeePopup()\n                        }}>Save</AddPayoutAddressDoneButton>\n                    </AddPayoutAddressButtonWrapper> */}\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default ServiceFeePopup;\n","import { useState, useRef, useCallback } from \"react\";\nimport {\n    AddIdentityDocumentWrapper,\n    AddIdentityDocumentTitle,\n    AddIdentityDocumentSubtitle,\n    AddIdentityDocumentButton,\n    AddIdentityDocumentImageWrapper,\n    AddIdentityDocumentImage,\n    AddIdentityDocumentImageDeleteButton,\n    AddIdentityDocumentImageDeleteButtonIcon,\n    AddIdentityDocumentImageContainer,\n} from \"../payoutSettingsStyling\";\nimport { useDropzone } from \"react-dropzone\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { stripeAccountSelector } from \"../../../state/selectors/stripeAccount\";\nimport { useRecoilState } from \"recoil\";\nimport { callApi } from \"../../../utils/api/api\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\ninterface IdVerificationProps {\n    selected: boolean;\n    IdVerifyFlag: boolean;\n    toggleIdVerifyFlag: () => void;\n    togglePreviousPageFlag: (page: number) => void;\n    toggleIDVerification: () => void;\n    accessToken: string;\n    toggleBankAccountAdded: () => void;\n    previousPageFlag: number;\n    toggleAdressMenu: () => void;\n    toggleAdressMenuManual: () => void;\n    toggleBankAccountMenu: () => void;\n}\n\ninterface IdDocument {\n    id: string;\n    data: string;\n}\n\nconst IdVerification: React.FC<IdVerificationProps> = ({\n    selected,\n    IdVerifyFlag,\n    toggleIdVerifyFlag,\n    togglePreviousPageFlag,\n    toggleIDVerification,\n    accessToken,\n    toggleBankAccountAdded,\n    previousPageFlag,\n    toggleAdressMenu,\n    toggleAdressMenuManual,\n    toggleBankAccountMenu,\n}) => {\n    const [verifying, setVerifying] = useState<boolean>(false);\n    const [verifyFail, setVerifyFail] = useState<boolean>(false);\n    const [idDocuments, setIdDocuments] = useState<Array<IdDocument>>([]);\n    const hiddenFileInput = useRef<HTMLInputElement>(null);\n    const [isContinueBtnLoading, setIsContinueBtnLoading] = useState<boolean>(false);\n    const handleClickOutside = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n            togglePreviousPageFlag(0);\n            toggleIDVerification();\n        } else {\n            toggleIDVerification();\n        }\n    };\n    const addIDRef = useClickOutside(selected, handleClickOutside);\n    const [stripeAccount, setStripeAccount] = useRecoilState(stripeAccountSelector);\n\n    const convertBase64 = (file: File) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n\n    const addIdDocument = useCallback((idDocument: IdDocument) => {\n        setIdDocuments((prevState) => {\n            return [...prevState, idDocument];\n        });\n    }, []);\n    const removeIdDocument = (id: string) => {\n        let documents = idDocuments;\n        documents = documents.filter((e) => e.id !== id);\n        setIdDocuments(documents);\n    };\n\n    const makeid = (length: number) => {\n        var result = \"\";\n        var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        result = \"stripe-payout-verification-\" + result;\n        return result;\n    };\n\n    const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files) {\n            const files = Array.from(e.target.files);\n\n            const filesData = await Promise.all(\n                files.map(async (file) => {\n                    const base64 = await convertBase64(file);\n                    return { id: makeid(10), data: base64 as string };\n                })\n            );\n\n            filesData.forEach((fileData) => addIdDocument(fileData));\n        }\n    };\n\n    const onSubmit = async () => {\n        setIsContinueBtnLoading(true);\n        setVerifying(true);\n        const images = [];\n        const copyStripeHostAccount = JSON.parse(JSON.stringify(stripeAccount));\n\n        for (let i = 0; i < idDocuments.length; i++) {\n            const base64 = idDocuments[i].data.split(\",\")[1];\n            images.push(base64);\n        }\n        try {\n            await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/id/verify\", {\n                body: {\n                    images: images,\n                },\n                headers: {\n                    Authorization: accessToken,\n                },\n            })\n                .then((res) => {\n                    if (res.success) {\n                        toggleIDVerification();\n                        setIsContinueBtnLoading(false);\n                        setVerifyFail(false);\n                        setVerifying(false);\n                        if (IdVerifyFlag) {\n                            toggleIdVerifyFlag();\n                            togglePreviousPageFlag(0);\n                            toggleBankAccountAdded();\n                        }\n                        //update frontend idverification\n                        copyStripeHostAccount.individual.verification.status = \"pending\";\n                        setStripeAccount(copyStripeHostAccount);\n                    } else {\n                        //update frontend idverification\n                        //reopen if failled\n                        setVerifying(false);\n                        setVerifyFail(true);\n                        copyStripeHostAccount.individual.verification.details_code = \"failed\";\n                        setStripeAccount(copyStripeHostAccount);\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    //reopen if failled\n                    setVerifying(false);\n                    setVerifyFail(true);\n                    setIsContinueBtnLoading(false);\n                    //update frontend idverification\n                    copyStripeHostAccount.individual.verification.details_code = \"failed\";\n                    setStripeAccount(copyStripeHostAccount);\n                    // if (IdVerifyFlag) {\n                    //     toggleBankAccountMenuFailed();\n                    //     togglePreviousPageFlag(0);\n                    // }\n                });\n        } catch (err) {\n            //reopen if failled\n            setVerifying(false);\n            setVerifyFail(true);\n            setIsContinueBtnLoading(false);\n            copyStripeHostAccount.individual.verification.details_code = \"failed\";\n            setStripeAccount(copyStripeHostAccount);\n            // toggleIDVerification()\n            // if (IdVerifyFlag) {\n            //     toggleBankAccountMenuFailed();\n            //     togglePreviousPageFlag(0);\n            // }\n        }\n    };\n\n    const goback = () => {\n        if (previousPageFlag === 2) {\n            togglePreviousPageFlag(1);\n            toggleAdressMenu();\n        } else if (previousPageFlag === 3) {\n            togglePreviousPageFlag(1);\n            toggleAdressMenuManual();\n        } else if (previousPageFlag === 1) {\n            togglePreviousPageFlag(0);\n            toggleBankAccountMenu();\n        }\n        toggleIDVerification();\n    };\n\n    const handleFileClick = () => {\n        hiddenFileInput.current?.click();\n    };\n\n    const onDrop = useCallback(\n        async (acceptedFiles: File[]) => {\n            const acceptedFileTypes = [\"image/gif\", \"image/jpeg\", \"image/png\", \"image/apng\", \"image/heic\", \"image/avif\", \"image/webp\"];\n            const filteredFiles = acceptedFiles.filter((file) => acceptedFileTypes.includes(file.type));\n            if (filteredFiles.length === 0) {\n                console.log(\"No valid image types found in the uploaded files.\");\n                return;\n            }\n            const filesData = await Promise.all(\n                filteredFiles.map(async (file) => {\n                    const base64 = await convertBase64(file);\n                    return { id: makeid(10), data: base64 as string };\n                })\n            );\n            filesData.forEach((fileData) => addIdDocument(fileData));\n        },\n        [addIdDocument]\n    );\n\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n    const handleCancel = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n            togglePreviousPageFlag(0);\n            toggleIDVerification();\n        } else {\n            toggleIDVerification();\n        }\n    };\n\n    return (\n        <>\n            <GlobalPopupContainerCenter\n                ref={addIDRef}\n                backBtnType={\"Arrow\"}\n                closePopup={goback}\n                handleSave={() => onSubmit()}\n                cancelPopup={handleCancel}\n                disable={idDocuments.length === 0 || isContinueBtnLoading}\n                isContinueBtnLoading={isContinueBtnLoading}\n            >\n                <AddIdentityDocumentWrapper>\n                    <AddIdentityDocumentTitle>Verify your identity</AddIdentityDocumentTitle>\n                    <AddIdentityDocumentSubtitle invalid={verifyFail}>\n                        {verifyFail ? \"Please upload a valid ID document and try again.\" : \"Upload the front and back of any Government issued ID.\"}\n                    </AddIdentityDocumentSubtitle>\n\n                    <AddIdentityDocumentButton {...getRootProps()} uploaded={idDocuments.length !== 0} type=\"button\" onClick={handleFileClick}>\n                        <input\n                            {...getInputProps()}\n                            type=\"file\"\n                            name=\"file\"\n                            ref={hiddenFileInput}\n                            onChange={onChange}\n                            style={{ display: \"none\" }}\n                            multiple={true}\n                            onClick={(event: React.MouseEvent<HTMLInputElement>) => {\n                                const target = event.currentTarget;\n                                target.value = \"\";\n                            }}\n                        />\n                        Drop files or click to upload.\n                    </AddIdentityDocumentButton>\n\n                    {idDocuments.length < 1 && <AddIdentityDocumentSubtitle invalid={false}>Your documents will only be used to verify your identity.</AddIdentityDocumentSubtitle>}\n                    <AddIdentityDocumentImageContainer>\n                        {idDocuments.length > 0 &&\n                            idDocuments.map((item) => {\n                                return (\n                                    <AddIdentityDocumentImageWrapper key={item.id}>\n                                        <AddIdentityDocumentImage src={item.data} alt=\"ID-Document\" />\n                                        <AddIdentityDocumentImageDeleteButton type=\"button\" onClick={() => removeIdDocument(item.id)}>\n                                            <AddIdentityDocumentImageDeleteButtonIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/None.svg\"} alt=\"delete icon\" />\n                                        </AddIdentityDocumentImageDeleteButton>\n                                    </AddIdentityDocumentImageWrapper>\n                                );\n                            })}\n                    </AddIdentityDocumentImageContainer>\n                </AddIdentityDocumentWrapper>\n            </GlobalPopupContainerCenter>\n        </>\n    );\n};\n\nexport default IdVerification;\n","import React from \"react\";\nimport { AddPayoutAddressWrapper, AddPayoutFailedIcon, AddPayoutFailedTitle, AddPayoutFailedSubtitle } from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\ninterface AddBankAccountFailedProps {\n    bankAccountMenuFailed: boolean;\n    IdVerifyFlag: boolean;\n    toggleIdVerifyFlag: () => void;\n    togglePreviousPageFlag: (value: number) => void;\n    toggleBankAccountMenu: () => void;\n    toggleBankAccountMenuFailed: () => void;\n}\n\nconst AddBankAccountFailed: React.FC<AddBankAccountFailedProps> = ({\n    bankAccountMenuFailed,\n    IdVerifyFlag,\n    toggleIdVerifyFlag,\n    togglePreviousPageFlag,\n    toggleBankAccountMenu,\n    toggleBankAccountMenuFailed,\n}) => {\n    const handleClickOutside = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n            togglePreviousPageFlag(0);\n        }\n        toggleBankAccountMenu();\n    };\n    const addBankAccountFailedRef = useClickOutside(bankAccountMenuFailed, handleClickOutside);\n\n    const handleClose = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n        }\n        toggleBankAccountMenu();\n        toggleBankAccountMenuFailed();\n    };\n\n    const handleCancel = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n        }\n        toggleBankAccountMenuFailed();\n    };\n\n    return (\n        <GlobalPopupContainerCenter ref={addBankAccountFailedRef} backBtnType={\"Arrow\"} closePopup={handleClose} handleSave={handleClose} cancelPopup={handleCancel} btnText=\"Continue\">\n            <AddPayoutAddressWrapper ref={addBankAccountFailedRef} style={{ alignItems: \"flex-start\" }}>\n                <AddPayoutFailedIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/alert+circle.svg\"} alt=\"Failed icon\" />\n                <AddPayoutFailedTitle>{IdVerifyFlag ? \"ID verification failed\" : \"Invalid bank account\"}</AddPayoutFailedTitle>\n                <AddPayoutFailedSubtitle>{\"Unfortunately, we could not validate your \" + (IdVerifyFlag ? \"government ID.\" : \"bank account.\")}</AddPayoutFailedSubtitle>\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default AddBankAccountFailed;\n","import { useState } from \"react\";\nimport React from \"react\";\nimport {\n    AddPayoutAddressTitle,\n    AddPayoutAddressWrapper,\n    AddCardElementSubtitle,\n    AddBankAccountInputWrapper,\n    AddBankAccountInput,\n    AddBankAccountLabel,\n    AddBankAccountDoubleInputWrapper,\n} from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { userHostModelSelector } from \"../../../state/selectors/userHostModel\";\nimport { useRecoilState } from \"recoil\";\nimport { callApi } from \"../../../utils/api/api\";\nimport { UserHostModel } from \"../../../interfaces/models/userHostModel\";\nimport { AddPayoutMethodApiResponse } from \"../../../interfaces/api/responses/addPayoutMethod\";\nimport { AddPayoutMethodApiParams } from \"../../../interfaces/api/params/addPayoutMethod\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\ninterface AddBankAccountProps {\n    bankAccountMenu: any;\n    toggleBankAccountMenu: () => void;\n    accessToken: string;\n    addressVerified: boolean;\n    idVerified: boolean;\n    fetchStripeAccount: () => void;\n    togglePreviousPageFlag: (value: number) => void;\n    toggleIdVerifyFlag: () => void;\n    toggleAdressMenu: () => void;\n    toggleIDVerification: () => void;\n    toggleBankAccountAdded: () => void;\n    toggleBankAccountMenuFailed: () => void;\n}\n\nconst AddBankAccount: React.FC<AddBankAccountProps> = ({\n    bankAccountMenu,\n    toggleBankAccountMenu,\n    accessToken,\n    addressVerified,\n    idVerified,\n    fetchStripeAccount,\n    togglePreviousPageFlag,\n    toggleIdVerifyFlag,\n    toggleAdressMenu,\n    toggleIDVerification,\n    toggleBankAccountAdded,\n    toggleBankAccountMenuFailed,\n}: AddBankAccountProps) => {\n    const addBankAccountRef = useClickOutside(bankAccountMenu, toggleBankAccountMenu);\n    const [accountName, setAccountName] = useState<string>(\"\");\n    const [bsb, setBsb] = useState<string>(\"\");\n    const [accountNumber, setAccountNumber] = useState<string>(\"\");\n    const [isContinueBtnLoading, setIsContinueBtnLoading] = useState<boolean>(false);\n    const [userHostModel, setUserHostModel] = useRecoilState<UserHostModel | null>(userHostModelSelector);\n\n    const onSubmit = async (): Promise<void> => {\n        setIsContinueBtnLoading(true);\n        if (accountName && bsb && accountNumber) {\n            const addPayoutMethodParams: AddPayoutMethodApiParams = {\n                headers: {\n                    Authorization: accessToken,\n                },\n                body: {\n                    accountID: userHostModel?.stripeAccountID as string,\n                    bankAccountData: {\n                        accountName: accountName,\n                        bsb: bsb,\n                        accountNumber: accountNumber,\n                    },\n                },\n            };\n            await callApi(\"put\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/payout/method\", addPayoutMethodParams)\n                .then(async (res: AddPayoutMethodApiResponse) => {\n                    if (res.success) {\n                        await fetchStripeAccount();\n                        toggleBankAccountMenu();\n                        if (addressVerified && idVerified) {\n                            toggleBankAccountAdded();\n                        } else {\n                            togglePreviousPageFlag(1);\n                            if (!addressVerified && !idVerified) {\n                                toggleIdVerifyFlag();\n                                toggleAdressMenu();\n                            } else if (!addressVerified) {\n                                toggleAdressMenu();\n                            } else {\n                                toggleIDVerification();\n                            }\n                        }\n                    } else {\n                        toggleBankAccountMenu();\n                        toggleBankAccountMenuFailed();\n                    }\n                    setIsContinueBtnLoading(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    toggleBankAccountMenu();\n                    toggleBankAccountMenuFailed();\n                    setIsContinueBtnLoading(false);\n                });\n        }\n    };\n\n    const changeAccountName = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const inputValue: string = e.target.value;\n        const filteredValue: string = inputValue.replace(/[^a-zA-ZÀ-ž\\s\\-'.]/g, \"\");\n        setAccountName(filteredValue);\n    };\n\n    const addBsb =\n        (setter: React.Dispatch<React.SetStateAction<string>>) =>\n        (e: React.ChangeEvent<HTMLInputElement>): void => {\n            if (e.target.value.length > 6) return;\n            const value = e.target.value.replace(/\\D/g, \"\"); // Remove non-digit characters\n\n            if (value) {\n                setter(value);\n            } else {\n                setter(\"\");\n            }\n        };\n\n    const addAc =\n        (setter: React.Dispatch<React.SetStateAction<string>>) =>\n        (e: React.ChangeEvent<HTMLInputElement>): void => {\n            if (e.target.value.length > 10) return;\n            const value = e.target.value.replace(/\\D/g, \"\"); // Remove non-digit characters\n\n            if (value) {\n                setter(value);\n            } else {\n                setter(\"\");\n            }\n        };\n\n    const handleClose = () => {\n        toggleBankAccountMenu();\n    };\n\n    return (\n        <GlobalPopupContainerCenter\n            ref={addBankAccountRef}\n            backBtnType={\"Arrow\"}\n            closePopup={handleClose}\n            handleSave={onSubmit}\n            isContinueBtnLoading={isContinueBtnLoading}\n            disable={!(accountName && bsb && accountNumber) || isContinueBtnLoading}\n            btnText=\"Continue\"\n        >\n            <AddPayoutAddressWrapper ref={addBankAccountRef} style={{ alignItems: \"flex-start\" }}>\n                <AddPayoutAddressTitle>Add bank account</AddPayoutAddressTitle>\n                <AddCardElementSubtitle style={{ marginBottom: \"32px\" }}>\n                    By linking your payout method, you unconditionally agree to our <a href=\"https://www.anystay.com.au/terms-and-conditions\">Terms of service</a> and the{\" \"}\n                    <a href=\"https://stripe.com/au/legal/connect-account\">Stripe Recipient Agreement.</a>\n                </AddCardElementSubtitle>\n                <AddBankAccountInputWrapper>\n                    <AddBankAccountInput type=\"text\" value={accountName} onChange={changeAccountName} />\n                    <AddBankAccountLabel>Account name</AddBankAccountLabel>\n                </AddBankAccountInputWrapper>\n                <AddBankAccountDoubleInputWrapper>\n                    <AddBankAccountInputWrapper style={{ width: \"calc(100% - 12px)\" }}>\n                        <AddBankAccountInput type=\"text\" value={bsb} onChange={addBsb(setBsb)} />\n                        <AddBankAccountLabel>BSB</AddBankAccountLabel>\n                    </AddBankAccountInputWrapper>\n                    <AddBankAccountInputWrapper style={{ width: \"calc(100% - 12px)\" }}>\n                        <AddBankAccountInput type=\"text\" value={accountNumber} onChange={addAc(setAccountNumber)} />\n                        <AddBankAccountLabel>Account number</AddBankAccountLabel>\n                    </AddBankAccountInputWrapper>\n                </AddBankAccountDoubleInputWrapper>\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default AddBankAccount;\n","import { useState } from \"react\";\nimport { callApi } from \"../../../utils/api/api\";\nimport {\n    AddPayoutAddressAutocompleteTitle,\n    AddPayoutAddressWrapper,\n    AddPayoutAddressInput,\n    AddPayoutAddressLabel,\n    AddPayoutAddressInputWrapper,\n    AddPayoutAddressSubtitle,\n} from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { userHostModelSelector } from \"../../../state/selectors/userHostModel\";\nimport { stripeAccountSelector } from \"../../../state/selectors/stripeAccount\";\nimport { useRecoilState } from \"recoil\";\nimport { UserHostModel } from \"../../../interfaces/models/userHostModel\";\nimport { Stripe } from \"stripe\";\nimport { UpdateTaxNumberApiResponse } from \"../../../interfaces/api/responses/updateUserTaxnumber\";\nimport { UpdateTaxNumberApiParams } from \"../../../interfaces/api/params/updateUserTaxnumber\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\ninterface AddTaxNumberProps {\n    taxNumberMenu: any;\n    toggleTaxNumber: () => void;\n    accessToken: string;\n}\n\nconst AddTaxNumber: React.FC<AddTaxNumberProps> = ({ taxNumberMenu, toggleTaxNumber, accessToken }) => {\n    const [taxNumber, setTaxNumber] = useState<string>(\"\");\n    const [isContinueBtnLoading, setIsContinueBtnLoading] = useState<boolean>(false);\n    const [userHostModel, setUserHostModel] = useRecoilState<UserHostModel | null>(userHostModelSelector);\n    const [stripeAccount, setStripeAccount] = useRecoilState<Stripe.Account | null>(stripeAccountSelector);\n    const addTaxNumberRef = useClickOutside(taxNumberMenu, toggleTaxNumber);\n\n    const updateTaxNumber = async (): Promise<void> => {\n        const updateTaxNumberParams: UpdateTaxNumberApiParams = {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                stripeAccountID: userHostModel?.stripeAccountID as string,\n                taxnumber: taxNumber,\n            },\n        };\n        await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/taxnumber\", updateTaxNumberParams)\n            .then((res: UpdateTaxNumberApiResponse) => {\n                if (res.success) {\n                    const copyStripeHostAccount = JSON.parse(JSON.stringify(stripeAccount));\n                    copyStripeHostAccount.company.tax_id_provided = true;\n                    setStripeAccount(copyStripeHostAccount);\n                }\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const handleSave = async () => {\n        setIsContinueBtnLoading(true);\n        await updateTaxNumber();\n        setIsContinueBtnLoading(false);\n        toggleTaxNumber();\n    };\n\n    return (\n        <GlobalPopupContainerCenter\n            ref={addTaxNumberRef}\n            backBtnType={\"Arrow\"}\n            closePopup={toggleTaxNumber}\n            handleSave={handleSave}\n            btnText=\"Continue\"\n            disable={!taxNumber || isContinueBtnLoading}\n            isContinueBtnLoading={isContinueBtnLoading}\n        >\n            <AddPayoutAddressWrapper>\n                <AddPayoutAddressAutocompleteTitle>Taxes</AddPayoutAddressAutocompleteTitle>\n                <AddPayoutAddressSubtitle>Add or change your organisation's current ABN or ACN</AddPayoutAddressSubtitle>\n                <AddPayoutAddressInputWrapper>\n                    <AddPayoutAddressInput\n                        value={taxNumber}\n                        placeholder={\"i.e. ABN / ACN\"}\n                        onChange={(e) => {\n                            setTaxNumber(e.target.value);\n                        }}\n                    />\n                    <AddPayoutAddressLabel>Add ABN or ACN number</AddPayoutAddressLabel>\n                </AddPayoutAddressInputWrapper>\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default AddTaxNumber;\n","import { useState } from \"react\";\nimport {\n    AddPayoutAddressTitle,\n    AddPayoutAddressInput,\n    AddPayoutAddressLabel,\n    AddPayoutAddressInputWrapper,\n    AddPayoutAddressInputWrapperWide,\n    AddPayoutAddressManualWrapper,\n} from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { userHostModelSelector } from \"../../../state/selectors/userHostModel\";\nimport { stripeAccountSelector } from \"../../../state/selectors/stripeAccount\";\nimport { useRecoilState } from \"recoil\";\nimport { callApi } from \"../../../utils/api/api\";\nimport { UserHostModel } from \"../../../interfaces/models/userHostModel\";\nimport { Stripe } from \"stripe\";\nimport { AddressComponent } from \"../../../interfaces/state/addressComponent\";\nimport { UpdateUserAddressApiResponse } from \"../../../interfaces/api/responses/updateUserAddress\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\nconst countryMapping: { [key: string]: string } = {\n    Australia: \"AU\",\n    \"New Zealand\": \"NZ\",\n    default: \"AU\",\n};\n\ninterface AddPayoutAddressManualProps {\n    updateAddressMenuManual: any;\n    IdVerifyFlag: boolean;\n    toggleIdVerifyFlag: () => void;\n    togglePreviousPageFlag: (page: number) => void;\n    toggleAdressMenuManual: () => void;\n    accessToken: string;\n    toggleIDVerification: () => void;\n}\n\nconst AddPayoutAddressManual: React.FC<AddPayoutAddressManualProps> = ({\n    updateAddressMenuManual,\n    IdVerifyFlag,\n    toggleIdVerifyFlag,\n    togglePreviousPageFlag,\n    toggleAdressMenuManual,\n    accessToken,\n    toggleIDVerification,\n}) => {\n    const handleClickOutside = () => {\n        if (IdVerifyFlag) {\n            toggleIdVerifyFlag();\n            togglePreviousPageFlag(0);\n        }\n        toggleAdressMenuManual();\n    };\n    const addPayoutAddressManualRef = useClickOutside(updateAddressMenuManual, handleClickOutside);\n    const [isContinueBtnLoading, setIsContinueBtnLoading] = useState<boolean>(false);\n    const [addressComponent, setAddressComponent] = useState<AddressComponent>({\n        city: \"\",\n        unitNumber: \"\",\n        streetAddress: \"\",\n        state: \"\",\n        postcode: \"\",\n        country: \"\",\n    });\n    const [userHostModel, setUserHostModel] = useRecoilState<UserHostModel | null>(userHostModelSelector);\n    const [stripeHostAccount, setStripeHostAccount] = useRecoilState<Stripe.Account | null>(stripeAccountSelector);\n\n    const formatStripeHostAccount = async (): Promise<void> => {\n        const stripeHostAccountCopy = JSON.parse(JSON.stringify(stripeHostAccount));\n        stripeHostAccountCopy.individual.address.line1 = `${addressComponent.unitNumber ? `${addressComponent.unitNumber}/` : \"\"}${addressComponent.streetAddress}`;\n        stripeHostAccountCopy.individual.address.city = `${addressComponent.city}`;\n        stripeHostAccountCopy.individual.address.state = `${addressComponent.state}`;\n        stripeHostAccountCopy.individual.address.country = `${addressComponent.country}`;\n        setStripeHostAccount(stripeHostAccountCopy);\n    };\n    const updateStripeAccount = async (): Promise<void> => {\n        await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/address\", {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                stripeAccountID: userHostModel?.stripeAccountID,\n                city: addressComponent.city,\n                unitNumber: addressComponent.unitNumber,\n                street: addressComponent.streetAddress,\n                state: addressComponent.state,\n                country: addressComponent.country ? countryMapping[addressComponent.country] : countryMapping[\"default\"],\n                postal_code: addressComponent.postcode,\n            },\n        })\n            .then(async (res: UpdateUserAddressApiResponse) => {\n                formatStripeHostAccount();\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const handleSave = async () => {\n        setIsContinueBtnLoading(true);\n        await updateStripeAccount();\n        if (IdVerifyFlag) {\n            togglePreviousPageFlag(3);\n            toggleIDVerification();\n        }\n        setIsContinueBtnLoading(false);\n        toggleAdressMenuManual();\n    };\n\n    return (\n        <GlobalPopupContainerCenter\n            ref={addPayoutAddressManualRef}\n            backBtnType={\"Arrow\"}\n            closePopup={() => toggleAdressMenuManual()}\n            handleSave={handleSave}\n            btnColor=\"blue\"\n            btnText={IdVerifyFlag ? \"Continue\" : \"Save\"}\n            disable={!(addressComponent.streetAddress && addressComponent.city && addressComponent.state && addressComponent.postcode) || isContinueBtnLoading}\n            isContinueBtnLoading={isContinueBtnLoading}\n        >\n            <AddPayoutAddressManualWrapper>\n                <AddPayoutAddressTitle>Payout address</AddPayoutAddressTitle>\n                <AddPayoutAddressInputWrapper>\n                    <AddPayoutAddressInput\n                        value={addressComponent.streetAddress as string}\n                        placeholder={\"i.e. 60 Sherwood road, Toowong\"}\n                        onChange={(e) => {\n                            const { value } = e.target;\n                            setAddressComponent((prevState) => {\n                                return {\n                                    ...prevState,\n                                    streetAddress: value,\n                                };\n                            });\n                        }}\n                    />\n                    <AddPayoutAddressLabel>Street address</AddPayoutAddressLabel>\n                </AddPayoutAddressInputWrapper>\n                <AddPayoutAddressInputWrapper>\n                    <AddPayoutAddressInput\n                        value={addressComponent.unitNumber as string}\n                        placeholder={\"i.e. 3\"}\n                        onChange={(e) => {\n                            const { value } = e.target;\n                            setAddressComponent((prevState) => {\n                                return {\n                                    ...prevState,\n                                    unitNumber: value,\n                                };\n                            });\n                        }}\n                    />\n                    <AddPayoutAddressLabel>Unit number</AddPayoutAddressLabel>\n                </AddPayoutAddressInputWrapper>\n                <AddPayoutAddressInputWrapperWide>\n                    <AddPayoutAddressInputWrapper style={{ width: \"calc(100% - 16px)\" }}>\n                        <AddPayoutAddressInput\n                            value={addressComponent.city as string}\n                            placeholder={\"i.e. Brisbane\"}\n                            onChange={(e) => {\n                                const { value } = e.target;\n                                setAddressComponent((prevState) => {\n                                    return {\n                                        ...prevState,\n                                        city: value,\n                                    };\n                                });\n                            }}\n                        />\n                        <AddPayoutAddressLabel>City</AddPayoutAddressLabel>\n                    </AddPayoutAddressInputWrapper>\n                    <AddPayoutAddressInputWrapper>\n                        <AddPayoutAddressInput\n                            value={addressComponent.state as string}\n                            placeholder={\"i.e. QLD\"}\n                            onChange={(e) => {\n                                const { value } = e.target;\n                                setAddressComponent((prevState) => {\n                                    return {\n                                        ...prevState,\n                                        state: value,\n                                    };\n                                });\n                            }}\n                        />\n                        <AddPayoutAddressLabel>State / Province</AddPayoutAddressLabel>\n                    </AddPayoutAddressInputWrapper>\n                </AddPayoutAddressInputWrapperWide>\n                <AddPayoutAddressInputWrapper>\n                    <AddPayoutAddressInput\n                        value={addressComponent.postcode as string}\n                        placeholder={\"i.e. 4066\"}\n                        onChange={(e) => {\n                            const { value } = e.target;\n                            setAddressComponent((prevState) => {\n                                return {\n                                    ...prevState,\n                                    postcode: value,\n                                };\n                            });\n                        }}\n                    />\n                    <AddPayoutAddressLabel>Postcode</AddPayoutAddressLabel>\n                </AddPayoutAddressInputWrapper>\n            </AddPayoutAddressManualWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default AddPayoutAddressManual;\n","import { useState, useEffect } from \"react\";\nimport {\n    AddPayoutAddressWrapper,\n    AddPayoutAddAdressAutocompleteInput,\n    AddPayoutAddressAutocompleteTitle,\n    AddPayoutAddressAutocompleteSubtitle,\n    AddPayoutAddAdressAutocompleteInputWrapper,\n    AutocompleteClearButton,\n    AutocompleteClearButtonIcon,\n} from \"../payoutSettingsStyling\";\nimport useClickOutside from \"../../../hook/useClickOutside\";\nimport { stripeAccountSelector } from \"../../../state/selectors/stripeAccount\";\nimport { userHostModelSelector } from \"../../../state/selectors/userHostModel\";\nimport { useRecoilState } from \"recoil\";\nimport { ColorTheme } from \"../../../components/globaStyledComponents/globalStyledComponentsStyling\";\nimport { callApi } from \"../../../utils/api/api\";\nimport { Stripe } from \"stripe\";\nimport { UserHostModel } from \"../../../interfaces/models/userHostModel\";\nimport { AddressComponent } from \"../../../interfaces/state/addressComponent\";\nimport { UpdateUserAddressApiResponse } from \"../../../interfaces/api/responses/updateUserAddress\";\nimport { UpdateUserAddressApiParams } from \"../../../interfaces/api/params/updateUserAddress\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\nconst countryMapping: { [key: string]: string } = {\n    Australia: \"AU\",\n    \"New Zealand\": \"NZ\",\n    default: \"AU\",\n};\ninterface AddPayoutAddressProps {\n    updateAddressMenu: boolean;\n    toggleAdressMenu: () => void;\n    previousPageFlag: number;\n    togglePreviousPageFlag: (value: number) => void;\n    toggleBankAccountMenu: () => void;\n    toggleAdressMenuManual: () => void;\n    accessToken: string;\n    IdVerifyFlag: boolean;\n    toggleIDVerification: () => void;\n}\n\nconst AddPayoutAddress: React.FC<AddPayoutAddressProps> = ({\n    updateAddressMenu,\n    toggleAdressMenu,\n    previousPageFlag,\n    togglePreviousPageFlag,\n    toggleBankAccountMenu,\n    toggleAdressMenuManual,\n    accessToken,\n    IdVerifyFlag,\n    toggleIDVerification,\n}) => {\n    const addPayoutAddressRef = useClickOutside(updateAddressMenu, toggleAdressMenu, true);\n    // const addPayoutAddressRef = useRef(null);\n    const [isContinueBtnLoading, setIsContinueBtnLoading] = useState<boolean>(false);\n    const [place, setPlace] = useState<any | null>(null);\n    const [address, setAddress] = useState<string>(\"\");\n    const [addressComponent, setAddressComponent] = useState<AddressComponent>({\n        city: null,\n        unitNumber: null,\n        streetAddress: null,\n        state: null,\n        postcode: null,\n        country: null,\n    });\n    const [stripeHostAccount, setStripeHostAccount] = useRecoilState<Stripe.Account | null>(stripeAccountSelector);\n    const [userHostModel, setUserHostModel] = useRecoilState<UserHostModel | null>(userHostModelSelector);\n    const [didNotSelectFromDropdown, setDidNotSelectFromDropdown] = useState<boolean>(false);\n    const wrapperRef = useClickOutside(true, () => goback);\n\n    useEffect(() => {\n        if (stripeHostAccount) {\n            if (stripeHostAccount.individual) {\n                if (\n                    stripeHostAccount?.individual?.address?.line1 &&\n                    stripeHostAccount.individual.address.city &&\n                    stripeHostAccount.individual.address.state &&\n                    stripeHostAccount.individual.address.country\n                ) {\n                    setAddress(\n                        `${stripeHostAccount.individual.address.line2 ? `${stripeHostAccount.individual.address.line2}/` : \"\"}${stripeHostAccount.individual.address.line1}, ${\n                            stripeHostAccount.individual.address.city\n                        }, ${stripeHostAccount.individual.address.state}, ${stripeHostAccount.individual.address.country}`\n                    );\n                }\n            }\n        }\n    }, [stripeHostAccount]);\n\n    const formatStripeHostAccount = async () => {\n        const stripeHostAccountCopy = JSON.parse(JSON.stringify(stripeHostAccount));\n        stripeHostAccountCopy.individual.address.line1 = `${addressComponent.unitNumber ? `${addressComponent.unitNumber}/` : \"\"}${addressComponent.streetAddress}`;\n        stripeHostAccountCopy.individual.address.city = `${addressComponent.city}`;\n        stripeHostAccountCopy.individual.address.state = `${addressComponent.state}`;\n        stripeHostAccountCopy.individual.address.country = `${addressComponent.country}`;\n        setStripeHostAccount(stripeHostAccountCopy);\n    };\n\n    const updateStripeAccount = async () => {\n        const updateUserAddressParams: UpdateUserAddressApiParams = {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                stripeAccountID: userHostModel?.stripeAccountID as string,\n                city: addressComponent.city as string,\n                unitNumber: addressComponent.unitNumber,\n                street: addressComponent.streetAddress as string,\n                state: addressComponent.state as string,\n                country: addressComponent.country ? countryMapping[addressComponent.country] : countryMapping[\"default\"],\n                postal_code: addressComponent.postcode as string,\n            },\n        };\n        await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/address\", updateUserAddressParams)\n            .then(async (res: UpdateUserAddressApiResponse) => {\n                formatStripeHostAccount();\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const goback = () => {\n        if (previousPageFlag === 1) {\n            togglePreviousPageFlag(0);\n            toggleBankAccountMenu();\n            toggleAdressMenu();\n        } else {\n            toggleAdressMenu();\n        }\n    };\n\n    const handleSave = async () => {\n        if (!place) {\n            setDidNotSelectFromDropdown(true);\n            return;\n        }\n        setIsContinueBtnLoading(true);\n        await updateStripeAccount();\n        if (IdVerifyFlag) {\n            togglePreviousPageFlag(2);\n            toggleIDVerification();\n        }\n        setIsContinueBtnLoading(false);\n        toggleAdressMenu();\n    };\n\n    const handleCancel = () => {\n        toggleAdressMenu();\n        toggleAdressMenuManual();\n    };\n\n    return (\n        <GlobalPopupContainerCenter\n            ref={wrapperRef}\n            backBtnType={\"Arrow\"}\n            closePopup={goback}\n            handleSave={handleSave}\n            cancelPopup={handleCancel}\n            cancelBtnText=\"Do manually\"\n            btnText={IdVerifyFlag ? \"Continue\" : \"Save\"}\n            disable={isContinueBtnLoading}\n            isContinueBtnLoading={isContinueBtnLoading}\n        >\n            <AddPayoutAddressWrapper style={{ minHeight: \"395px\" }} ref={addPayoutAddressRef}>\n                <AddPayoutAddressAutocompleteTitle>Add payout address</AddPayoutAddressAutocompleteTitle>\n                <AddPayoutAddressAutocompleteSubtitle invalid={didNotSelectFromDropdown}>\n                    {didNotSelectFromDropdown ? \"Please select an address from the dropdown.\" : \"Enter the address linked to your bank account.\"}\n                </AddPayoutAddressAutocompleteSubtitle>\n                <AddPayoutAddAdressAutocompleteInputWrapper>\n                    <AddPayoutAddAdressAutocompleteInput\n                        value={address}\n                        apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n                        onPlaceSelected={(place) => {\n                            setDidNotSelectFromDropdown(false);\n                            let subpremise = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"subpremise\";\n                            });\n                            let streetNumber = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"street_number\";\n                            });\n                            let street = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"route\";\n                            });\n                            let suburb = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"locality\";\n                            });\n                            let state = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"administrative_area_level_1\";\n                            });\n                            let country = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"country\";\n                            });\n                            let city = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"administrative_area_level_2\";\n                            });\n                            let postcode = place.address_components?.filter((obj) => {\n                                return obj.types[0] === \"postal_code\";\n                            });\n\n                            let unitNumberFormatted = subpremise && subpremise.length > 0 ? subpremise[0].long_name : null;\n                            let streetNumberFormatted = streetNumber && streetNumber[0]?.long_name;\n                            let streetFormatted = street && street[0]?.long_name;\n                            let suburbFormatted = suburb && suburb[0]?.long_name;\n                            let stateFormatted = state && state[0]?.short_name;\n                            let countryFormatted = country && country[0]?.long_name;\n                            let cityFormatted = city && city[0]?.long_name;\n                            let postcodeFormatted = postcode && postcode[0]?.long_name;\n\n                            setPlace(place);\n                            setAddress(\n                                `${unitNumberFormatted ? `${unitNumberFormatted}/` : \"\"}${streetNumberFormatted}, ${streetFormatted}, ${suburbFormatted}, ${stateFormatted}, ${countryFormatted}`\n                            );\n                            setAddressComponent({\n                                streetAddress: `${streetNumberFormatted} ${streetFormatted}`,\n                                unitNumber: unitNumberFormatted,\n                                city: cityFormatted,\n                                state: stateFormatted,\n                                postcode: postcodeFormatted,\n                                country: countryFormatted,\n                            });\n                        }}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            setAddress(e.target.value);\n                            setPlace(null);\n                        }}\n                        options={{\n                            types: [\"address\"],\n                            componentRestrictions: { country: [\"au\", \"nz\"] },\n                        }}\n                        style={{ width: \"100%\", borderRadius: \"10px\", color: ColorTheme.Black.color }}\n                        placeholder=\"Enter your payout address\"\n                    />\n                    {address !== \"\" && (\n                        <AutocompleteClearButton\n                            type=\"button\"\n                            onMouseDown={() => {\n                                setAddress(\"\");\n                                setPlace(null);\n                            }}\n                        >\n                            <AutocompleteClearButtonIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/Cross.svg\"} alt=\"Clear address\" />\n                        </AutocompleteClearButton>\n                    )}\n                </AddPayoutAddAdressAutocompleteInputWrapper>\n                {/* <AddPayoutAddressAutocompleteSkip\n                        type=\"button\"\n                        onClick={() => {\n                            toggleAdressMenu()\n                            toggleAdressMenuManual()\n                        }}\n                    >\n                        DoManually\n                    </AddPayoutAddressAutocompleteSkip> */}\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default AddPayoutAddress;\n","import { AddPayoutAddressWrapper, BankAccountAddedIcon, BankAccountAddedTitle, BankAccountAddedSubtitle, BankAccountAddedWrapper, BankAccountAddedDoneButton } from \"../payoutSettingsStyling\";\nimport React from \"react\";\nimport GlobalPopupContainerCenter from \"../../../components/globalPopup/GlobalPopupContainerCenter\";\n\ninterface BankAccountAddedProps {\n    toggleBankAccountAdded: () => void;\n}\n\nconst BankAccountAdded: React.FC<BankAccountAddedProps> = ({ toggleBankAccountAdded }) => {\n    return (\n        <GlobalPopupContainerCenter ref={toggleBankAccountAdded} backBtnType={\"Arrow\"} closePopup={toggleBankAccountAdded} noContinueBtn={true}>\n            <AddPayoutAddressWrapper style={{ paddingBottom: \"24px\" }}>\n                <BankAccountAddedWrapper>\n                    <BankAccountAddedIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/Approval+tick.svg\"} alt=\"Connected icon\" />\n                    <BankAccountAddedTitle>Payout connected</BankAccountAddedTitle>\n                    <BankAccountAddedSubtitle>You can start receiving payouts to your bank account.</BankAccountAddedSubtitle>\n                    <BankAccountAddedDoneButton type=\"button\" onClick={toggleBankAccountAdded}>\n                        Done\n                    </BankAccountAddedDoneButton>\n                </BankAccountAddedWrapper>\n            </AddPayoutAddressWrapper>\n        </GlobalPopupContainerCenter>\n    );\n};\n\nexport default BankAccountAdded;\n","import { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { callApi } from \"../../utils/api/api\";\nimport {\n    PaymentSettingsTitleIcon,\n    PaymentSettingsMenuWrapper,\n    PaymentSettingsMenuItem,\n    PaymentMethodsWrapper,\n    PaymentMethodsTitle,\n    AddPaymentMethodButton,\n    PaymentMethod,\n    PaymentMethodText,\n    PaymentMethodButton,\n    PayoutSettingsDetails,\n    PayoutSettingsInputWrapper,\n    PayoutSettingsInputTitleWrapper,\n    PayoutSettingsInputTitle,\n    PayoutSettingsInputButton,\n    PayoutSettingsInputText,\n    PaymentSettingsDesktopWrapper,\n    PaymentSettingsDesktopMenu,\n    PaymentMethodsSubtitle,\n    PaymentMethodsTitleWrapper,\n    AddPaymentMethodButtonDesktop,\n    PaymentSettingsDesktopMenuIcon,\n    PaymentSettingsDesktopMenuText,\n    AddPaymentMethodButtonWrapper,\n    PayoutSettingsTitleLink,\n    PaymentMethodButtonWrapper,\n    PaymentSettingsContentWrapper,\n    PayoutSettingsHoverWrapper,\n} from \"./payoutSettingsStyling\";\nimport ServiceFeePopup from \"./popups/ServiceFeePopup\";\nimport IdVerification from \"./popups/IdVerification\";\nimport AddBankAccountFailed from \"./popups/AddBankAccountFailed\";\nimport AddBankAccount from \"./popups/AddBankAccount\";\nimport AddTaxNumber from \"./popups/AddTaxNumber\";\nimport AddPayoutAddressManual from \"./popups/AddPayoutAddressManual\";\nimport AddPayoutAddress from \"./popups/AddPayoutAddress\";\nimport BankAccountAdded from \"./popups/BankAccountAdded\";\nimport InlineTextLoading from \"../../components/spinner/inlineTextLoading/InlineTextLoading\";\nimport { stripeAccountSelector } from \"../../state/selectors/stripeAccount\";\nimport { userHostModelSelector } from \"../../state/selectors/userHostModel\";\nimport { accessTokenSelector } from \"../../state/selectors/accessToken\";\nimport { useRecoilState } from \"recoil\";\nimport HelmetTags from \"../../components/Helmet/HelmetTags\";\nimport { Stripe } from \"stripe\";\nimport { UserHostModel } from \"../../interfaces/models/userHostModel\";\nimport { GetPayoutMethodsApiResponse } from \"../../interfaces/api/responses/getPayoutMethods\";\nimport { DeletePayoutMethodApiResponse } from \"../../interfaces/api/responses/deletePayoutMethods\";\nimport { UpdateDefaultPayoutMethodResponse } from \"../../interfaces/api/responses/updateDefaultPayoutMethod\";\nimport { UpdateDefaultPayoutMethodParams } from \"../../interfaces/api/params/updateDefaultPayoutMethod\";\nimport { DeletePayoutMethodApiParams } from \"../../interfaces/api/params/deletePayoutMethods\";\nimport { GetPayoutMethodsApiParams } from \"../../interfaces/api/params/getPayoutMethods\";\nimport BackBtn from \"../../components/btn/backBtn/backBtn\";\nimport { PaymentSettingsTitle, PaymentSettingsTitleWrapper, PaymentSettingsWrapper } from \"../paymentSettings/paymentSettingsStyling\";\ninterface isInlineTextLoadingState {\n    loading: boolean;\n    bankAccountID: string | null;\n}\n\nconst PayoutSettings: React.FC = () => {\n    const [stripeAccount, setStripeAccount] = useRecoilState<Stripe.Account | null>(stripeAccountSelector);\n    const [userHostModel, setUserHostModel] = useRecoilState<UserHostModel | null>(userHostModelSelector);\n    const [accessToken, setAccessToken] = useRecoilState<string>(accessTokenSelector);\n    const navigate = useNavigate();\n\n    const [updateAddressMenu, setUpdateAddressMenu] = useState<boolean>(false);\n    const [updateTaxNumberMenu, setUpdateTaxNumberMenu] = useState<boolean>(false);\n    const [bankAccountMenu, setBankAccountMenu] = useState<boolean>(false);\n    const [bankAccountMenuFailed, setBankAccountMenuFailed] = useState<boolean>(false);\n    const [bankAccountAdded, setBankAccountAdded] = useState<boolean>(false);\n    const [serviceFeePopup, setServiceFeePopup] = useState<boolean>(false);\n    const [idVerificationPopup, setIdVerificationPopup] = useState<boolean>(false);\n    const [updateAddressMenuManual, setUpdateAddressMenuManual] = useState<boolean>(false);\n    const [addressVerified, setAddressVerified] = useState<boolean>(false);\n    const [idVerified, setIdVerified] = useState<boolean>(false);\n    const [idVerifyFlag, setIdVerifyFlag] = useState<boolean>(false);\n    const [previousPageFlag, setPreviousPageFlag] = useState<number>(0);\n    const [bankAccounts, setBankAccounts] = useState<Array<Stripe.BankAccount>>([]);\n    const [isInlineTextLoading, setIsInlineTextLoading] = useState<isInlineTextLoadingState>({ loading: false, bankAccountID: null });\n\n    const updateVerifyStatus = useCallback((): void => {\n        if (stripeAccount) {\n            if (stripeAccount.individual) {\n                setAddressVerified(\n                    Boolean(\n                        stripeAccount?.individual?.address?.city &&\n                            stripeAccount?.individual?.address?.country &&\n                            stripeAccount?.individual?.address?.state &&\n                            stripeAccount?.individual?.address?.postal_code &&\n                            stripeAccount?.individual?.address?.line1\n                    )\n                );\n                setIdVerified(Boolean(stripeAccount?.individual?.verification?.status === \"verified\" || stripeAccount?.individual?.verification?.status === \"pending\"));\n            }\n        }\n    }, [stripeAccount]);\n\n    const fetchStripeAccount = useCallback(async (): Promise<void> => {\n        const getPayoutMethodsParams: GetPayoutMethodsApiParams = {\n            headers: {\n                Authorization: accessToken,\n            },\n        };\n        await callApi(\"get\", `${process.env.REACT_APP_ENV}-anystay-user`, `user/payout/methods`, getPayoutMethodsParams).then(async (res: GetPayoutMethodsApiResponse) => {\n            console.log(res);\n            if (res && res.body.bankAccounts) {\n                setBankAccounts(res.body.bankAccounts.data);\n            }\n        });\n    }, [accessToken]);\n\n    useEffect((): void => {\n        fetchStripeAccount();\n    }, [fetchStripeAccount]);\n\n    useEffect((): void => {\n        updateVerifyStatus();\n    }, [updateVerifyStatus]);\n\n    const toggleIdVerifyFlag = (): void => {\n        setIdVerifyFlag(!idVerifyFlag);\n    };\n\n    const togglePreviousPageFlag = (pageIdx: number): void => {\n        setPreviousPageFlag(0 <= pageIdx && pageIdx <= 2 ? pageIdx : 0);\n    };\n\n    const toggleAdressMenu = (): void => {\n        setUpdateAddressMenu(!updateAddressMenu);\n    };\n\n    const toggleAdressMenuManual = (): void => {\n        setUpdateAddressMenuManual(!updateAddressMenuManual);\n    };\n\n    const toggleTaxNumber = (): void => {\n        setUpdateTaxNumberMenu(!updateTaxNumberMenu);\n    };\n\n    const toggleBankAccountMenu = (): void => {\n        setBankAccountMenu(!bankAccountMenu);\n    };\n\n    const toggleBankAccountMenuFailed = (): void => {\n        setBankAccountMenuFailed(!bankAccountMenuFailed);\n    };\n\n    const toggleIDVerification = (): void => {\n        setIdVerificationPopup(!idVerificationPopup);\n    };\n\n    const toggleBankAccountAdded = (): void => {\n        setBankAccountAdded(!bankAccountAdded);\n    };\n\n    const toggleServiceFeePopup = (): void => {\n        setServiceFeePopup(!serviceFeePopup);\n    };\n\n    const defaultBankAccount = async (bankAccountID: string) => {\n        setIsInlineTextLoading({ loading: true, bankAccountID: bankAccountID });\n        const updateDefaultPayoutMethodParams: UpdateDefaultPayoutMethodParams = {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                accountID: userHostModel?.stripeAccountID as string,\n                bankAccountID: bankAccountID,\n            },\n        };\n\n        await callApi(\"post\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/payout/method/default\", updateDefaultPayoutMethodParams)\n            .then(async (res: UpdateDefaultPayoutMethodResponse): Promise<void> => {\n                await fetchStripeAccount();\n                setIsInlineTextLoading({ loading: false, bankAccountID: null });\n            })\n            .catch((err: any) => {\n                setIsInlineTextLoading({ loading: false, bankAccountID: null });\n                console.log(err);\n            });\n    };\n\n    const deleteBankAccount = async (bankAccountID: string) => {\n        setIsInlineTextLoading({ loading: true, bankAccountID: bankAccountID });\n\n        const deletePayoutMethodParams: DeletePayoutMethodApiParams = {\n            headers: {\n                Authorization: accessToken,\n            },\n            body: {\n                accountID: userHostModel?.stripeAccountID as string,\n                bankAccountID: bankAccountID,\n            },\n        };\n        await callApi(\"del\", `${process.env.REACT_APP_ENV}-anystay-user`, \"user/payout/method\", deletePayoutMethodParams)\n            .then(async (res: DeletePayoutMethodApiResponse): Promise<void> => {\n                await fetchStripeAccount();\n                setIsInlineTextLoading({ loading: false, bankAccountID: null });\n            })\n            .catch((err: any) => {\n                setIsInlineTextLoading({ loading: false, bankAccountID: null });\n                console.log(err);\n            });\n    };\n\n    return (\n        <Fragment>\n            <HelmetTags title=\"Profile | Anystay\" />\n            <PaymentSettingsWrapper>\n                <PaymentSettingsTitleWrapper>\n                    <BackBtn onClick={() => navigate(\"/settings\")} type=\"Arrow\" mobileLeft={24} mobileTop={24} />\n                    <PaymentSettingsTitle>Payments & payouts</PaymentSettingsTitle>\n                </PaymentSettingsTitleWrapper>\n                <PaymentSettingsContentWrapper>\n                    <PaymentSettingsDesktopWrapper>\n                        <PaymentSettingsMenuWrapper>\n                            {/* <PaymentSettingsMenuItem style={{gridRow: \"1/2\", gridColumn: \"1/2\"}} selected={false}>\n                                Paymentimport { AddIdentityDocumentButton } from './payoutSettingsStyling';\n                            </PaymentSettingsMenuItem> */}\n                            <PaymentSettingsMenuItem selected={false} onClick={() => navigate(\"/payment-settings/\")}>\n                                Payment\n                            </PaymentSettingsMenuItem>\n                            <PaymentSettingsMenuItem selected={true}>Payout</PaymentSettingsMenuItem>\n                        </PaymentSettingsMenuWrapper>\n                        <PaymentMethodsWrapper>\n                            <PaymentMethodsTitle>Payout method</PaymentMethodsTitle>\n                            <PaymentMethodsSubtitle style={{ marginBottom: \"24px\", color: \"#222222\", fontSize: \"16px\", lineHeight: \"24px\", marginTop: \"4px\" }}>\n                                Payments received for bookings are paid via our secure payout system.&nbsp;\n                                <span>Currently, we only accept Australian bank accounts.</span>\n                            </PaymentMethodsSubtitle>\n                            {bankAccounts.length !== 0 ? (\n                                bankAccounts.map((bankAccount, index) => {\n                                    return (\n                                        <PaymentMethod key={index}>\n                                            <PaymentMethodText>\n                                                {bankAccount.bank_name} {bankAccount.last4} {bankAccount.default_for_currency && \"(Default)\"}\n                                            </PaymentMethodText>\n                                            <PaymentMethodButtonWrapper>\n                                                {isInlineTextLoading.loading && isInlineTextLoading.bankAccountID === bankAccount.id ? (\n                                                    <InlineTextLoading />\n                                                ) : (\n                                                    <>\n                                                        {!bankAccount.default_for_currency && (\n                                                            <>\n                                                                <PaymentMethodButton\n                                                                    disabled={isInlineTextLoading.loading}\n                                                                    onClick={async () => defaultBankAccount(bankAccount.id)}\n                                                                    selected={!bankAccount.default_for_currency}\n                                                                >\n                                                                    Default\n                                                                </PaymentMethodButton>\n                                                                <PaymentMethodButton\n                                                                    disabled={isInlineTextLoading.loading}\n                                                                    onClick={async () => deleteBankAccount(bankAccount.id)}\n                                                                    style={{ marginLeft: \"16px\" }}\n                                                                    selected={!bankAccount.default_for_currency}\n                                                                >\n                                                                    Remove\n                                                                </PaymentMethodButton>\n                                                            </>\n                                                        )}\n                                                    </>\n                                                )}\n                                            </PaymentMethodButtonWrapper>\n                                        </PaymentMethod>\n                                    );\n                                })\n                            ) : (\n                                <PaymentMethod\n                                    onClick={toggleBankAccountMenu}\n                                    style={{\n                                        cursor: \"pointer\",\n                                    }}\n                                >\n                                    <PaymentMethodText>Not connected</PaymentMethodText>\n                                    <PaymentMethodButton selected={true} onClick={toggleBankAccountMenu}>\n                                        Add\n                                    </PaymentMethodButton>\n                                </PaymentMethod>\n                            )}\n                            <AddPaymentMethodButtonDesktop type=\"button\" onClick={toggleBankAccountMenu}>\n                                Add payout method\n                            </AddPaymentMethodButtonDesktop>\n                        </PaymentMethodsWrapper>\n                        <PaymentMethodsWrapper style={{ marginTop: \"48px\" }}>\n                            <PaymentMethodsTitleWrapper>\n                                <PaymentMethodsTitle>Payout details</PaymentMethodsTitle>\n                            </PaymentMethodsTitleWrapper>\n                            <PaymentMethodsSubtitle style={{ maxWidth: \"400px\" }}>Provide and update your details.</PaymentMethodsSubtitle>\n                        </PaymentMethodsWrapper>\n                        <PayoutSettingsDetails>\n                            <PayoutSettingsHoverWrapper>\n                                <PayoutSettingsInputWrapper onClick={toggleAdressMenu}>\n                                    <PayoutSettingsInputTitleWrapper>\n                                        <PayoutSettingsInputTitle>Address</PayoutSettingsInputTitle>\n                                        <PayoutSettingsInputButton type=\"button\" onClick={toggleAdressMenu}>\n                                            Edit\n                                        </PayoutSettingsInputButton>\n                                    </PayoutSettingsInputTitleWrapper>\n                                    <PayoutSettingsInputText>\n                                        {stripeAccount\n                                            ? stripeAccount?.individual\n                                                ? stripeAccount?.individual?.address?.city &&\n                                                  stripeAccount.individual.address.country &&\n                                                  stripeAccount.individual.address.state &&\n                                                  stripeAccount.individual.address.line1\n                                                    ? `${stripeAccount.individual.address.line1}, ${stripeAccount.individual.address.city}, ${stripeAccount.individual.address.state}, ${stripeAccount.individual.address.country}`\n                                                    : \"Add payout address\"\n                                                : \"Add payout address\"\n                                            : \"Add payout address\"}\n                                    </PayoutSettingsInputText>\n                                </PayoutSettingsInputWrapper>\n                            </PayoutSettingsHoverWrapper>\n\n                            {stripeAccount && bankAccounts.length > 0 && (\n                                <PayoutSettingsHoverWrapper>\n                                    <PayoutSettingsInputWrapper onClick={toggleIDVerification}>\n                                        <PayoutSettingsInputTitleWrapper>\n                                            <PayoutSettingsInputTitle>Government ID</PayoutSettingsInputTitle>\n                                            <PayoutSettingsInputButton\n                                                type=\"button\"\n                                                onClick={toggleIDVerification}\n                                                style={{ display: stripeAccount?.individual?.verification?.status === \"verified\" ? \"none\" : \"block\" }}\n                                            >\n                                                Edit\n                                            </PayoutSettingsInputButton>\n                                        </PayoutSettingsInputTitleWrapper>\n                                        <PayoutSettingsInputText>\n                                            {stripeAccount.individual &&\n                                                // stripeAccount.individual.verification.status\n                                                (stripeAccount?.individual?.verification?.status === \"verified\"\n                                                    ? \"Verified\"\n                                                    : stripeAccount?.individual?.verification?.status === \"pending\"\n                                                      ? \"Pending\"\n                                                      : stripeAccount?.individual?.verification?.details_code && stripeAccount.individual.verification.details_code.includes(\"failed\")\n                                                        ? \"Verification failed\"\n                                                        : stripeAccount?.individual?.verification?.status === \"unverified\"\n                                                          ? \"Not verified\"\n                                                          : \"\")}\n                                        </PayoutSettingsInputText>\n                                    </PayoutSettingsInputWrapper>\n                                </PayoutSettingsHoverWrapper>\n                            )}\n                            {stripeAccount && (\n                                <PayoutSettingsHoverWrapper>\n                                    <PayoutSettingsInputWrapper onClick={toggleTaxNumber}>\n                                        <PayoutSettingsInputTitleWrapper>\n                                            <PayoutSettingsInputTitle>Taxes</PayoutSettingsInputTitle>\n                                            <PayoutSettingsInputButton type=\"button\" onClick={toggleTaxNumber}>\n                                                Edit\n                                            </PayoutSettingsInputButton>\n                                        </PayoutSettingsInputTitleWrapper>\n                                        <PayoutSettingsInputText>{stripeAccount.company ? (stripeAccount.company.tax_id_provided ? \"Provided\" : \"None\") : \"\"}</PayoutSettingsInputText>\n                                    </PayoutSettingsInputWrapper>\n                                </PayoutSettingsHoverWrapper>\n                            )}\n                            {/* <PayoutSettingsInputWrapper>\n                                <PayoutSettingsInputTitleWrapper>\n                                    <PayoutSettingsInputTitle>Service fee</PayoutSettingsInputTitle>\n                                    <PayoutSettingsInputButton type=\"button\" onClick={() => toggleServiceFeePopup()}>View</PayoutSettingsInputButton>\n                                </PayoutSettingsInputTitleWrapper>\n                                <PayoutSettingsInputText style={{ marginBottom: \"16px\" }}>{userHostModel ? userHostModel.standardServiceFee && \"Standard (7.5% - 13.5%)\" : \"\"}</PayoutSettingsInputText>\n                            </PayoutSettingsInputWrapper> */}\n                        </PayoutSettingsDetails>\n\n                        <AddPaymentMethodButtonWrapper>\n                            <AddPaymentMethodButton type=\"button\" onClick={toggleBankAccountMenu}>\n                                Add payout method\n                            </AddPaymentMethodButton>\n                        </AddPaymentMethodButtonWrapper>\n                    </PaymentSettingsDesktopWrapper>\n                    <PaymentSettingsDesktopMenu>\n                        <PaymentSettingsDesktopMenuIcon src={\"https://d292awxalydr86.cloudfront.net/Universal+icons/Payment+safety.svg\"} alt=\"Payments icon\" />\n                        <PaymentSettingsDesktopMenuText>Payouts are sent 24 hours after check-in and may take up to 5 business days to arrive.</PaymentSettingsDesktopMenuText>\n                    </PaymentSettingsDesktopMenu>\n                </PaymentSettingsContentWrapper>\n            </PaymentSettingsWrapper>\n            {bankAccountMenu && (\n                <AddBankAccount\n                    addressVerified={addressVerified}\n                    idVerified={idVerified}\n                    toggleIDVerification={toggleIDVerification}\n                    toggleAdressMenu={toggleAdressMenu}\n                    toggleIdVerifyFlag={toggleIdVerifyFlag}\n                    togglePreviousPageFlag={togglePreviousPageFlag}\n                    fetchStripeAccount={fetchStripeAccount}\n                    bankAccountMenu={bankAccountMenu}\n                    toggleBankAccountMenu={toggleBankAccountMenu}\n                    toggleBankAccountMenuFailed={toggleBankAccountMenuFailed}\n                    toggleBankAccountAdded={toggleBankAccountAdded}\n                    accessToken={accessToken}\n                />\n            )}\n            {updateAddressMenu && (\n                <AddPayoutAddress\n                    toggleAdressMenu={toggleAdressMenu}\n                    toggleAdressMenuManual={toggleAdressMenuManual}\n                    updateAddressMenu={updateAddressMenu}\n                    toggleIDVerification={toggleIDVerification}\n                    IdVerifyFlag={idVerifyFlag}\n                    previousPageFlag={previousPageFlag}\n                    togglePreviousPageFlag={togglePreviousPageFlag}\n                    toggleBankAccountMenu={toggleBankAccountMenu}\n                    accessToken={accessToken}\n                />\n            )}\n\n            {updateAddressMenuManual && (\n                <AddPayoutAddressManual\n                    toggleAdressMenuManual={toggleAdressMenuManual}\n                    updateAddressMenuManual={updateAddressMenuManual}\n                    IdVerifyFlag={idVerifyFlag}\n                    togglePreviousPageFlag={togglePreviousPageFlag}\n                    accessToken={accessToken}\n                    toggleIDVerification={toggleIDVerification}\n                    toggleIdVerifyFlag={toggleIdVerifyFlag}\n                />\n            )}\n\n            {updateTaxNumberMenu && <AddTaxNumber toggleTaxNumber={toggleTaxNumber} taxNumberMenu={updateTaxNumberMenu} accessToken={accessToken} />}\n\n            {bankAccountMenuFailed && (\n                <AddBankAccountFailed\n                    bankAccountMenuFailed={bankAccountMenuFailed}\n                    toggleBankAccountMenu={toggleBankAccountMenu}\n                    toggleBankAccountMenuFailed={toggleBankAccountMenuFailed}\n                    toggleIdVerifyFlag={toggleIdVerifyFlag}\n                    IdVerifyFlag={idVerifyFlag}\n                    togglePreviousPageFlag={togglePreviousPageFlag}\n                />\n            )}\n            {idVerificationPopup && (\n                <IdVerification\n                    toggleIDVerification={toggleIDVerification}\n                    selected={idVerificationPopup}\n                    toggleIdVerifyFlag={toggleIdVerifyFlag}\n                    toggleBankAccountAdded={toggleBankAccountAdded}\n                    previousPageFlag={previousPageFlag}\n                    togglePreviousPageFlag={togglePreviousPageFlag}\n                    toggleBankAccountMenu={toggleBankAccountMenu}\n                    toggleAdressMenu={toggleAdressMenu}\n                    toggleAdressMenuManual={toggleAdressMenuManual}\n                    IdVerifyFlag={idVerifyFlag}\n                    accessToken={accessToken}\n                />\n            )}\n            {bankAccountAdded && <BankAccountAdded toggleBankAccountAdded={toggleBankAccountAdded} />}\n            {serviceFeePopup && <ServiceFeePopup selected={serviceFeePopup} standardServiceFee={userHostModel?.standardServiceFee as boolean} toggleServiceFeePopup={toggleServiceFeePopup} />}\n        </Fragment>\n    );\n};\n\nexport default PayoutSettings;\n","import { selector } from \"recoil\";\nimport { stripeAccountState } from \"../atoms/stripeAccount\";\nimport { Stripe } from \"stripe\";\n\nexport const stripeAccountSelector = selector<Stripe.Account | null>({\n    key: \"stripeAccountSelector\",\n    get: ({ get }) => get(stripeAccountState),\n    set: ({ set }, newValue) => set(stripeAccountState, newValue),\n});\n"],"names":["InlineLoadingSpinnerComponent","styled","span","ColorTheme","Grey1","color","keyframes","White","props","_jsx","PaymentSettingsWrapper","div","PaymentSettingsDesktopWrapper","PaymentSettingsDesktopMenu","BorderRadiusTheme","radius_12","borderRadius","SpacingTheme","spacing_400","padding","Grey2","PaymentSettingsTitleWrapper","PaymentSettingsTitle","p","TextTheme","sans_900_semi","fontSize","fontWeight","lineHeight","sans_1000_bold","PaymentSettingsContentWrapper","PaymentSettingsMenuWrapper","gap","PaymentSettingsMenuItem","button","ButtonTheme","sans_button_200","selected","Black","Grey","RecentTransactionsWrapper","RecentTransactionsTitle","sans_600_bold","InfinitScrollLoadingSpinner","RecentTransactionsContent","RecentTransactionsContentWrapper","RecentTransactionEmptyTitle","sans_700_semi","RecentTransactionEmptySubtitle","sans_500","PaymentSettingsDesktopMenuIcon","img","PaymentSettingsDesktopMenuText","TallTextTheme","sans_text_300","PayoutPaymentLink","Link","PaymentsMenuItemButtonIcon","PaymentsIconButton","sans_300","margin","PaymentMethodsWrapper","PaymentMethodsTitle","PaymentMethodsSubtitle","sans_200_semi","PaymentMethodsTitleWrapper","PaymentMethod","spacing_250","PaymentMethodText","sans_400_semi","PaymentMethodButtonWrapper","PaymentMethodButton","sans_button_100","AddPaymentMethodButtonDesktop","AddPaymentMethodButtonWrapper","AddPaymentMethodButton","AddCardElementSubtitle","ShadowTheme","shadow_300","boxShadow","addCard","spacing_300","sans_400","sans_300_semi","PayoutSettingsDetails","form","Blue","sans_200","PayoutSettingsHoverWrapper","Grey5","PayoutSettingsInputWrapper","PayoutSettingsInputTitleWrapper","PayoutSettingsInputTitle","PayoutSettingsInputButton","PayoutSettingsInputText","AddPayoutAddressAutocompleteTitle","sans_500_semi","AddPayoutAddressAutocompleteSubtitle","invalid","Red1","AddPayoutAddressWrapper","AddPayoutAddressManualWrapper","AddPayoutAddressTitle","spacing_500","AddPayoutAddressSubtitle","AddPayoutAddressInputWrapper","AddPayoutAddressInputWrapperWide","AddPayoutAddressInput","input","AddPayoutAddressLabel","label","AddBankAccountInputWrapper","disabled","spacing_200","AddBankAccountInput","AddBankAccountLabel","AddBankAccountDoubleInputWrapper","AddIdentityDocumentWrapper","AddPayoutAddAdressAutocompleteInputWrapper","AddPayoutAddAdressAutocompleteInput","Autocomplete","AutocompleteClearButton","Grey3","AutocompleteClearButtonIcon","AddIdentityDocumentTitle","AddIdentityDocumentSubtitle","AddIdentityDocumentButton","uploaded","AddIdentityDocumentImageContainer","AddIdentityDocumentImageWrapper","AddIdentityDocumentImage","AddIdentityDocumentImageDeleteButton","radius_8","AddIdentityDocumentImageDeleteButtonIcon","BankAccountAddedWrapper","BankAccountAddedIcon","BankAccountAddedTitle","sans_600_semi","BankAccountAddedSubtitle","BankAccountAddedDoneButton","PaymentSettingsServiceFeeWrapper","PaymentSettingsServiceFeeTitle","PaymentSettingsServiceFeeSubtitle","PaymentSettingsServiceFeeWarning","AddPayoutFailedIcon","AddPayoutFailedTitle","sans_800_bold","AddPayoutFailedSubtitle","_ref","standardServiceFee","toggleServiceFeePopup","standardServiceFeeBoolean","setStandardServiceFeeBoolean","useState","menuIndex","setMenuIndex","serviceFeePopupRef","useClickOutside","GlobalPopupContainerCenter","ref","backBtnType","closePopup","noContinueBtn","children","_jsxs","onClick","style","IdVerifyFlag","toggleIdVerifyFlag","togglePreviousPageFlag","toggleIDVerification","accessToken","toggleBankAccountAdded","previousPageFlag","toggleAdressMenu","toggleAdressMenuManual","toggleBankAccountMenu","verifying","setVerifying","verifyFail","setVerifyFail","idDocuments","setIdDocuments","hiddenFileInput","useRef","isContinueBtnLoading","setIsContinueBtnLoading","addIDRef","handleClickOutside","stripeAccount","setStripeAccount","useRecoilState","stripeAccountSelector","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","addIdDocument","useCallback","idDocument","prevState","makeid","length","characters","i","charAt","Math","floor","random","onDrop","async","acceptedFileTypes","filteredFiles","acceptedFiles","filter","includes","type","console","log","all","map","base64","id","data","forEach","fileData","getRootProps","getInputProps","useDropzone","_Fragment","goback","handleSave","images","copyStripeHostAccount","JSON","parse","stringify","split","push","callApi","body","headers","Authorization","then","res","success","individual","verification","status","details_code","catch","err","onSubmit","cancelPopup","handleCancel","disable","handleFileClick","_hiddenFileInput$curr","current","click","name","onChange","e","target","files","Array","from","display","multiple","event","currentTarget","value","item","src","alt","documents","removeIdDocument","bankAccountMenuFailed","toggleBankAccountMenuFailed","addBankAccountFailedRef","handleClose","btnText","alignItems","bankAccountMenu","addressVerified","idVerified","fetchStripeAccount","addBankAccountRef","accountName","setAccountName","bsb","setBsb","accountNumber","setAccountNumber","userHostModel","setUserHostModel","userHostModelSelector","addPayoutMethodParams","accountID","stripeAccountID","bankAccountData","marginBottom","href","filteredValue","replace","width","setter","addAc","taxNumberMenu","toggleTaxNumber","taxNumber","setTaxNumber","addTaxNumberRef","updateTaxNumberParams","taxnumber","company","tax_id_provided","updateTaxNumber","placeholder","countryMapping","Australia","default","updateAddressMenuManual","addPayoutAddressManualRef","addressComponent","setAddressComponent","city","unitNumber","streetAddress","state","postcode","country","stripeHostAccount","setStripeHostAccount","updateStripeAccount","street","postal_code","stripeHostAccountCopy","address","line1","formatStripeHostAccount","btnColor","updateAddressMenu","addPayoutAddressRef","place","setPlace","setAddress","didNotSelectFromDropdown","setDidNotSelectFromDropdown","wrapperRef","useEffect","_stripeHostAccount$in","_stripeHostAccount$in2","line2","updateUserAddressParams","cancelBtnText","minHeight","apiKey","process","onPlaceSelected","_place$address_compon","_place$address_compon2","_place$address_compon3","_place$address_compon4","_place$address_compon5","_place$address_compon6","_place$address_compon7","_place$address_compon8","_streetNumber$","_street$","_suburb$","_state$","_country$","_city$","_postcode$","subpremise","address_components","obj","types","streetNumber","suburb","unitNumberFormatted","long_name","streetNumberFormatted","streetFormatted","suburbFormatted","stateFormatted","short_name","countryFormatted","cityFormatted","postcodeFormatted","options","componentRestrictions","onMouseDown","paddingBottom","PayoutSettings","_stripeAccount$indivi15","_stripeAccount$indivi16","_stripeAccount$indivi17","_stripeAccount$indivi18","_stripeAccount$indivi19","_stripeAccount$indivi20","_stripeAccount$indivi21","_stripeAccount$indivi22","_stripeAccount$indivi23","_stripeAccount$indivi24","_stripeAccount$indivi25","_stripeAccount$indivi26","setAccessToken","accessTokenSelector","navigate","useNavigate","setUpdateAddressMenu","updateTaxNumberMenu","setUpdateTaxNumberMenu","setBankAccountMenu","setBankAccountMenuFailed","bankAccountAdded","setBankAccountAdded","serviceFeePopup","setServiceFeePopup","idVerificationPopup","setIdVerificationPopup","setUpdateAddressMenuManual","setAddressVerified","setIdVerified","idVerifyFlag","setIdVerifyFlag","setPreviousPageFlag","bankAccounts","setBankAccounts","isInlineTextLoading","setIsInlineTextLoading","loading","bankAccountID","updateVerifyStatus","_stripeAccount$indivi","_stripeAccount$indivi2","_stripeAccount$indivi3","_stripeAccount$indivi4","_stripeAccount$indivi5","_stripeAccount$indivi6","_stripeAccount$indivi7","_stripeAccount$indivi8","_stripeAccount$indivi9","_stripeAccount$indivi10","_stripeAccount$indivi11","_stripeAccount$indivi12","_stripeAccount$indivi13","_stripeAccount$indivi14","Boolean","getPayoutMethodsParams","pageIdx","Fragment","HelmetTags","title","BackBtn","mobileLeft","mobileTop","marginTop","bankAccount","index","bank_name","last4","default_for_currency","InlineTextLoading","updateDefaultPayoutMethodParams","defaultBankAccount","deletePayoutMethodParams","deleteBankAccount","marginLeft","cursor","maxWidth","AddBankAccount","AddPayoutAddress","AddPayoutAddressManual","AddTaxNumber","AddBankAccountFailed","IdVerification","BankAccountAdded","ServiceFeePopup","selector","key","get","stripeAccountState","set","_ref2","newValue"],"mappings":"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","debug_id":"95ee2759-780f-57b6-b5dc-afe3ff4ff86a"}