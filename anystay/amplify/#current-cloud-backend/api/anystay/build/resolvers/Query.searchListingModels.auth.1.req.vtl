## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#set( $totalFields = ["id","createdAt","owner","placeId","unitNumber","streetNumber","street","suburb","postcode","state","city","country","beds","bedrooms","bathrooms","propertyType","typeOfPlace","propertyDescription","propertyDescriptionEmbedding","propertySoftEmbedding","trainingEvolutions","translatedPropertyDescription","listingImages","status","amenities","categories","tags","deposit","guests","minimumStay","minimumPrice","maximumPrice","nightlyPrices","maximumStay","weeklyMinimumPrice","weeklyMaximumStay","location","propertyTitle","internalName","translatedPropertyTitle","houseRules","draft","verified","verifiedDocuments","weeklyDiscount","monthlyDiscount","cleaningFee","cleaningFrequency","availabilityRange","rooms","RoomModels","userhostmodelID","UserHostModel","ProductModels","BookingRequestModels","ReviewStayModels","overallAverage","communicationAverage","amenitiesAverage","cleaningAverage","locationAverage","serviceAverage","valueAverage","cancellationPolicy","onceOffPaymentsOnly","instantBookEnabled","stayType","averageStayLength","checkInTime","checkOutTime","checkInInstructions","checkOutInstructions","timeBeforeCheckIn","timeAfterCheckOut","extraGuestFee","extraMaxGuests","disabledDates","unavailableDates","iCalUnavailableDates","iCalImportLinks","straID","advanceNotice","advanceNoticeTime","approved","standardServiceFee","fliggyApproved","fliggyHidden","fliggyID","totalBookings","wifiName","wifiPassword","updatedAt"] )
#set( $allowedAggFields = ["updatedAt","id","createdAt","owner","placeId","unitNumber","streetNumber","street","suburb","postcode","state","city","country","beds","bedrooms","bathrooms","propertyType","typeOfPlace","propertyDescription","propertyDescriptionEmbedding","propertySoftEmbedding","trainingEvolutions","translatedPropertyDescription","listingImages","status","amenities","categories","tags","deposit","guests","minimumStay","minimumPrice","maximumPrice","nightlyPrices","maximumStay","weeklyMinimumPrice","weeklyMaximumStay","location","propertyTitle","internalName","translatedPropertyTitle","houseRules","draft","verified","verifiedDocuments","weeklyDiscount","monthlyDiscount","cleaningFee","cleaningFrequency","availabilityRange","rooms","RoomModels","userhostmodelID","UserHostModel","ProductModels","BookingRequestModels","ReviewStayModels","overallAverage","communicationAverage","amenitiesAverage","cleaningAverage","locationAverage","serviceAverage","valueAverage","cancellationPolicy","onceOffPaymentsOnly","instantBookEnabled","stayType","averageStayLength","checkInTime","checkOutTime","checkInInstructions","checkOutInstructions","timeBeforeCheckIn","timeAfterCheckOut","extraGuestFee","extraMaxGuests","disabledDates","unavailableDates","iCalUnavailableDates","iCalImportLinks","straID","advanceNotice","advanceNoticeTime","approved","standardServiceFee","fliggyApproved","fliggyHidden","fliggyID","totalBookings","wifiName","wifiPassword"] )
#if( $util.authType() == "IAM Authorization" )
  #foreach( $adminRole in $ctx.stash.adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #set( $allowedAggFields = $totalFields )
      $util.qr($ctx.stash.put("allowedAggFields", $allowedAggFields))
      #return($util.toJson({}))
    #end
  #end
  #if( !$isAuthorized )
    #if( ($ctx.identity.userArn == $ctx.stash.authRole) || ($ctx.identity.cognitoIdentityPoolId == $ctx.stash.identityPoolId && $ctx.identity.cognitoIdentityAuthType == "authenticated") )
      #set( $isAuthorized = true )
      #set( $allowedAggFields = $totalFields )
    #end
  #end
#end
#if( $util.authType() == "User Pool Authorization" )
  #set( $authFilterConditions = [] )
  #set( $ownerClaim0 = $util.defaultIfNull($ctx.identity.claims.get("sub"), null) )
  #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null)) )
  #if( !$util.isNull($ownerClaim0) && !$util.isNull($currentClaim1) )
    #set( $ownerClaim0 = "$ownerClaim0::$currentClaim1" )
    #set( $ownerClaimsList0 = [] )
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("sub"), null)))
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null))))
    $util.qr($ownerClaimsList0.add($ownerClaim0))
    #set( $owner0 = {
  "terms_set": {
      "owner.keyword": {
          "terms": $ownerClaimsList0,
          "minimum_should_match_script": {
              "source": "1"
      }
    }
  }
} )
    $util.qr($authFilterConditions.add($owner0))
  #end
  #if( !$isAuthorized && !$authFilterConditions.isEmpty() )
    $util.qr($ctx.stash.put("authFilter", {
  "bool": {
      "should": $authFilterConditions
  }
}))
  #end
#end
$util.qr($ctx.stash.put("allowedAggFields", $allowedAggFields))
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **