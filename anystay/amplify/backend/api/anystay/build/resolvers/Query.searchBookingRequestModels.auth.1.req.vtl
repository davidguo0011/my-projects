## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#set( $totalFields = ["id","owners","arrivalDate","departureDate","guests","adults","children","infants","pets","maxGuests","expired","usermodelID","userhostmodelID","listingmodelID","paymentmodelID","stripeAccountID","confirmationCode","conversationmodelID","ordermodelID","confirmed","confirmedAt","couponCode","couponDiscountAmount","declined","reasonDeclined","cancelled","cancelledAt","cancelledBy","reasonCancelled","completed","stayReviewed","guestReviewed","checkInTime","checkOutTime","cancellationPolicy","timeBeforeCheckIn","timeAfterCheckOut","bookingAmount","bookingAmountIncludingServiceFee","paymentAmount","pricePerNight","guestPriceBreakdown","hostPriceBreakdown","nightlyPrices","serviceFee","cleaningFee","extraGuestFee","extraMaxGuests","weeklyDiscount","monthlyDiscount","paymentModels","transferModels","refundModels","transferReversalModels","UserModel","UserHostModel","ListingModel","ConversationModel","OrderModels","ChangeBookingRequestModel","RefundRequestModel","ReviewStayModel","deposit","refundedAmount","standardServiceFee","hostPaid","responseNeeded","responseBeofre","createdAt","updatedAt"] )
#set( $allowedAggFields = ["createdAt","updatedAt","id","owners","arrivalDate","departureDate","guests","adults","children","infants","pets","maxGuests","expired","usermodelID","userhostmodelID","listingmodelID","paymentmodelID","stripeAccountID","confirmationCode","conversationmodelID","ordermodelID","confirmed","confirmedAt","couponCode","couponDiscountAmount","declined","reasonDeclined","cancelled","cancelledAt","cancelledBy","reasonCancelled","completed","stayReviewed","guestReviewed","checkInTime","checkOutTime","cancellationPolicy","timeBeforeCheckIn","timeAfterCheckOut","bookingAmount","bookingAmountIncludingServiceFee","paymentAmount","pricePerNight","guestPriceBreakdown","hostPriceBreakdown","nightlyPrices","serviceFee","cleaningFee","extraGuestFee","extraMaxGuests","weeklyDiscount","monthlyDiscount","paymentModels","transferModels","refundModels","transferReversalModels","UserModel","UserHostModel","ListingModel","ConversationModel","OrderModels","ChangeBookingRequestModel","RefundRequestModel","ReviewStayModel","deposit","refundedAmount","standardServiceFee","hostPaid","responseNeeded","responseBeofre"] )
#if( $util.authType() == "IAM Authorization" )
  #set( $adminRoles = ["ap-southeast-2_laYMp7oIZ_Full-access/CognitoIdentityCredentials","ap-southeast-2_laYMp7oIZ_Manage-only/CognitoIdentityCredentials","anystay-backend-dev-ap-southeast-2-lambdaRole","anystay-user-dev-ap-southeast-2-lambdaRole","anystay-booking-dev-ap-southeast-2-lambdaRole","anystay-listing-dev-ap-southeast-2-lambdaRole","anystay-product-dev-ap-southeast-2-lambdaRole","anystay-auth-dev-ap-southeast-2-lambdaRole","anystay-admin-dev-ap-southeast-2-lambdaRole","anystay-authorizers-dev-ap-southeast-2-lambdaRole","arn:aws:iam::751336295962:user/Ferdy","arn:aws:iam::751336295962:user/Hao","arn:aws:iam::751336295962:user/Ferdy-CLI-Test","arn:aws:iam::751336295962:user/Richard","arn:aws:iam::751336295962:user/Lewis-dev","arn:aws:iam::751336295962:user/rey-dev"] )
  #foreach( $adminRole in $adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #set( $allowedAggFields = $totalFields )
      $util.qr($ctx.stash.put("allowedAggFields", $allowedAggFields))
      #return($util.toJson({}))
    #end
  #end
  #if( !$isAuthorized )
    #if( ($ctx.identity.userArn == $ctx.stash.authRole) || ($ctx.identity.cognitoIdentityPoolId == "ap-southeast-2:b71f4e0a-c244-4468-b65b-c1facac1d44c" && $ctx.identity.cognitoIdentityAuthType == "authenticated") )
      #set( $isAuthorized = true )
      #set( $allowedAggFields = $totalFields )
    #end
  #end
#end
#if( $util.authType() == "User Pool Authorization" )
  #set( $authFilterConditions = [] )
  #set( $ownerClaim0 = $util.defaultIfNull($ctx.identity.claims.get("sub"), null) )
  #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null)) )
  #if( !$util.isNull($ownerClaim0) && !$util.isNull($currentClaim1) )
    #set( $ownerClaim0 = "$ownerClaim0::$currentClaim1" )
    #set( $ownerClaimsList0 = [] )
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("sub"), null)))
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null))))
    $util.qr($ownerClaimsList0.add($ownerClaim0))
    #set( $owner0 = {
  "terms_set": {
      "owners": {
          "terms": $ownerClaimsList0,
          "minimum_should_match_script": {
              "source": "1"
      }
    }
  }
} )
    $util.qr($authFilterConditions.add($owner0))
  #end
  #if( !$isAuthorized && !$authFilterConditions.isEmpty() )
    $util.qr($ctx.stash.put("authFilter", {
  "bool": {
      "should": $authFilterConditions
  }
}))
  #end
#end
$util.qr($ctx.stash.put("allowedAggFields", $allowedAggFields))
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **