## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#set( $primaryFieldMap = {} )
#if( $util.authType() == "IAM Authorization" )
  #set( $adminRoles = ["ap-southeast-2_laYMp7oIZ_Full-access/CognitoIdentityCredentials","ap-southeast-2_laYMp7oIZ_Manage-only/CognitoIdentityCredentials","anystay-backend-dev-ap-southeast-2-lambdaRole","anystay-user-dev-ap-southeast-2-lambdaRole","anystay-booking-dev-ap-southeast-2-lambdaRole","anystay-listing-dev-ap-southeast-2-lambdaRole","anystay-product-dev-ap-southeast-2-lambdaRole","anystay-auth-dev-ap-southeast-2-lambdaRole","anystay-admin-dev-ap-southeast-2-lambdaRole","anystay-authorizers-dev-ap-southeast-2-lambdaRole","arn:aws:iam::751336295962:user/Ferdy","arn:aws:iam::751336295962:user/Hao","arn:aws:iam::751336295962:user/Ferdy-CLI-Test","arn:aws:iam::751336295962:user/Richard","arn:aws:iam::751336295962:user/Lewis-dev","arn:aws:iam::751336295962:user/rey-dev"] )
  #foreach( $adminRole in $adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #return($util.toJson({}))
    #end
  #end
  #if( !$isAuthorized )
    #if( ($ctx.identity.userArn == $ctx.stash.authRole) || ($ctx.identity.cognitoIdentityPoolId == "ap-southeast-2:b71f4e0a-c244-4468-b65b-c1facac1d44c" && $ctx.identity.cognitoIdentityAuthType == "authenticated") )
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( $util.authType() == "User Pool Authorization" )
  #set( $ownerClaim = $util.defaultIfNull($ctx.identity.claims.get("sub"), null) )
  #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null)) )
  #if( !$util.isNull($ownerClaim) && !$util.isNull($currentClaim1) )
    #set( $ownerClaim = "$ownerClaim::$currentClaim1" )
    #set( $ownerClaimsList0 = [] )
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("sub"), null)))
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null))))
    #if( $util.isString($ownerClaim) )
      #if( $util.isList($util.parseJson($ownerClaim)) )
        #set( $ownerClaim = $util.parseJson($ownerClaim) )
      #else
        #set( $ownerClaim = [$ownerClaim] )
      #end
    #end
    $util.qr($ownerClaimsList0.addAll($ownerClaim))
    #if( !$util.isNull($ctx.args.owner) )
      #if( $util.isString($ctx.args.owner) )
        #set( $ownerCondition = (($ownerClaim == $ctx.args.owner) || $ownerClaimsList0.contains($ctx.args.owner)) )
      #else
        #set( $ownerCondition = ($ownerClaim == $util.defaultIfNull($ctx.args.owner.get("eq"), null) || $ownerClaimsList0.contains($util.defaultIfNull($ctx.args.owner.get("eq"), null))) )
        #if( !$ownerCondition )
          #set( $entityValues = 0 )
          #foreach( $argEntity in $ctx.args.owner.get("eq") )
            #if( $ownerClaimsList0.contains($argEntity) )
              #set( $entityValues = $entityValues + 1 )
            #end
          #end
          #if( $entityValues == $ctx.args.owner.get("eq").size() )
            #set( $ownerCondition = true )
          #end
        #end
      #end
      #if( $ownerCondition )
        #set( $isAuthorized = true )
        $util.qr($ctx.stash.put("authFilter", null))
      #end
    #else
      $util.qr($primaryFieldMap.put("owner", $ownerClaimsList0))
    #end
  #end
  #if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) && !$primaryFieldMap.isEmpty() )
    #set( $sortKeyFields = [] )
    #foreach( $entry in $primaryFieldMap.entrySet() )
      #if( $sortKeyFields.contains($entry.key) )
        #set( $entryVal = $entry.value )
        #set( $lastIdx = $entryVal.size() - 1 )
        #set( $lastItem = $entryVal.get($lastIdx) )
        $util.qr($ctx.args.put($entry.key, {
  "eq": $lastItem
}))
      #else
        $util.qr($ctx.args.put($entry.key, $entry.value))
      #end
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **