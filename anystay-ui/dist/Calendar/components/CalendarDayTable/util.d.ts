import { CalendarDayBlockRowCell, CalendarDayFillRowCell, CalendarDayOccupiedRowCell, CalendarDayTableCell, CalendarDayTableOccupiedCell, CalendarDayTableProp, CalendarDayTableSelection } from "./interface";
import 'anystay-ui/Calendar/components/CalendarDayTable/style.less';
import { CalendarBlockRowProp, CalendarFillRowProp, CalendarMonthDate, CalendarOccupiedRowProp, CalendarRowProp, CalendarSelectProp } from "../../interface";
import { Dispatch, SetStateAction } from 'react';
export declare function getColumnBackgroundSelectedStyle(rowIndex: number, columnIndex: number, selection: CalendarDayTableSelection): string;
export declare function getColumnBorderSelectedStyle(rowIndex: number, columnIndex: number, selection: CalendarDayTableSelection): string;
export declare function getCurrentColumnBorderSelectedStyle(rowIndex: number, columnIndex: number, selection: CalendarDayTableSelection): "" | "calendar-day-table-row-column-current-selected-border-container";
export declare function getColumnDisabledStyle(columnIndex: number, subtractDayNumber: number): string;
export declare function getColumBlockStyle(tableCells: CalendarDayTableCell[], rowIndex: number, columnIndex: number): string;
export declare function onMouseDown(rowIndex: number, columnIndex: number, selectionVisible: boolean, setSelectionVisible: Dispatch<SetStateAction<boolean>>, setSelection: Dispatch<SetStateAction<CalendarDayTableSelection>>, subtractDayNumber: number): void;
export declare function clearSelection(setSelectionVisible: Dispatch<SetStateAction<boolean>>): void;
export declare function onMouseOver(rowIndex: number, columnIndex: number, selectionVisible: boolean, selection: CalendarDayTableSelection, setSelection: Dispatch<SetStateAction<CalendarDayTableSelection>>, subtractDayNumber: number): void;
export declare function onMouseUp(selection: CalendarDayTableSelection, tableCells: CalendarDayTableCell[], onSelect?: (prop: CalendarSelectProp) => void): void;
export declare function generateDatesFromStartAndEnd(startDate: string, endDate: string): string[];
export declare function generateFillTableCells(fillRows: CalendarFillRowProp[]): CalendarDayFillRowCell[];
export declare function generateBlockTableCells(blockRows: CalendarBlockRowProp[]): CalendarDayBlockRowCell[];
export declare function getFillRowCell(fillRowCells: CalendarDayFillRowCell[], rowId: string, date: string): CalendarDayFillRowCell;
export declare function getBlockRowCell(blockRowCells: CalendarDayBlockRowCell[], rowId: string, date: string): CalendarDayBlockRowCell;
export declare function generateOccupiedTableCells(occupiedRows: CalendarOccupiedRowProp[]): CalendarDayOccupiedRowCell[];
export declare function getOccupiedRowCell(occupiedRowCells: CalendarDayOccupiedRowCell[], rowId: string, date: string): CalendarDayOccupiedRowCell;
export declare function generateTableCells(monthDate: CalendarMonthDate, rows: CalendarRowProp[], fillRows: CalendarFillRowProp[], blockRows: CalendarBlockRowProp[], occupiedRows: CalendarOccupiedRowProp[]): CalendarDayTableCell[];
export declare function getTableCell(tableCells: CalendarDayTableCell[], rowIndex: number, columnIndex: number): CalendarDayTableCell;
export declare function getTableRowCells(tableCells: CalendarDayTableCell[], rowStartIndex: number, rowEndIndex: number, columnIndex: number): CalendarDayTableCell[];
export declare function getTableColumnCells(tableCells: CalendarDayTableCell[], columnStartIndex: number, columnEndIndex: number, rowIndex: number): CalendarDayTableCell[];
export declare function returnToToday(props: CalendarDayTableProp): void;
export declare function getTableCellOccupiedCondition(tableCells: CalendarDayTableCell[], rowIndex: number, columnIndex: number): boolean;
export declare function getTableCellOccupied(tableCells: CalendarDayTableCell[], rowIndex: number, columnIndex: number, props: CalendarDayTableProp): CalendarDayTableOccupiedCell;
export declare function onOccupiedClick(tableCells: CalendarDayTableCell[], rowIndex: number, columnIndex: number, props: CalendarDayTableProp): void;
